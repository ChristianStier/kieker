<?xml version="1.0" encoding="UTF-8"?>
<project name="Kieker" default="build-all" basedir="." xmlns:artifact="urn:maven-artifact-ant">
    <property file="build.properties"/>

    <property name="TestAspect"
              value="OperationExecutionAspectFull.java"/>

    <path id="pmd.libs">
        <fileset dir="lib/pmd">
            <include name="*.jar"/>
        </fileset>
    </path>

    <target name="init-version">
        <tstamp/>
        <property name="kieker.version"
                  value="1.5-trunk"/> <!-- -20090716-1022 -->
        <property name="dist.kieker.monitoring.jar"
                  value="${kieker.monitoring.packagenamebase}-${kieker.version}.jar"/>
        <property name="dist.kieker.monitoring.servlet.war"
                  value="${kieker.monitoring.servlet.packagenamebase}-${kieker.version}.war"/>
        <property name="dist.kieker.common.jar"
                  value="${kieker.common.packagenamebase}-${kieker.version}.jar"/>
        <property name="dist.kieker.tools.jar"
                  value="${kieker.tools.packagenamebase}-${kieker.version}.jar"/>
        <property name="dist.kieker.analysis.jar"
                  value="${kieker.analysis.packagenamebase}-${kieker.version}.jar"/>

        <property name="kieker.dist.name"
                  value="${kieker.packagenamebase}-${kieker.version}"/>
        <property name="dist.kieker.srcBaseName"
                  value="${kieker.dist.name}_${kieker-src.suffix}"/>
        <property name="dist.kieker.binBaseName"
                  value="${kieker.dist.name}_${kieker-bin.suffix}"/>

        <property name="dist.kieker.example.myexample"
                  value="${kieker.dist.name}_${kieker-examples.suffix}-MySimpleKiekerExample"/>
        <property name="dist.kieker.example.myjmsexample"
                  value="${kieker.dist.name}_${kieker-examples.suffix}-MySimpleKiekerJMSExample"/>
        <property name="dist.kieker.example.jpetstore"
                  value="${kieker.dist.name}_${kieker-examples.suffix}-JPetStoreExample"/>
        <property name="dist.kieker.example.microbenchmark"
                  value="${kieker.dist.name}_${kieker-examples.suffix}-OverheadEvaluationMicrobenchmark"/>
    </target>

    <target name="update-version" unless="version.noupdate"
            depends="init-version">
        <replaceregexp file="${src.kieker.common.dir}/kieker/common/util/Version.java"
                       match="VERSION = &quot;.*?&quot;"
                       replace="VERSION = &quot;${kieker.version}-${DSTAMP}&quot;"/>
        <replaceregexp match="&lt;version&gt;.*?&lt;/version&gt;"
                       replace="&lt;version&gt;${kieker.version}-${DSTAMP}&lt;/version&gt;">
            <fileset dir=".">
                <include name="pom_ant_kieker*.xml"/>
            </fileset>
        </replaceregexp>
    </target>

    <target name="build-all"
            depends="clean,init,build-kieker.monitoring,build-kieker.monitoring-servlet,build-kieker.common,build-kieker.analysis,build-kieker.tools">
    </target>

    <target name="init" depends="update-version">
        <!-- Register special aspectJ commands in ant - allow ant to use special AspectJ commands: -->
        <taskdef resource="org/aspectj/tools/ant/taskdefs/aspectjTaskdefs.properties" classpath="${aspectjtoolsjar}"/>
        <fail message="Critical error: AspectJ library not found
                       in ${aspectjtoolsjar}. 
                       Check your build.properties.">
            <condition>
                <not>
                    <available file="${aspectjtoolsjar}"/>
                </not>
            </condition>
        </fail>
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${dist.dir}"/>
        <mkdir dir="${release.dir}"/>
        <mkdir dir="${build.tests.dir}"/>
        <mkdir dir="tmp"/>
    </target>

    <!-- Build kieker.common  -->
    <target name="build-kieker.common" depends="init">
        <path id="kieker.common-compile-classpath">
            <fileset dir="${lib.dir}">
                <include name="commons-logging-*.jar"/>
            </fileset>
        </path>

        <delete dir="${build.kieker.common.dir}"/>
        <mkdir  dir="${build.kieker.common.dir}"/>
        <!--<mkdir  dir="${build.kieker.common.dir}/META-INF"/>-->
        <javac destDir="${build.kieker.common.dir}"
               source="1.5" target="1.5"
               srcdir="${src.kieker.common.dir}"
               debug="true"
               classpathref="kieker.common-compile-classpath">
            <compilerarg value="-Xlint:all,-path"/>
        </javac>
        <copy file="LICENSE" todir="${build.kieker.common.dir}/"/>
        <jar destfile="${dist.dir}/${dist.kieker.common.jar}">
            <fileset dir="${build.kieker.common.dir}"/>
        </jar>
    </target>

    <target name="build-kieker.monitoring" depends="init,build-kieker.common">
        <path id="kieker.monitoring-compile-classpath">
            <fileset dir="${lib.dir}">
                <include name="commons-logging-*.jar"/>
                <include name="cxf-api-*.jar"/>
                <include name="cxf-common-utilities-*.jar"/>
                <include name="cxf-rt-core-*.jar"/>
                <include name="cxf-rt-bindings-soap-*.jar"/>
                <include name="jms-*.jar"/>
                <include name="servlet-api.jar"/>
                <include name="spring.jar"/>
                <include name="spring-web.jar"/>
            </fileset>
            <fileset dir="${dist.dir}">
                <include name="${dist.kieker.common.jar}"/>
            </fileset>
        </path>
        <path id="kieker.monitoring-ajc-compile-classpath">
            <fileset dir="${lib.dir}">
                <include name="aspectjrt-*.jar"/>
                <include name="commons-logging-*.jar"/>
                <include name="servlet-api.jar"/>
            </fileset>
            <fileset dir="${dist.dir}">
                <include name="${dist.kieker.common.jar}"/>
            </fileset>
            <pathelement location="${build.kieker.monitoring.dir}"/>
        </path>

        <delete dir="${build.kieker.monitoring.dir}"/>
        <mkdir  dir="${build.kieker.monitoring.dir}"/>
        <mkdir  dir="${build.kieker.monitoring.dir}/META-INF"/>
        <javac destDir="${build.kieker.monitoring.dir}"
               source="1.5"
               target="1.5"
               srcdir="${src.kieker.monitoring.dir}"
               debug="true"
               excludes="kieker/monitoring/probe/aspectJ/"
               classpathref="kieker.monitoring-compile-classpath">
            <compilerarg value="-Xlint:all,-path"/>
        </javac>
        <!-- WORKAROUND!!! -->
        <iajc destdir="${build.kieker.monitoring.dir}"
              source="1.5"
              target="1.5"
              Xlint="ignore"
              debug="true"
              classpathref="kieker.monitoring-ajc-compile-classpath">
            <sourceroots>
              <pathelement location="${src.kieker.monitoring.dir}/kieker/monitoring/probe/aspectJ/"/>
            </sourceroots>
        </iajc>
        <copy file="${kieker.monitoring.properties.example}" tofile="${build.kieker.monitoring.dir}/META-INF/kieker.monitoring.properties.default"/>
        <copy file="LICENSE" todir="${build.kieker.monitoring.dir}/"/>
        <jar destfile="${dist.dir}/${dist.kieker.monitoring.jar}">
            <fileset dir="${build.kieker.monitoring.dir}"/>
        </jar>
    </target>

    <target name="build-kieker.monitoring-servlet" depends="init,build-kieker.common,build-kieker.monitoring">
        <path id="kieker.monitoring-servlet-compile-classpath">
            <fileset dir="${lib.dir}">
                <include name="commons-logging-*.jar"/>
                <include name="servlet-api.jar"/>
            </fileset>
            <fileset dir="${dist.dir}">
                <include name="${dist.kieker.common.jar}"/>
                <include name="${dist.kieker.monitoring.jar}"/>
            </fileset>
        </path>

        <delete dir="${build.kieker.monitoring.servlet.dir}"/>
        <mkdir dir="${build.kieker.monitoring.servlet.dir}"/>
        <javac source="1.5" target="1.5"
               destDir="${build.kieker.monitoring.servlet.dir}"
               classpathref="kieker.monitoring-servlet-compile-classpath"
               srcdir="${src.kieker.monitoring-servlet.dir}"
               debug="true"/>
        <war destfile="${dist.dir}/${dist.kieker.monitoring.servlet.war}" webxml="${src.kieker.monitoring-servlet.dir}/kieker/monitoring/servlet/WEB-INF/web.xml">
            <classes dir="${build.kieker.monitoring.servlet.dir}"/>
            <zipfileset dir="${src.kieker.monitoring-servlet.dir}/kieker/monitoring/servlet/images" prefix="images"/>
            <zipfileset file="LICENSE" prefix=""/>
        </war>
    </target>

    <target name="build-kieker.analysis" depends="init,build-kieker.common">
        <path id="kieker.analysis-compile-classpath">
            <fileset dir="${lib.dir}">
                <include name="commons-logging-*.jar"/>
                <include name="rabbitmq-client.jar"/>
                <include name="jms-1.1.jar"/>
            </fileset>
            <fileset dir="${dist.dir}">
                <include name="${dist.kieker.common.jar}"/>
            </fileset>
        </path>

        <delete dir="${build.kieker.analysis.dir}"/>
        <mkdir  dir="${build.kieker.analysis.dir}"/>
        <javac destDir="${build.kieker.analysis.dir}"
               source="1.5" target="1.5"
               srcdir="${src.kieker.analysis.dir}"
               debug="true"
               classpathref="kieker.analysis-compile-classpath">
            <compilerarg value="-Xlint:all,-path"/>
        </javac>
        <copy file="LICENSE" todir="${build.kieker.analysis.dir}/"/>
        <jar destfile="${dist.dir}/${dist.kieker.analysis.jar}">
            <fileset dir="${build.kieker.analysis.dir}"/>
        </jar>
    </target>

    <target name="build-kieker.tools" depends="init,build-kieker.common,build-kieker.monitoring,build-kieker.analysis">
        <path id="kieker.tools-compile-classpath">
            <fileset dir="${lib.dir}">
                <include name="commons-cli-*.jar"/>
                <include name="commons-logging-*.jar"/>
            </fileset>
            <fileset dir="${dist.dir}">
                <include name="${dist.kieker.common.jar}"/>
                <include name="${dist.kieker.monitoring.jar}"/>
                <include name="${dist.kieker.analysis.jar}"/>
            </fileset>
        </path>

        <delete dir="${build.kieker.tools.dir}"/>
        <mkdir  dir="${build.kieker.tools.dir}"/>
        <javac destDir="${build.kieker.tools.dir}"
               source="1.5" target="1.5"
               srcdir="${src.kieker.tools.dir}"
               debug="true"
               classpathref="kieker.tools-compile-classpath">
            <compilerarg value="-Xlint:all,-path"/>
        </javac>
        <copy file="LICENSE" todir="${build.kieker.tools.dir}/"/>
        <jar destfile="${dist.dir}/${dist.kieker.tools.jar}">
            <fileset dir="${build.kieker.tools.dir}"/>
        </jar>
    </target>

    <target name="build-kieker-sources" depends="init">
        <patternset id="dist_src_files">
            <include name="bin/*.sh"/>
            <include name="bin/log4j.properties"/>
            <include name="META-INF/*.example"/>
            <include name="${aop.xml.ltwtests.annotation}"/>
            <include name="${aop.xml.ltwtests.full}"/>
            <include name="src/**/*.java"/>
            <include name="test/**/*.java"/>
            <include name="${src.kieker.monitoring-servlet.dir}/kieker/monitoring/servlet/WEB-INF/**"/>
            <include name="${src.kieker.monitoring-servlet.dir}/kieker/monitoring/servlet/images/**"/>
            <include name="lib/**"/>
            <include name="build.xml"/>
            <include name="build.properties"/>
            <include name="ISSUES"/>
            <include name="HISTORY"/>
            <include name="LICENSE"/>
            <include name="pom_ant_kieker-*.xml"/>
        </patternset>

        <tar destfile="${release.dir}/${dist.kieker.srcBaseName}.tar" longfile="gnu">
            <tarfileset dir="." prefix="${kieker.dist.name}" defaultexcludes="yes">
                <patternset refid="dist_src_files"/>
            </tarfileset>
        </tar>
        <gzip zipfile="${release.dir}/${dist.kieker.srcBaseName}.tar.gz" src="${release.dir}/${dist.kieker.srcBaseName}.tar" />
     	<!-- tar file no longer needed -->
        <delete file="${release.dir}/${dist.kieker.srcBaseName}.tar"/>

        <zip  zipfile="${release.dir}/${dist.kieker.srcBaseName}.zip">
            <zipfileset dir="." prefix="${kieker.dist.name}" defaultexcludes="yes">
                <patternset refid="dist_src_files"/>
            </zipfileset>
        </zip>
    </target>

    <target name="build-kieker-binaries" depends="build-all">
        <patternset id="dist_bin_files">
            <include name="bin/*.sh"/>
            <include name="bin/log4j.properties"/>
            <include name="dist/*.jar"/>
            <include name="dist/*.war"/>
            <include name="META-INF/*.example"/>
            <include name="lib/**"/>
            <include name="ISSUES"/>
            <include name="HISTORY"/>
            <include name="LICENSE"/>
        </patternset>

        <tar destfile="${release.dir}/${dist.kieker.binBaseName}.tar" longfile="gnu">
            <tarfileset dir="." prefix="${kieker.dist.name}" defaultexcludes="yes">
                <patternset refid="dist_bin_files"/>
            </tarfileset>
        </tar>
        <gzip zipfile="${release.dir}/${dist.kieker.binBaseName}.tar.gz" src="${release.dir}/${dist.kieker.binBaseName}.tar" />
     	<!-- tar file no longer needed -->
        <delete file="${release.dir}/${dist.kieker.binBaseName}.tar"/>

        <zip  zipfile="${release.dir}/${dist.kieker.binBaseName}.zip">
            <zipfileset dir="." prefix="${kieker.dist.name}" defaultexcludes="yes">
                <patternset refid="dist_bin_files"/>
            </zipfileset>
        </zip>
    </target>

    <target name="build-example-MySimpleKiekerExample" depends="init">
        <patternset id="dist_myExample_files">
            <include name="examples/MySimpleKiekerExample/README"/>
            <include name="examples/MySimpleKiekerExample/LICENSE"/>
            <include name="examples/MySimpleKiekerExample/build.xml"/>
            <include name="examples/MySimpleKiekerExample/build.properties"/>
            <include name="examples/MySimpleKiekerExample/lib/"/>
            <include name="examples/MySimpleKiekerExample/kieker-testdata/**"/>
            <exclude name="examples/MySimpleKiekerExample/lib/*.jar"/>
            <include name="examples/MySimpleKiekerExample/META-INF/ltwtests-RTs.aop.xml"/>
            <include name="examples/MySimpleKiekerExample/META-INF/ltwtests-RTsExecutions.aop.xml"/>
            <include name="examples/MySimpleKiekerExample/META-INF/ltwtests-executions.aop.xml"/>
            <include name="examples/MySimpleKiekerExample/META-INF/tests.log4j.properties"/>
            <include name="examples/MySimpleKiekerExample/META-INF/kieker.monitoring.properties.example"/>
            <include name="examples/MySimpleKiekerExample/src/**"/>
        </patternset>

        <tar destfile="${release.dir}/${dist.kieker.example.myexample}.tar" longfile="gnu">
            <tarfileset dir="." prefix="${kieker.dist.name}" defaultexcludes="yes">
                <patternset refid="dist_myExample_files"/>
            </tarfileset>
        </tar>
        <gzip zipfile="${release.dir}/${dist.kieker.example.myexample}.tar.gz" src="${release.dir}/${dist.kieker.example.myexample}.tar" />
     	<!-- tar file no longer needed -->
        <delete file="${release.dir}/${dist.kieker.example.myexample}.tar"/>

        <zip  zipfile="${release.dir}/${dist.kieker.example.myexample}.zip">
            <zipfileset dir="." prefix="${kieker.dist.name}" defaultexcludes="yes">
                <patternset refid="dist_myExample_files"/>
            </zipfileset>
        </zip>
    </target>

    <target name="build-example-MySimpleKiekerJMSExample" depends="init">
        <patternset id="dist_myJMSExample_files">
            <include name="examples/MySimpleKiekerJMSExample/README"/>
            <include name="examples/MySimpleKiekerJMSExample/LICENSE"/>
            <include name="examples/MySimpleKiekerJMSExample/build.xml"/>
            <include name="examples/MySimpleKiekerJMSExample/build.properties"/>
            <include name="examples/MySimpleKiekerJMSExample/lib/"/>
            <exclude name="examples/MySimpleKiekerJMSExample/lib/*.jar"/>
            <exclude name="examples/MySimpleKiekerJMSExample/**/*.log"/>
            <include name="examples/MySimpleKiekerJMSExample/META-INF/ltwtests-RTsExecutions.aop.xml"/>
            <include name="examples/MySimpleKiekerJMSExample/META-INF/tests.log4j.properties"/>
            <include name="examples/MySimpleKiekerJMSExample/META-INF/kieker.monitoring.properties.example"/>
            <include name="examples/MySimpleKiekerJMSExample/src/**"/>
        </patternset>

        <tar destfile="${release.dir}/${dist.kieker.example.myjmsexample}.tar" longfile="gnu">
            <tarfileset dir="." prefix="${kieker.dist.name}" defaultexcludes="yes">
                <patternset refid="dist_myJMSExample_files"/>
            </tarfileset>
        </tar>
        <gzip zipfile="${release.dir}/${dist.kieker.example.myjmsexample}.tar.gz" src="${release.dir}/${dist.kieker.example.myjmsexample}.tar" />
     	<!-- tar file no longer needed -->
        <delete file="${release.dir}/${dist.kieker.example.myjmsexample}.tar"/>

        <zip  zipfile="${release.dir}/${dist.kieker.example.myjmsexample}.zip">
            <zipfileset dir="." prefix="${kieker.dist.name}" defaultexcludes="yes">
                <patternset refid="dist_myJMSExample_files"/>
            </zipfileset>
        </zip>
    </target>

    <target name="build-example-JPetStoreExample" depends="init">
        <property name="tomcat.dir" value="Tomcat6.0.18WithJpetStore-withInstrumentedJPetStore"/>
        <property name="jpetstore.dir" value="JPetStore-5.0-instrumented"/>
        <patternset id="dist_jpetstoreExample_files">
            <include name="examples/JPetStoreExample/README"/>
            <include name="examples/JPetStoreExample/LICENSE"/>
            <include name="examples/JPetStoreExample/kieker-testdata/**"/>
            <include name="examples/JPetStoreExample/${tomcat.dir}/**"/>
            <include name="examples/JPetStoreExample/${jpetstore.dir}/**"/>
            <exclude name="examples/JPetStoreExample/${jpetstore.dir}/devlib/kieker*.jar"/>
            <exclude name="examples/JPetStoreExample/${jpetstore.dir}/nbproject/**"/>
            <exclude name="examples/JPetStoreExample/${jpetstore.dir}/build/reports/**"/>
            <exclude name="examples/JPetStoreExample/${jpetstore.dir}/build/wars/**"/>
            <exclude name="examples/JPetStoreExample/${jpetstore.dir}/build/webapp/**"/>
            <exclude name="examples/JPetStoreExample/${jpetstore.dir}/build/work/**"/>
            <exclude name="examples/JPetStoreExample/${tomcat.dir}/bin/catalina.sh.localjvmmem.conf/"/>
            <exclude name="examples/JPetStoreExample/${tomcat.dir}/work/**/*"/>
            <exclude name="examples/JPetStoreExample/${tomcat.dir}/temp/**/*"/>
            <exclude name="examples/JPetStoreExample/${tomcat.dir}/logs/**/*"/>
            <exclude name="examples/JPetStoreExample/${tomcat.dir}/webapps/jpetstore/"/>
            <exclude name="examples/JPetStoreExample/${tomcat.dir}/webapps/kieker*/"/>
            <exclude name="examples/JPetStoreExample/${tomcat.dir}/lib/kieker*.jar"/>
            <exclude name="examples/JPetStoreExample/${tomcat.dir}/lib/aspectj*.jar"/>
            <exclude name="examples/JPetStoreExample/${tomcat.dir}/lib/commons-logging*.jar"/>
            <exclude name="examples/JPetStoreExample/${tomcat.dir}/lib/META-INF/kieker.monitoring.properties"/>
        </patternset>

        <tar destfile="${release.dir}/${dist.kieker.example.jpetstore}.tar" longfile="gnu">
            <tarfileset dir="." prefix="${kieker.dist.name}" defaultexcludes="yes">
                <patternset refid="dist_jpetstoreExample_files"/>
            </tarfileset>
        </tar>
        <gzip zipfile="${release.dir}/${dist.kieker.example.jpetstore}.tar.gz" src="${release.dir}/${dist.kieker.example.jpetstore}.tar" />
     	<!-- tar file no longer needed -->
        <delete file="${release.dir}/${dist.kieker.example.jpetstore}.tar"/>

        <zip  zipfile="${release.dir}/${dist.kieker.example.jpetstore}.zip">
            <zipfileset dir="." prefix="${kieker.dist.name}" defaultexcludes="yes">
                <patternset refid="dist_jpetstoreExample_files"/>
            </zipfileset>
        </zip>
    </target>

    <target name="build-example-microbenchmark" depends="init">
        <property name="microbenchmark.dir" value="OverheadEvaluationMicrobenchmark/"/>
        <patternset id="dist_microbenchmarkExample_files">
            <include name="examples/${microbenchmark.dir}/**"/>
            <exclude name="examples/${microbenchmark.dir}/results/**/*"/>
            <exclude name="examples/${microbenchmark.dir}//tmp/**/*"/>
            <exclude name="examples/${microbenchmark.dir}/lib/**/*.jar"/>
        </patternset>

        <tar destfile="${release.dir}/${dist.kieker.example.microbenchmark}.tar" longfile="gnu">
            <tarfileset dir="." prefix="${kieker.dist.name}" defaultexcludes="yes">
                <patternset refid="dist_microbenchmarkExample_files"/>
            </tarfileset>
        </tar>
        <gzip zipfile="${release.dir}/${dist.kieker.example.microbenchmark}.tar.gz" src="${release.dir}/${dist.kieker.example.microbenchmark}.tar" />
     	<!-- tar file no longer needed -->
        <delete file="${release.dir}/${dist.kieker.example.microbenchmark}.tar"/>

        <zip  zipfile="${release.dir}/${dist.kieker.example.microbenchmark}.zip">
            <zipfileset dir="." prefix="${kieker.dist.name}" defaultexcludes="yes">
                <patternset refid="dist_microbenchmarkExample_files"/>
            </zipfileset>
        </zip>
    </target>

    <target name="build-examples"
            depends="init,build-example-MySimpleKiekerExample,build-example-MySimpleKiekerJMSExample,build-example-JPetStoreExample,build-example-microbenchmark">

    </target>

    <target name="release"
            depends="build-all,build-kieker-sources,build-kieker-binaries,build-examples">
        <echo message="Sourceforge release instructions can be found at:"/>
        <echo message="https://sourceforge.net/apps/trac/sourceforge/wiki/Release files for download#Createoreditarelease"/>
        <echo message="scp dist/release/kieker-VERSION_* USER@frs.sourceforge.net:uploads"/>
    </target>

    <target name="clean">
	<!-- <delete dir="tmp"/>-->
        <delete dir="${dist.dir}"/>
        <delete dir="${release.dir}"/>
        <delete dir="${build.dir}"/>
    </target>

    <target name="run-test-storage" depends="build-kieker.monitoring">
        <echo>
            This is a small test for the part of Tpmon that
            stores monitoring data. Tpmon's monitoring API 
            is manually invoked to collect monitoring data. 
            Therefore, the instrumentation and logic in the
            monitoring points (the aspects) of Tpmon is not
            used. 
            
            The main purpose of this test is to isolate configuration and 
            installation problems and to get Tpmon running.
            
            If in kieker.monitoring.properties file system storage (store in database =
            false) is selected, a new file (tpmon*.dat) with monitoring data
            should be created in the folder specified in kieker.monitoring.properties
            (default: /tmp).
        </echo>

        <path id="kieker.test-storage-compile-classpath">
            <!--<fileset dir="${lib.dir}">
                <include name="commons-cli-*.jar"/>
                <include name="commons-logging-*.jar"/>
            </fileset>-->
            <fileset dir="${dist.dir}">
                <include name="${dist.kieker.common.jar}"/>
                <include name="${dist.kieker.monitoring.jar}"/>
            </fileset>
        </path>

        <javac source="1.5" target="1.5"
               destDir="${build.tests.dir}"
               classpathref="kieker.test-storage-compile-classpath"
               srcdir="test/kieker/tests/storageOnly/"
               verbose="off"
               debug="true"/>
        <copy file="${tests.log4j.properties}"
	      todir="${build.dir}/"/>

        <path id="kieker.test-storage-run-classpath">
            <fileset dir="${lib.dir}">
                <include name="commons-logging-*.jar"/>
                <!--<include name="log4j-*.jar"/>-->
            </fileset>
            <pathelement location="${build.tests.dir}/"/>
            <fileset dir="${dist.dir}">
                <include name="${dist.kieker.common.jar}"/>
                <include name="${dist.kieker.monitoring.jar}"/>
            </fileset>
        </path>
        <java
            dir="."
            fork="true"
            classname="kieker.tests.storageOnly.StorageOnly"
            classpathref="kieker.test-storage-run-classpath">
            <jvmarg value="-Dlog4j.configuration=${build.dir}/log4j.properties"/>
            <jvmarg value="-Dkieker.monitoring.storeInJavaIoTmpdir=${tests.storeInJavaIoTmpdir}"/>
            <jvmarg value="-Dkieker.monitoring.customStoragePath=${tests.storagepath}"/>
            <!-- <jvmarg value="-javaagent:../${aspectjweaverjar}"/> -->
            <!-- <jvmarg value="-XX:+PrintGCTimeStamps"/> -->
            <!-- <jvmarg value="-Xloggc:details.out"/> -->
            <!-- <jvmarg value="-verbosegc"/> -->
        </java>
    </target>

    <target name="compile-tests-common"
	    depends="build-kieker.common">
        <path id="common-test-compile-classpath">
            <fileset dir="${lib.dir}">
                <include name="commons-logging-*.jar"/>
                <include name="junit-*.jar"/>
            </fileset>
            <fileset dir="${dist.dir}">
                <include name="${dist.kieker.common.jar}"/>
            </fileset>
        </path>
        <javac source="1.5" target="1.5"
               destDir="${build.tests.dir}"
               classpathref="common-test-compile-classpath"
               srcdir="${test.kieker.common.dir}">
        </javac>
    </target>

    <target name="compile-tests-monitoring"
	    depends="build-kieker.monitoring">
        <path id="monitoring-test-compile-classpath">
            <fileset dir="${lib.dir}">
                <include name="commons-logging-*.jar"/>
                <include name="junit-*.jar"/>
            </fileset>
            <fileset dir="${dist.dir}">
                <include name="${dist.kieker.common.jar}"/>
                <include name="${dist.kieker.monitoring.jar}"/>
            </fileset>
        </path>
        <javac source="1.5" target="1.5"
               destDir="${build.tests.dir}"
               classpathref="monitoring-test-compile-classpath"
               srcdir="${test.kieker.monitoring.dir}"
               excludes="kieker/test/monitoring/aspectJ/compileTimeWeaving/">
        </javac>
    </target>

    <target name="compile-tests-analysis"
	    depends="build-kieker.analysis">
        <path id="analysis-test-compile-classpath">
            <fileset dir="${lib.dir}">
                <include name="commons-logging-*.jar"/>
                <include name="junit-*.jar"/>
            </fileset>
            <fileset dir="${dist.dir}">
                <include name="${dist.kieker.common.jar}"/>
                <include name="${dist.kieker.analysis.jar}"/>
            </fileset>
        </path>
        <javac source="1.5" target="1.5"
               destDir="${build.tests.dir}"
               classpathref="analysis-test-compile-classpath"
               srcdir="${test.kieker.analysis.dir}">
        </javac>
    </target>

    <target name="compile-tests-tools"
	    depends="build-kieker.tools">
        <path id="tools-test-compile-classpath">
            <fileset dir="${lib.dir}">
                <include name="commons-logging-*.jar"/>
                <include name="junit-*.jar"/>
            </fileset>
            <fileset dir="${dist.dir}">
                <include name="${dist.kieker.common.jar}"/>
                <include name="${dist.kieker.analysis.jar}"/>
                <include name="${dist.kieker.monitoring.jar}"/>
                <include name="${dist.kieker.tools.jar}"/>
            </fileset>
        </path>
        <javac source="1.5" target="1.5"
               destDir="${build.tests.dir}"
               classpathref="tools-test-compile-classpath"
               srcdir="${test.kieker.tools.dir}">
        </javac>
    </target>
    
    <target name="run-tests-loadTimeWeaving-bookstoreDifferentRecordTypes"
            depends="compile-tests-monitoring">
        <path id="kieker.test-loadTimeWeaving-run-classpath">
            <fileset dir="${lib.dir}">
                <include name="commons-logging-*.jar"/>
            </fileset>
            <pathelement location="${build.tests.dir}/"/>
            <fileset dir="${dist.dir}">
                <include name="${dist.kieker.common.jar}"/>
                <include name="${dist.kieker.monitoring.jar}"/>
            </fileset>
        </path>

        <copy file="${tests.log4j.properties}"
              tofile="${build.dir}/log4j.properties"/>
        <copy file="${aop.xml.ltwtests.annotation}"
	      tofile="${build.tests.dir}/META-INF/aop.xml"
              overwrite="true"/>
        <java dir="."
              fork="true"              
              classname="kieker.test.monitoring.aspectJ.loadTimeWeaving.bookstoreDifferentRecordTypes.Bookstore"
              classpathref="kieker.test-loadTimeWeaving-run-classpath">
            <jvmarg value="-Dkieker.monitoring.storeInJavaIoTmpdir=${tests.storeInJavaIoTmpdir}"/>
            <jvmarg value="-Dkieker.monitoring.customStoragePath=${tests.storagepath}"/>
            <jvmarg value="-Dkieker.monitoring.debug=false"/>
            <jvmarg value="-javaagent:${aspectjweaverjar}"/>
            <jvmarg value="-Dlog4j.configuration=${build.dir}/log4j.properties"/>
            <jvmarg value="-Dorg.aspectj.weaver.showWeaveInfo=true"/>
            <!--<jvmarg value="-Dorg.aspectj.weaver.loadtime.configuration=META-INF/aop.xml"/>-->
            <jvmarg value="-Daj.weaving.verbose=true"/>
        </java>
    </target>
    
    <target name="run-tests-loadTimeWeaving-bookstoreFullInstrumentation"
            depends="compile-tests-monitoring">
        <path id="kieker.test-loadTimeWeaving-bookstoreWithoutAnnotation-run-classpath">
            <fileset dir="${lib.dir}">
                <include name="commons-logging-*.jar"/>
            </fileset>
            <pathelement location="${build.tests.dir}/"/>
            <fileset dir="${dist.dir}">
                <include name="${dist.kieker.common.jar}"/>
                <include name="${dist.kieker.monitoring.jar}"/>
            </fileset>
        </path>

        <copy file="${log4j.properties}"
              tofile="${build.dir}/log4j.properties"/>
        <copy file="${aop.xml.ltwtests.full}"
	      tofile="${build.tests.dir}/META-INF/aop.xml"
              overwrite="true"/>
        <java dir="."
              fork="true"              
              classname="kieker.test.monitoring.aspectJ.loadTimeWeaving.bookstoreWithoutAnnotation.BookstoreWA"
              classpathref="kieker.test-loadTimeWeaving-bookstoreWithoutAnnotation-run-classpath">
            <jvmarg value="-Dkieker.monitoring.storeInJavaIoTmpdir=${tests.storeInJavaIoTmpdir}"/>
            <jvmarg value="-Dkieker.monitoring.customStoragePath=${tests.storagepath}"/>
            <jvmarg value="-javaagent:${aspectjweaverjar}"/>
            <jvmarg value="-Dlog4j.configuration=${build.dir}/log4j.properties"/>
            <jvmarg value="-Dorg.aspectj.weaver.showWeaveInfo=true"/>
            <jvmarg value="-Daj.weaving.verbose=true"/>
        </java>
    </target>

    <target name="run-tests-loadTimeWeaving-executionOrderTest"
            depends="compile-tests-monitoring">
        <path id="kieker.test-loadTimeWeaving-executionOrderTest-run-classpath">
            <fileset dir="${lib.dir}">
                <include name="commons-logging-*.jar"/>
            </fileset>
            <pathelement location="${build.tests.dir}/"/>
            <fileset dir="${dist.dir}">
                <include name="${dist.kieker.common.jar}"/>
                <include name="${dist.kieker.monitoring.jar}"/>
            </fileset>
        </path>

        <copy file="${tests.log4j.properties}"
              tofile="${build.dir}/log4j.properties"/>
        <copy file="${aop.xml.ltwtests.full}"
	      tofile="${build.tests.dir}/META-INF/aop.xml"
              overwrite="true"/>
        <java dir="."
              fork="true"
              classname="kieker.test.monitoring.aspectJ.loadTimeWeaving.executionOrderTest.ExecutionOrderTest"
              classpathref="kieker.test-loadTimeWeaving-executionOrderTest-run-classpath">
            <jvmarg value="-Dkieker.monitoring.storeInJavaIoTmpdir=${tests.storeInJavaIoTmpdir}"/>
            <jvmarg value="-Dkieker.monitoring.customStoragePath=${tests.storagepath}"/>
            <jvmarg value="-javaagent:${aspectjweaverjar}"/>
            <jvmarg value="-Dlog4j.configuration=${build.dir}/log4j.properties"/>
            <jvmarg value="-Dorg.aspectj.weaver.showWeaveInfo=true"/>
            <jvmarg value="-Daj.weaving.verbose=true"/>
        </java>
    </target>

    <target name="compile-tests-compileTimeWeaving-bookstore"
            depends="build-kieker.monitoring">
        <path id="kieker.test-compileTimeWeaving-bookstore-compile-classpath">
            <fileset dir="${lib.dir}">
                <include name="aspectjrt-*.jar"/>
                <include name="commons-logging-*.jar"/>
                <include name="servlet-api.jar"/>
            </fileset>
            <pathelement location="${build.tests.dir}/"/>
            <fileset dir="${dist.dir}">
                <include name="${dist.kieker.common.jar}"/>
                <include name="${dist.kieker.monitoring.jar}"/>
            </fileset>
        </path>

        <delete dir="tmp/aspects/"/>
        <mkdir dir="tmp/aspects/"/>
        <copy file="${src.kieker.monitoring.dir}/kieker/monitoring/probe/aspectJ/executions/AbstractOperationExecutionAspect.java"
              todir="tmp/aspects/"/>
        <copy file="${src.kieker.monitoring.dir}/kieker/monitoring/probe/aspectJ/executions/AbstractOperationExecutionAspectServlet.java"
              todir="tmp/aspects/"/>
        <copy file="${src.kieker.monitoring.dir}/kieker/monitoring/probe/aspectJ/executions/${TestAspect}"
              todir="tmp/aspects/"/>
        <copy file="${tests.log4j.properties}"
              tofile="${build.dir}/log4j.properties"/>
        <iajc destdir="${build.tests.dir}" source="1.5" target="1.5" verbose="true"
              classpathref="kieker.test-compileTimeWeaving-bookstore-compile-classpath">
            <sourceroots>
                <pathelement location="${test.kieker.monitoring.dir}/kieker/test/monitoring/aspectJ/compileTimeWeaving/bookstore/"/>
                <pathelement location="tmp/aspects/"/>
            </sourceroots>
        </iajc>
    </target>

    <target name="compile-tests-compileTimeWeaving-twoConcurrentMethodsExample"
            depends="build-kieker.monitoring">
        <path id="kieker.test-compileTimeWeaving-twoConcurrentMethodsExample-compile-classpath">
            <fileset dir="${lib.dir}">
                <include name="aspectjrt-*.jar"/>
                <include name="commons-logging-*.jar"/>
                <include name="servlet-api.jar"/>
            </fileset>
            <pathelement location="${build.tests.dir}/"/>
            <fileset dir="${dist.dir}">
                <include name="${dist.kieker.common.jar}"/>
                <include name="${dist.kieker.monitoring.jar}"/>
            </fileset>
        </path>

        <delete dir="tmp/aspects/"/>
        <mkdir dir="tmp/aspects/"/>
        <copy file="${src.kieker.monitoring.dir}/kieker/monitoring/probe/aspectJ/executions/AbstractOperationExecutionAspect.java"
              todir="tmp/aspects/"/>
        <copy file="${src.kieker.monitoring.dir}/kieker/monitoring/probe/aspectJ/executions/AbstractOperationExecutionAspectServlet.java"
              todir="tmp/aspects/"/>
        <copy file="${src.kieker.monitoring.dir}/kieker/monitoring/probe/aspectJ/executions/${TestAspect}"
              todir="tmp/aspects/"/>
        <copy file="${tests.log4j.properties}"
              tofile="${build.dir}/log4j.properties"/>
        <iajc destdir="${build.tests.dir}" source="1.5" target="1.5" verbose="true"
              classpathref="kieker.test-compileTimeWeaving-twoConcurrentMethodsExample-compile-classpath">
            <sourceroots>
                <pathelement location="${test.kieker.monitoring.dir}/kieker/test/monitoring/aspectJ/compileTimeWeaving/twoConcurrentMethodsExample/"/>
                <pathelement location="tmp/aspects/"/>
            </sourceroots>
        </iajc>
    </target>
    
    <target name="run-tests-compileTimeWeaving-bookstore"
            depends="compile-tests-compileTimeWeaving-bookstore">
        <path id="kieker.test-compileTimeWeaving-bookstore-run-classpath">
            <fileset dir="${lib.dir}">
                <include name="aspectjweaver-*.jar"/>
                <include name="commons-logging-*.jar"/>
            </fileset>
            <pathelement location="${build.tests.dir}/"/>
            <fileset dir="${dist.dir}">
                <include name="${dist.kieker.common.jar}"/>
                <include name="${dist.kieker.monitoring.jar}"/>
            </fileset>
        </path>

        <java dir="."
              fork="true"
              classname="kieker.test.monitoring.aspectJ.compileTimeWeaving.bookstore.Bookstore"
              classpathref="kieker.test-compileTimeWeaving-bookstore-run-classpath">
            <jvmarg value="-Dkieker.monitoring.storeInJavaIoTmpdir=${tests.storeInJavaIoTmpdir}"/>
            <jvmarg value="-Dkieker.monitoring.customStoragePath=${tests.storagepath}"/>
            <jvmarg value="-Dlog4j.configuration=${build.dir}/log4j.properties"/>
        </java>
    </target>

    <target name="run-tests-compileTimeWeaving-bookstoreDB" 
            depends="compile-all-tests,compile-tests-compileTimeWeaving-bookstore">
        <path id="kieker.test-compileTimeWeaving-bookstoreDB-run-classpath">
            <fileset dir="${lib.dir}">
                <include name="aspectjweaver-*.jar"/>
                <include name="derby.jar"/>
                <include name="mysql-connector-java-*-bin.jar"/><!--needed for some reason ...-->
                <include name="commons-logging-*.jar"/>
            </fileset>
            <pathelement location="${build.tests.dir}/"/>
            <fileset dir="${dist.dir}">
                <include name="${dist.kieker.common.jar}"/>
                <include name="${dist.kieker.monitoring.jar}"/>
            </fileset>
        </path>

        <delete dir="${tests.javadb.kiekerdb.path}"/> <!-- delete existing DB -->
        <java dir="."
              fork="true"
              classpathref="kieker.test-compileTimeWeaving-bookstoreDB-run-classpath"
              classname="kieker.test.monitoring.util.JavaDBInitializer">
            <jvmarg value="-Dlog4j.configuration=${build.dir}/log4j.properties"/>
            <jvmarg value="-Dkieker.monitoring.dbDriverClassname="/>
            <jvmarg value="-Dkieker.monitoring.dbConnectionAddress=jdbc:derby:${tests.javadb.kiekerdb.path};user=DBUSER;password=DBPASS"/>
            <jvmarg value="-Dkieker.monitoring.dbTableName=APP.tpmondata"/>
        </java>
        <java dir="."
              fork="true"
              classname="kieker.test.monitoring.aspectJ.compileTimeWeaving.bookstore.Bookstore"
              classpathref="kieker.test-compileTimeWeaving-bookstoreDB-run-classpath">
            <jvmarg value="-Dkieker.monitoring.configuration=${tests.db.kieker.monitoring.properties}"/>
            <jvmarg value="-Dkieker.monitoring.storeInJavaIoTmpdir=${tests.storeInJavaIoTmpdir}"/>
            <jvmarg value="-Dkieker.monitoring.customStoragePath=${tests.storagepath}"/>
            <jvmarg value="-Dlog4j.configuration=${build.dir}/log4j.properties"/>
            <jvmarg value="-Dkieker.monitoring.dbDriverClassname="/>
            <jvmarg value="-Dkieker.monitoring.dbConnectionAddress=jdbc:derby:tmp/KIEKER;user=DBUSER;password=DBPASS"/>
            <jvmarg value="-Dkieker.monitoring.dbTableName=APP.tpmondata"/>
        </java>
    </target>

    <target name="run-tests-compileTimeWeaving-bookstore-synchronized"
            depends="compile-tests-compileTimeWeaving-bookstore">
        <echo message="Using Bookstore variant with synchronized Catalog.getBooks (is slower)."/>

        <path id="kieker.test-compileTimeWeaving-bookstore-synchronized-run-classpath">
            <fileset dir="${lib.dir}">
                <include name="aspectjweaver-*.jar"/>
                <include name="commons-logging-*.jar"/>
            </fileset>
            <pathelement location="${build.tests.dir}/"/>
            <fileset dir="${dist.dir}">
                <include name="${dist.kieker.common.jar}"/>
                <include name="${dist.kieker.monitoring.jar}"/>
            </fileset>
        </path>

        <java dir="."
              fork="true"
              classname="kieker.test.monitoring.aspectJ.compileTimeWeaving.bookstore.synchron.Bookstore"
              classpathref="kieker.test-compileTimeWeaving-bookstore-synchronized-run-classpath">
            <jvmarg value="-Dkieker.monitoring.storeInJavaIoTmpdir=${tests.storeInJavaIoTmpdir}"/>
            <jvmarg value="-Dkieker.monitoring.customStoragePath=${tests.storagepath}"/>
            <jvmarg value="-Dlog4j.configuration=${build.dir}/log4j.properties"/>
        </java>
    </target>

    <target name="run-tests-compileTimeWeaving-twoConcurrentMethodsExample" depends="compile-tests-compileTimeWeaving-twoConcurrentMethodsExample">
        <path id="kieker.test-compileTimeWeaving-twoConcurrentMethodsExample-run-classpath">
            <fileset dir="${lib.dir}">
                <include name="aspectjweaver-*.jar"/>
                <include name="commons-logging-*.jar"/>
            </fileset>
            <pathelement location="${build.tests.dir}/"/>
            <fileset dir="${dist.dir}">
                <include name="${dist.kieker.common.jar}"/>
                <include name="${dist.kieker.monitoring.jar}"/>
            </fileset>
        </path>

        <java dir="."
              fork="true"
              classname="kieker.test.monitoring.aspectJ.compileTimeWeaving.twoConcurrentMethodsExample.Starter"
              classpathref="kieker.test-compileTimeWeaving-twoConcurrentMethodsExample-run-classpath">
            <jvmarg value="-Dkieker.monitoring.storeInJavaIoTmpdir=${tests.storeInJavaIoTmpdir}"/>
            <jvmarg value="-Dkieker.monitoring.customStoragePath=${tests.storagepath}"/>
            <jvmarg value="-Dlog4j.configuration=${build.dir}/log4j.properties"/>
        </java>
    </target>

    <taskdef name="junit" classname="org.apache.tools.ant.taskdefs.optional.junit.JUnitTask"/>

    <target name="compile-all-tests"
            depends="compile-tests-common,compile-tests-monitoring,compile-tests-analysis,compile-tests-tools"/>

    <target name="run-tests-junit" depends="compile-all-tests">
        <path id="kieker.test-junit-run-classpath">
            <fileset dir="${lib.dir}">
                <include name="commons-logging-*.jar"/>
                <include name="junit-*.jar"/>
            </fileset>
            <pathelement location="${build.tests.dir}/"/>
            <fileset dir="${dist.dir}">
                <include name="${dist.kieker.common.jar}"/>
                <include name="${dist.kieker.monitoring.jar}"/>
                <include name="${dist.kieker.analysis.jar}"/>
                <include name="${dist.kieker.tools.jar}"/>
            </fileset>
        </path>

        <delete dir="${tests.junit-results.dir}"/>
        <mkdir  dir="${tests.junit-results.dir}"/>

        <junit printsummary="yes" haltonfailure="no">
            <classpath refid="kieker.test-junit-run-classpath"/>

            <formatter type="xml"/>

            <batchtest fork="yes" todir="${tests.junit-results.dir}">
                <fileset dir="${build.tests.dir}/">
                    <include name="**/junit/**/*Test*.class"/>
                    <exclude name="**/*$*.class"/>
                </fileset>
            </batchtest>
        </junit>

        <antcall target="test.junit.report"/>
    </target>

    <target name="test.junit.report" depends="" >
        <junitreport todir="${tests.junit-results.dir}">
            <fileset dir="${tests.junit-results.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${tests.junit-results.dir}"/>
        </junitreport>

        <echo message="To see the test report, open ${tests.junit-results.dir}/index.html in your Web browser."/>
    </target>

    <target name="pmd">
        <taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask" classpathref="pmd.libs"/>
        <pmd shortFilenames="true">
            <ruleset>rulesets/favorites.xml</ruleset>
            <ruleset>basic</ruleset>
            <formatter type="html" toFile="pmd_report.html" />
            <fileset dir="src/" includes="**/*.java"/>
        </pmd>
    </target>

    <target name="mvn-init" depends="update-version">
        <xmlproperty file="pom.xml" prefix="pom.xml" />
        <path id="maven-ant-tasks.classpath" path="lib/maven/maven-ant-tasks-2.1.0.jar" />
        <typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="urn:maven-artifact-ant"
            classpathref="maven-ant-tasks.classpath" />
    </target>
	
    <target name="mvn-deploy" depends="mvn-init, mvn-deploy-base, mvn-deploy-monitoring" />
	
    <target name="mvn-deploy-monitoring" depends="build-kieker.monitoring, mvn-deploy-base">
        <artifact:install-provider artifactId="wagon-ssh" version="1.0-beta-2"/>
        <artifact:pom id="mavenproject" file="pom_ant_kieker-monitoring.xml" />
        <artifact:deploy file="${dist.dir}/${dist.kieker.monitoring.jar}">
            <pom refid="mavenproject"/>
        </artifact:deploy>
    </target>
    
    <target name="mvn-deploy-base" depends="mvn-init">
        <artifact:install-provider artifactId="wagon-ssh" version="1.0-beta-2"/>
        <artifact:pom id="mavenproject" file="pom_ant_kieker-base.xml" />
        <artifact:deploy file="pom_ant_kieker-base.xml">
            <pom refid="mavenproject"/>
        </artifact:deploy>
    </target>
</project>
