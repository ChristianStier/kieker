<?xml version="1.0" encoding="UTF-8"?>
<project name="Kieker" default="build-all" basedir="." xmlns:artifact="urn:maven-artifact-ant">
    <property file="tpmon.properties"/>

    <property name="KiekerTpmonTestAspect"
              value="KiekerTpmonMonitoringAnnotationRemote.java"/>

    <property name="kieker.jarnamebase"
              value="kieker-tpmon"/>
    <property name="kieker-common.jarnamebase"
              value="${kieker.jarnamebase}-common"/>
    <property name="kieker-ltw.jarnamebase"
              value="${kieker.jarnamebase}-ltw"/>
    <property name="kieker-ctw.jarnamebase"
              value="${kieker.jarnamebase}-ctw"/>
    <property name="kieker-servlet.jarnamebase"
              value="${kieker.jarnamebase}-control-servlet"/>

    <property name="build.dir" value="build/"/>
    <property name="build.common.dir" value="build/common/"/>
    <property name="build.ctw.dir" value="build/ctw/"/>
    <property name="build.ltw.dir" value="build/ltw/"/>
    <property name="build.controlServlet.dir" value="build/controlServlet/"/>
    <property name="build.tests.dir" value="build/tests/"/>

    <path id="classpath.libs">
        <pathelement path="${classpath}"/>
        <fileset dir="external-libs">
            <include name="**/*.jar"/>
        </fileset>
        <pathelement location="."/>
    </path>
    <path id="compile.ltw.classpath">
        <path refid="classpath.libs"/>
        <fileset dir="dist">
            <include name="${kieker-common.jarnamebase}*.jar"/>
        </fileset>
    </path>
    <path id="compile.ctw.classpath">
        <path refid="classpath.libs"/>
        <fileset dir="dist">
            <include name="${kieker-common.jarnamebase}*.jar"/>
        </fileset>
    </path>

    <path id="run.classpath"> <!-- the normal classpath for executing kieker -->
        <path refid="classpath.libs"/>
        <fileset dir="dist">
            <include name="${kieker-common.jarnamebase}*.jar"/>
        </fileset>
    </path>
    <path id="run.tests.classpath"> <!-- for AspectJ load time weaving tests -->
        <pathelement path="${run.classpath}"/>
        <path refid="classpath.libs"/>
        <fileset dir="dist">
            <include name="${kieker-ltw.jarnamebase}*.jar"/>
        </fileset>
        <pathelement path="${build.tests.dir}"/>
    </path>
    <path id="run.ltwtests.classpath"> <!-- for AspectJ load time weaving tests -->
        <pathelement path="${run.classpath}"/>
        <path refid="classpath.libs"/>
        <fileset dir="dist">
            <include name="${kieker-ltw.jarnamebase}*.jar"/>
        </fileset>
        <pathelement path="${build.tests.dir}"/>
    </path>
    <path id="run.ctwtests.classpath"> <!-- for AspectJ compile time weaving tests -->
        <pathelement path="${run.classpath}"/>
        <path refid="classpath.libs"/>
        <pathelement location="${build.tests.dir}"/>
        <fileset dir="dist">
            <include name="${kieker-ctw.jarnamebase}*.jar"/>
        </fileset>
        <pathelement path="${build.tests.dir}"/>
    </path>
    
    <target name="init-version">
        <tstamp/>
        <!-- Names of the tpmon runtime libraries that will be created
		     by the build process: -->
        <property name="tpmon.version" value="0.95-introducingMonitoringRecord"/>
        <property name="dist.tpmon.ltw"  value="${kieker-ltw.jarnamebase}-${tpmon.version}.jar"/>
        <property name="dist.tpmon.ctw"  value="${kieker-ctw.jarnamebase}-${tpmon.version}.jar"/>
        <property name="dist.tpmon.ctrl" value="${kieker-common.jarnamebase}-${tpmon.version}.jar"/>
        <property name="dist.tpan"        value="KiekerTpan-${tpmon.version}.jar"/>
        <property name="dist.tpmon.controlServlet" value="${kieker-servlet.jarnamebase}-${tpmon.version}.war"/>
    </target>

    <target name="update-version" unless="version.noupdate"
            depends="init-version">
        <echo>Updating version string</echo>
        <replaceregexp file="src/kieker/tpmon/core/TpmonVersion.java"
                       match="VERSION = &quot;.*?&quot;"
                       replace="VERSION = &quot;${tpmon.version}-${DSTAMP}&quot;"/>
        <replaceregexp match="&lt;version&gt;.*?&lt;/version&gt;"
                       replace="&lt;version&gt;${tpmon.version}-${DSTAMP}&lt;/version&gt;">
            <fileset dir=".">
                <include name="pom_ant_kieker*.xml"/>
            </fileset>
        </replaceregexp>
    </target>

    <target name="build-all" depends="clean,init">
        <antcall target="build-tpmon-ctw"/>
        <antcall target="build-tpmon-ltw"/>
        <antcall target="build-tpmon-ctrl"/>
        <antcall target="build-tpmon-control-servlet"/>
    </target>

    <property file="build.properties"/>

    <target name="init" depends="update-version">
        <fail message="Critical error: ./tpmon.properties is missing! Create it based on ./tpmon.properties.example">
            <condition>
                <not>
                    <available file="tpmon.properties"/>
                </not>
            </condition>
        </fail>
        <!-- Register special aspectJ commands in ant - allow ant to use special AspectJ commands: -->
        <taskdef resource="org/aspectj/tools/ant/taskdefs/aspectjTaskdefs.properties" classpath="${aspectjtoolsjar}"/>
        <fail message="Critical error: AspectJ library not found in ${aspectjtoolsjar}. Check your aspejctjtoolsjar property in the file tpmon.properties.">
            <condition>
                <not>
                    <available file="${aspectjtoolsjar}"/>
                </not>
            </condition>
        </fail>
        <mkdir dir="${build.dir}"/>
        <mkdir dir="dist"/>
        <mkdir dir="${build.tests.dir}"/>
        <mkdir dir="${build.controlServlet.dir}"/>
        <mkdir dir="tmp"/>
    </target>

    <!-- build a tpmon package that doesn't contain the aspect code (for direct invocation of tpmon) -->
    <target name="build-tpmon-ctrl" depends="init">
        <delete dir="${build.common.dir}"/>
        <mkdir dir="${build.common.dir}"/>
        <mkdir dir="${build.common.dir}/META-INF"/>
        <echo message="Creating the library of tpmon (${dist.tpmon.ctrl}) that is supposed for direct invocations - it doesn't contain the AOP instrumentation mechanisms."/>
        <javac destDir="${build.common.dir}"
               source="1.5"
               srcdir="src"
               debug="true"
               classpathref="classpath.libs">
            <compilerarg value="-Xlint:all"/>
            <include name="kieker/tpmon/META-INF/**"/>
            <include name="kieker/tpmon/annotation/**"/>
            <include name="kieker/tpmon/core/**"/>
            <include name="kieker/tpmon/monitoringRecord/**"/>
            <include name="kieker/tpmon/reader/**"/>
            <include name="kieker/tpmon/writer/**"/>
        </javac>
        <copy file="tpmon.properties" todir="${build.common.dir}/META-INF"/>
        <jar destfile="dist/${dist.tpmon.ctrl}">
            <fileset dir="${build.common.dir}"/>
        </jar>
    </target>

    <target name="build-tpmon-ltw" depends="init,build-tpmon-ctrl">
        <delete dir="${build.ltw.dir}"/>
        <mkdir dir="${build.ltw.dir}"/>
        <mkdir dir="${build.ltw.dir}/META-INF/"/>
        <echo message="The iajc compiler is used to prepare load time weaving (LTW) by creating a .jar file. LTW is configured by the aop.xml in src/kieker/tpmon/META-INF. The database connection is specified in dbconnector.properties in src/kieker/tpmon/META-INF."/>
        <fail message="src/kieker/tpmon/META-INF/aop.xml is missing! create it from src/kieker/tpmon/META-INF/aop.xml.example">
            <condition>
                <not>
                    <available file="src/kieker/tpmon/META-INF/aop.xml"/>
                </not>
            </condition>
        </fail>
        <iajc destDir="${build.ltw.dir}"
              source="1.5"
              verbose="off"
              srcdir="src/kieker/tpmon/probe/aspectJ"
              debug="true"
              classpathref="compile.ltw.classpath">
        </iajc>
        <javac destDir="${build.ltw.dir}"
               source="1.5"
               verbose="off"
               srcdir="src/kieker/tpmon/probe/"
               debug="true"
               classpathref="compile.ltw.classpath">
            <compilerarg value="-Xlint:all"/>
            <exclude name="kieker/tpmon/probe/aspectJ/**"/>
        </javac>
        <copy todir="${build.ltw.dir}/META-INF">
            <fileset dir="src/kieker/tpmon/META-INF"/>
        </copy>
        <jar destfile="dist/${dist.tpmon.ltw}">
            <fileset dir="${build.ltw.dir}"/>
        </jar>
    </target>
    
    <target name="build-tpmon-ctw" depends="init,build-tpmon-ctrl">
        <delete dir="${build.ctw.dir}"/>
        <mkdir  dir="${build.ctw.dir}"/>
        <echo message="Creating the compile-time-weaving library of tpmon (${dist.tpmon.ctw}). This library can be used in two ways: 1) for compile time instrumentation 2) via the tpmon API - if you want to invoke tpmon manually. This library cannot be used for load-time-weaving with the javaagent property!"/>
        <javac destDir="${build.ctw.dir}"
               source="1.5"
               verbose="off"
               srcdir="src/kieker/tpmon/probe/aspectJ/"
               debug="true"
               classpathref="compile.ctw.classpath">
            <compilerarg value="-Xlint:all"/>
        </javac>
        <jar destfile="dist/${dist.tpmon.ctw}">
            <fileset dir="${build.ctw.dir}"/>
        </jar>
    </target>

    <target name="clean">
        <delete dir="build"/>
<!--        <delete dir="tmp"/>-->
        <delete dir="${build.dir}"/>
        <delete dir="src/kieker/tests/compileTimeWeaving/bookstoreBenchmark/aspects/"/>
        <delete dir="src/kieker/tests/compileTimeWeaving/bookstore/aspects/"/>
        <delete file="src/kieker/tests/compileTimeWeaving/bookstoreBenchmark/TpmonMonitorAnnotation.aj"/>
        <delete file="src/kieker/tests/compileTimeWeaving/bookstore/TpmonMonitorAnnotation.aj"/>
    </target>
    <target name="run-test-storage" depends="clean,build-tpmon-ctrl">
        <echo>
            This is a small test for the part of Tpmon that
            stores monitoring data. Tpmon's monitoring API 
            is manually invoked to collect monitoring data. 
            Therefore, the instrumentation and logic in the
            monitoring points (the aspects) of Tpmon is not
            used. 
            
            The main purpose of this test is to isolate configuration and 
            installation problems and to get Tpmon running.
            
            If in tpmon.properties file system storage (store in database = 
            false) is selected, a new file (tpmon*.dat) with monitoring data
            should be created in the folder specified in tpmon.properties
            (default: /tmp).
        </echo>
        <javac source="1.5"
               destDir="${build.tests.dir}"
               classpathref="classpath.libs"
               classpath="dist/${dist.tpmon.ctrl}"
               srcdir="src/kieker/tests/storageOnly/"
               verbose="off"
               debug="true"/>
        <copy file="src/kieker/tests/log4j.properties"
	      todir="${build.tests.dir}/"/>
        <java
            dir="."
            fork="true"
            classpathref="classpath.libs"
	        classname="kieker.tests.storageOnly.StorageOnly">
            <jvmarg value="-Dlog4j.configuration=${build.tests.dir}/log4j.properties"/>
            <!-- <jvmarg value="-javaagent:../${aspectjweaverjar}"/> -->
            <!-- <jvmarg value="-XX:+PrintGCTimeStamps"/> -->
            <!-- <jvmarg value="-Xloggc:details.out"/> -->
            <!-- <jvmarg value="-verbosegc"/> -->
            <classpath>
                <pathelement location="dist/${dist.tpmon.ctrl}"/>
                <pathelement path="${build.tests.dir}"/>
            </classpath>

        </java>
    </target>

    <target name="compile-tests-loadTimeWeaving" depends="build-tpmon-ltw">
        <javac source="1.5"
               destDir="${build.tests.dir}"
               classpathref="classpath.libs"
               classpath="dist/${dist.tpmon.ctrl}"
               srcdir="src/kieker/tests/loadTimeWeaving/"/>
        <copy file="src/kieker/tests/log4j.properties" todir="${build.tests.dir}/"/>
    </target>
    
    <target name="run-tests-loadTimeWeaving-bookstoreWithoutAnnotation"
            depends="clean,compile-tests-loadTimeWeaving">
        <java dir="."
              fork="true"              
              classname="kieker.tests.loadTimeWeaving.bookstoreWithoutAnnotation.BookstoreWA"
              classpathref="classpath.libs">
            <jvmarg value="-javaagent:${aspectjweaverjar}"/>
            <jvmarg value="-Dlog4j.configuration=${build.tests.dir}/log4j.properties"/>
            <jvmarg value="-Dorg.aspectj.weaver.showWeaveInfo=true"/>
            <jvmarg value="-Daj.weaving.verbose=true"/>
            <classpath>
                <pathelement location="dist/${dist.tpmon.ctrl}"/>
                <pathelement location="dist/${dist.tpmon.ltw}"/>
                <pathelement path="${build.tests.dir}"/>
            </classpath>
        </java>
    </target>

    <target name="run-tests-loadTimeWeaving-executionOrderTest"
            depends="clean,compile-tests-loadTimeWeaving">
        <java dir="."
              fork="true"
              classname="kieker.tests.loadTimeWeaving.executionOrderTest.ExecutionOrderTest"
              classpathref="classpath.libs">
            <jvmarg value="-javaagent:${aspectjweaverjar}"/>
            <jvmarg value="-Dlog4j.configuration=${build.tests.dir}/log4j.properties"/>
            <jvmarg value="-Dorg.aspectj.weaver.showWeaveInfo=true"/>
            <jvmarg value="-Daj.weaving.verbose=true"/>
            <classpath>
                <pathelement location="dist/${dist.tpmon.ctrl}"/>
                <pathelement location="dist/${dist.tpmon.ltw}"/>
                <pathelement path="${build.tests.dir}"/>
            </classpath>
        </java>
    </target>
    <target name="compile-tests-compileTimeWeaving-bookstore" depends="build-tpmon-ctw">
        <mkdir dir="src/kieker/tests/compileTimeWeaving/bookstore/aspects/"/>
        <copy file="src/kieker/tpmon/probe/aspectJ/executions/AbstractKiekerTpmonMonitoring.java"
              todir="src/kieker/tests/compileTimeWeaving/bookstore/aspects/"/>
        <copy file="src/kieker/tpmon/probe/aspectJ/executions/AbstractKiekerTpmonMonitoringServlet.java"
              todir="src/kieker/tests/compileTimeWeaving/bookstore/aspects/"/>
        <copy file="src/kieker/tpmon/probe/aspectJ/executions/${KiekerTpmonTestAspect}"
              todir="src/kieker/tests/compileTimeWeaving/bookstore/aspects/"/>        
        <copy file="src/kieker/tests/log4j.properties"
	      todir="${build.tests.dir}/"/>
        <iajc destdir="${build.tests.dir}" source="1.5" verbose="true"
              classpathref="classpath.libs"
              classpath="dist/${dist.tpmon.ctrl}">
            <sourceroots>
                <pathelement location="src/kieker/tests/compileTimeWeaving/bookstore/"/>
            </sourceroots>
            <!--<aspectpath>
                <pathelement location="dist/${dist.tpmon.ctw}"/>
            </aspectpath>-->
        </iajc>
    </target>
    <target name="compile-tests-compileTimeWeaving-bookstoreDB" depends="build-tpmon-ctw,compile-tests-compileTimeWeaving-bookstore">
        <javac destDir="${build.tests.dir}"
               source="1.5"
               verbose="off"
               srcdir="src/kieker/tests/util/"
               debug="true"
               classpathref="classpath.libs">
            <compilerarg value="-Xlint:all"/>
        </javac>
    </target>
    <target name="compile-tests-compileTimeWeaving-bookstoreBenchmark" depends="build-tpmon-ctw">
        <mkdir dir="src/kieker/tests/compileTimeWeaving/bookstoreBenchmark/aspects/"/>
        <copy file="src/kieker/tpmon/probe/aspectJ/executions/AbstractKiekerTpmonMonitoring.java"
              todir="src/kieker/tests/compileTimeWeaving/bookstoreBenchmark/aspects/"/>
        <copy file="src/kieker/tpmon/probe/aspectJ/executions/AbstractKiekerTpmonMonitoringServlet.java"
              todir="src/kieker/tests/compileTimeWeaving/bookstoreBenchmark/aspects/"/>
        <copy file="src/kieker/tpmon/probe/aspectJ/executions/${KiekerTpmonTestAspect}"
              todir="src/kieker/tests/compileTimeWeaving/bookstoreBenchmark/aspects/"/>
        <copy file="src/kieker/tests/log4j.properties"
	      todir="${build.tests.dir}/"/>
        <iajc  destdir="${build.tests.dir}" source="1.5" verbose="true"
              classpathref="run.ctwtests.classpath">
            <sourceroots>
                <pathelement location="src/kieker/tests/compileTimeWeaving/bookstoreBenchmark"/>
            </sourceroots>
        </iajc>
    </target>
    <target name="run-tests-compileTimeWeaving-bookstore" depends="clean,compile-tests-compileTimeWeaving-bookstore">
        <java dir="."
              fork="true"
              classname="kieker.tests.compileTimeWeaving.bookstore.Bookstore"
              classpathref="classpath.libs">
            <jvmarg value="-Dlog4j.configuration=${build.tests.dir}/log4j.properties"/>
            <classpath>
                <pathelement location="dist/${dist.tpmon.ctrl}"/>
                <pathelement path="${build.tests.dir}"/>
            </classpath>
        </java>
    </target>
    <target name="run-tests-compileTimeWeaving-bookstoreDB" depends="clean,compile-tests-compileTimeWeaving-bookstoreDB">
        <java dir="."
              fork="true"
              classpathref="classpath.libs"
              classname="kieker.tests.util.JavaDBInitializer">
            <jvmarg value="-Dlog4j.configuration=${build.tests.dir}/log4j.properties"/>
            <jvmarg value="-Dtpmon.dbDriverClassname="/>
            <jvmarg value="-Dtpmon.dbConnectionAddress=jdbc:derby:tmp/KIEKER;user=DBUSER;password=DBPASS"/>
            <jvmarg value="-Dtpmon.dbTableName=APP.tpmondata"/>
            <classpath>
                <pathelement location="dist/${dist.tpmon.ctrl}"/>
                <pathelement path="${build.tests.dir}"/>
            </classpath>
        </java>
        <java dir="."
              fork="true"
              classname="kieker.tests.compileTimeWeaving.bookstore.Bookstore"
              classpathref="classpath.libs">
            <jvmarg value="-Dlog4j.configuration=${build.tests.dir}/log4j.properties"/>
            <jvmarg value="-Dtpmon.dbDriverClassname="/>
            <jvmarg value="-Dtpmon.dbConnectionAddress=jdbc:derby:tmp/KIEKER;user=DBUSER;password=DBPASS"/>
            <jvmarg value="-Dtpmon.dbTableName=APP.tpmondata"/>
            <classpath>
                <pathelement location="dist/${dist.tpmon.ctrl}"/>
                <pathelement path="${build.tests.dir}"/>
            </classpath>
        </java>
    </target>
    <target name="run-tests-compileTimeWeaving-bookstore-synchronized" depends="clean,compile-tests-compileTimeWeaving-bookstore">
        <echo message="Using Bookstore variant with synchronized Catalog.getBooks (its slower)."/>
        <java dir="."
              fork="true"
              classname="kieker.tests.compileTimeWeaving.bookstore.synchron.Bookstore"
              classpathref="run.ctwtests.classpath">
            <jvmarg value="-Dlog4j.configuration=${build.tests.dir}/log4j.properties"/>
        </java>
    </target>
  <!--  <target name="run-tests-compileTimeWeaving-twoConcurrentMethodsExample" depends="clean,compile-tests-compileTimeWeaving-bookstore">
      
        <java dir="."
              fork="true"
              classname="kieker.tests.compileTimeWeaving.twoConcurrentMethodsExample.Starter"
              classpathref="run.ctwtests.classpath">
           <jvmarg value="-Dlog4j.configuration=${build.tests.dir}/log4j.properties"/>
        </java>
    </target> -->
    <target name="run-benchmark-compileTimeWeaving-bookstore" depends="clean,compile-tests-compileTimeWeaving-bookstoreBenchmark">
        <java dir="."
              fork="true"
              classname="kieker.tests.compileTimeWeaving.bookstoreBenchmark.Bookstore"              
	      classpathref="run.ctwtests.classpath">
            <jvmarg value="-server"/>
            <jvmarg value="-Dtpmon.storeInJavaIoTmpdir=false"/>
            <jvmarg value="-Dtpmon.customStoragePath=tmp/"/>
            <jvmarg value="-Dlog4j.configuration=${build.tests.dir}/log4j.properties"/>
        </java>
        <exec command="bash -c &quot;echo 'opname resp_ns' &gt; tmp/benchmark-tpmon-cur.dat&quot;" failonerror="true"/>
        <exec command="bash -c &quot;awk -F';' '{ print $2 , ($6-$5) }' tmp/tpmon-* | sed s/'kieker.tests.compileTimeWeaving.bookstoreBenchmark.'/''/g >> tmp/benchmark-tpmon-cur.dat&quot;"
        	failonerror="true" />
        <exec command="bash -c &quot;R --vanilla &lt; ./src/kieker/tests/compileTimeWeaving/bookstoreBenchmark/gen-results.r&quot;"/>
        <exec command="kpdf tmp/benchmark-results.pdf" spawn="true" />
    </target>
    <target name="build-tpmon-control-servlet" depends="init">
        <delete dir="build"/>
        <mkdir dir="build"/>
        <javac source="1.5"
               destDir="build-tpmonControlServlet"                
               classpathref="classpath.libs"
               srcdir="src"
               debug="true"
               includes="kieker/controlServlet/**"/>
        <war destfile="dist/${dist.tpmon.controlServlet}" webxml="src/kieker/controlServlet/WEB-INF/web.xml">
            <classes dir="build-tpmonControlServlet">
                <exclude name="*/tpmon/**"/>
            </classes>
            <zipfileset dir="src/kieker/controlServlet/images" prefix="images"/>
        </war>
    </target>
    <target name="run-reader" depends="build-tpmon-ctrl">
        <copy file="src/kieker/tests/log4j.properties" todir="${build.tests.dir}/"/>
        <java dir="."
              fork="true"
              classname="kieker.tpmon.reader.fileSystemReader.FileSystemReader"
              classpathref="run.classpath">
            <jvmarg value="-DinputDir=${inputDir}"/>
            <jvmarg value="-Dlog4j.configuration=${build.tests.dir}/log4j.properties"/>
        </java>
        <delete file="${build.tests.dir}/log4j.properties"/>
    </target>
    <target name="mvn-init">
        <xmlproperty file="pom.xml" prefix="pom.xml" />
        <path id="maven-ant-tasks.classpath" path="external-libs/maven-ant-tasks-2.0.9.jar" />
        <typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="urn:maven-artifact-ant"
            classpathref="maven-ant-tasks.classpath" />
    </target>
    <target name="mvn-deploy" depends="mvn-init, mvn-deploy-ctrl, mvn-deploy-ctw, mvn-deploy-ltw" />
    
    <!--This target will place the tpmonctrl jar file in a maven repository alongside with its 
        corresponding pom.xml file.
        For real usage change the repository url to some repository of your choice.
        To test deployment localy use something like file://localhost/xxx -->  
    <target name="mvn-deploy-ctrl" depends="build-tpmon-ctrl, mvn-init">
        <artifact:pom id="maven.project" file="pom_ant_kieker-tpmon-ctrl.xml" />
        <artifact:deploy file="dist/${dist.tpmon.ctrl}">
            <remoteRepository url="file://localhost/maven/deploy/test"/>
            <pom refid="maven.project"/>
        </artifact:deploy>
    </target>
    
    <target name="mvn-deploy-ctw" depends="build-tpmon-ctw, mvn-init">
        <artifact:pom id="maven.project" file="pom_ant_kieker-tpmon-ctw.xml" />
        <artifact:deploy file="dist/${dist.tpmon.ctw}">
            <remoteRepository url="file://localhost/maven/deploy/test"/>
            <pom refid="maven.project"/>
        </artifact:deploy>
    </target>
    
    <target name="mvn-deploy-ltw" depends="build-tpmon-ltw, mvn-init">
        <artifact:pom id="maven.project" file="pom_ant_kieker-tpmon-ltw.xml" />
        <artifact:deploy file="dist/${dist.tpmon.ltw}">
            <remoteRepository url="file://localhost/maven/deploy/test"/>
            <pom refid="maven.project"/>
        </artifact:deploy>
    </target>
</project>
