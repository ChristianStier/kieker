dependencies {
	compile project(':kieker-common')
	
	compile resolveLibrary('javax.jms-*.jar')
	compile resolveLibrary('framework-libs/cxf/cxf-*.jar')
	compile resolveLibrary('aspectjweaver-*.jar')
	compile resolveLibrary('disl-2.0/disl-server.jar')
	compile resolveLibrary('sigar/sigar-*.jar')
	compile resolveLibrary('framework-libs/javax.servlet-*.jar')
	compile resolveLibrary('framework-libs/spring/spring-context-*.jar')
	compile resolveLibrary('framework-libs/spring/spring-web-*.jar')
	compile resolveLibrary('framework-libs/spring/spring-core-*.jar')
	compile resolveLibrary('framework-libs/spring/aopalliance-*.jar')

	// This is a workaround allowing the Kieker tests to depend on each other. I do not recommend to do this.
	testCompile project(':kieker-common').sourceSets.test.output
	
	testCompile resolveLibrary('framework-libs/spring/spring-beans-*.jar')
	
	testRuntime resolveLibrary('framework-libs/cxf/wsdl4j-*.jar')
	testRuntime resolveLibrary('framework-libs/cxf/xmlschema-core-*.jar')
	testRuntime resolveLibrary('framework-libs/cxf/neethi-*.jar')
	testRuntime resolveLibrary('framework-libs/cxf/woodstox-core-asl-*.jar')
	testRuntime resolveLibrary('framework-libs/cxf/stax2-api-*.jar')
	testRuntime resolveLibrary('framework-libs/spring/spring-expression-*.jar')

	testRuntime fileTree(dir: rootProject.file('examples/JavaEEServletContainerExample/jetty/lib'), include: 'jetty-*.jar')
}