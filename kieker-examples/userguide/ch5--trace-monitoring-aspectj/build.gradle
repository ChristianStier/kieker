apply plugin: 'application'

dependencies {
	compile fileTree('lib') {
		include "kieker-*_aspectj.jar"
	}
}

// Create the JAR file in the root directory of the example
libsDirName = '..'

// Simplify the JAR's file name
archivesBaseName = 'BookstoreApplication'
version = ''
	
sourceSets.main.java.srcDirs = ['src']

task runExampleOperationExecutions(type: JavaExec) {
	main = 'kieker.examples.userguide.ch5bookstore.BookstoreStarter'
	classpath = sourceSets.main.runtimeClasspath
	args = [System.getProperty("analysis.directory", ".")]
	jvmArgs = ["-javaagent:lib/kieker-1.11-SNAPSHOT_aspectj.jar",
			   //'-Dorg.aspectj.weaver.showWeaveInfo=true'
		       '-Dorg.aspectj.weaver.loadtime.configuration=META-INF/aop-event.xml'
			   ]
}

task runExampleFlowEvents(type: JavaExec) {
	main = 'kieker.examples.userguide.ch5bookstore.BookstoreStarter'
	classpath = sourceSets.main.runtimeClasspath
	args = [System.getProperty("analysis.directory", ".")]
	jvmArgs = ["-javaagent:lib/kieker-1.11-SNAPSHOT_aspectj.jar",
			   '-Dkieker.monitoring.writer.filesystem.AsyncFsWriter.QueueSize=30000'
			   //'-Dorg.aspectj.weaver.showWeaveInfo=true', 
			   //'-Dorg.aspectj.weaver.loadtime.configuration=META-INF/aop-event.xml'
			   ]
}


task runHostnameRewriter(type: JavaExec) {
	main = 'kieker.examples.userguide.ch5bookstore.BookstoreHostnameRewriter'
	classpath = sourceSets.main.runtimeClasspath
	args = [System.getProperty("analysis.directory", ".")]
}