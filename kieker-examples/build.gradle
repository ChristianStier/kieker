/* 
 * TODOS:
 * 0. Dependency to ~ rootProject:jar
 * 1. Copy Required libs to subdirectories
 * 2. Extend to all subdirectories <-- What's the best way to do this in Gradle?
 * 3. Add/extend clean tasks to call example's clean tasks via cleanStandaloneExamples
 */
 
defaultTasks 'cleanStandaloneExamples', 'buildStandaloneExamples'

/* 
 * TODO: Extend to other examples. However, currently not executed.
 * 
 * 	kieker-*_emf.jar --- all but ch5
 *	kieker-*_aspectj.jar --- ch5
 *  sigar* --- appendix-Sigar
 */
task copyLibs(type: Copy, dependsOn: [rootProject.emfJar, rootProject.aspectJJar]) {
	description = 'Copies the required Kieker libs to the examples'
	from '../../dist/kieker-*_emf.jar'
	into 'userguide/ch2--manual-instrumentation/lib/'
}

task buildStandaloneExamples(dependsOn: ['copyLibs', 
	                                     'buildStandaloneExamplesCh2App', 
	                                     'buildStandaloneExamplesCh2Instr', 
										 'buildStandaloneExamplesCh34',
										 'buildStandaloneExamplesCh5',
										 'buildStandaloneExamplesAppendixSigar']) {
}
	
task buildStandaloneExamplesCh2App(type: GradleBuild) {
	buildFile = 'userguide/ch2--bookstore-application/build.gradle'
	tasks = ['jar']
}

task buildStandaloneExamplesCh2Instr(type: GradleBuild) {
	buildFile = 'userguide/ch2--manual-instrumentation/build.gradle'
	tasks = ['jar']
}

task buildStandaloneExamplesCh34(type: GradleBuild) {
	buildFile = 'userguide/ch3-4--custom-components/build.gradle'
	tasks = ['jar']
}

task buildStandaloneExamplesCh5(type: GradleBuild) {
	buildFile = 'userguide/ch5--trace-monitoring-aspectj/build.gradle'
	tasks = ['jar']
}

task buildStandaloneExamplesAppendixSigar(type: GradleBuild) {
	buildFile = 'userguide/appendix-Sigar/build.gradle'
	tasks = ['jar']
}

// TODO: Get this working for all examples
task cleanStandaloneExamples(type: GradleBuild) {
	description = 'Builds the stand-alone Kieker examples in the subdirectories.'
	/*buildFile = 'userguide/ch2--bookstore-application/build.gradle'
	tasks = ['clean'] */
}