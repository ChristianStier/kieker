<?xml version="1.0" encoding="UTF-8"?>
<project name="Kieker (test)" basedir=".." xmlns:artifact="antlib:org.apache.maven.artifact.ant">
	
	<property file="build-config/build.properties" />
		
	<import file="compile-and-build.xml"/>
	
	<taskdef name="junit" classname="org.apache.tools.ant.taskdefs.optional.junit.JUnitTask" />

	<target name="run-tests-junit" depends="compile-tests" description="Runs the JUnit tests">
		
		<path id="kieker.test-junit-run-classpath">
			<fileset dir="${lib.dir}">
				<include name="hamcrest-core-*.jar" />
				<include name="junit-*.jar" />
				<include name="aspectjweaver-*.jar" /> <!-- needed for the spring tests -->
				<include name="commons-logging-*.jar" /> <!-- needed for the spring tests -->
				<include name="org.eclipse.emf.*.jar" />
				<include name="derby-*.jar" />
				<include name="framework-libs/javax.servlet-*.jar" /> <!-- needed for the cxf, spring? tests -->
				<include name="framework-libs/cxf/*.jar" /> <!-- needed for the cxf tests -->
				<include name="framework-libs/spring/*.jar" /> <!-- needed for the spring tests -->
				<include name="javax.jms-*.jar" /> 	<!-- Needed for TestPluginConfigurationRetention. -->
				<include name="commons-cli-*.jar" /> <!-- Needed for TestPluginConfigurationRetention. -->
				<include name="commons-math3-*.jar" /> <!-- Needed for some of the OPAD tests. -->
				<include name="commons-lang3-*.jar" /> <!-- Needed for some of the OPAD tests. -->

				<!-- used in tests for bridge JMS connector -->
				<include name="activemq-*.jar" />
				<include name="reflections-*.jar"/>
				<include name="geronimo-j2ee-management_1.1_spec-*.jar"/>
				<include name="slf4j-api-*.jar"/>
				<include name="javax.jms-*.jar" /> <!-- Needed for the JMSReader/Writer test -->
				
				<!-- Opad begin -->
				<include name="commons-math-*.jar"/>
				<include name="commons-lang-*.jar"/>
				<include name="REngine-*.jar"/>
				<include name="Rsession-*.jar"/>
				<include name="Rserve-*.jar"/>
				<include name="mongo-*.jar"/>
				<include name="org.json.min-*.jar"/>
				<!-- Opad end -->
				
			</fileset>
			<fileset dir="${lib.sigar.dir}">
				<include name="sigar-*.jar" />
			</fileset>
			<fileset dir="${example.javaee.jetty.lib.dir}">
				<include name="jetty-*.jar" /> <!-- needed for the cxf, spring tests -->
			</fileset>
			<fileset dir="${example.javaee.jpetstore.lib.dir}">
				<include name="asm-*.jar" /> <!-- needed for the spring tests -->
				<include name="cglib-*.jar" /> <!-- needed for the spring tests -->
			</fileset>
			<pathelement location="${build.tests.dir}/" />
			<fileset dir="${dist.dir}">
				<include name="${dist.kieker.main.jar}" />
			</fileset>
		</path>

		<delete dir="${tests.junit-results.dir}" />
		<mkdir dir="${tests.junit-results.dir}" />

		<!-- Make sure that no other rserve instance is running -->
		<!-- <antcall target="-stop-rserve.tools"></antcall> -->
		
		<!-- Start fresh rserve instance -->
		<!-- <antcall target="-start-rserve.tools"></antcall> -->
		
		<junit fork="no" printsummary="yes">
			
			<!-- If you want to execute R-related tests set this to true, otherwise to false -->
			<sysproperty key="TestKiekerRTests" value="false" />
			
			<classpath refid="kieker.test-junit-run-classpath" />
								
			<formatter type="xml" />

			<batchtest fork="true" todir="${tests.junit-results.dir}">
				<fileset dir="${build.tests.dir}/">
					<include name="**/junit/**/*Test*.class" />
					<exclude name="**/junit/**/Abstract*.class" />
					<exclude name="**/*$*.class" />
				</fileset>
			</batchtest>
		</junit>
		<!-- <antcall target="-stop-rserve.tools"></antcall> -->

		<antcall target="-test.junit.report" /> 
	</target>

	<target name="-test.junit.report" depends="" description="Creates the report for the JUnit tests">
		<mkdir dir="${tests.junit-results.dir}/report" />
		<junitreport todir="${tests.junit-results.dir}/report">
			<fileset dir="${tests.junit-results.dir}">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="frames" todir="${tests.junit-results.dir}/report" />
		</junitreport>

		<echo message="To see the test report, open ${tests.junit-results.dir}/report/index.html in your Web browser." />
	</target>
	
	<target name="-start-rserve.tools" depends="">
		<echo message="Trying to start Rserve (this might fail on systems that are not able to execute bash scripts or do not have R/Rserve installed" />
		<exec executable="${tests.rserve-control-script.sh}" spawn="true" failonerror="false" failifexecutionfails="false">
			<arg value="start" />
		</exec>
	</target>

	<target name="-stop-rserve.tools" depends="">
		<echo message="Trying to stop Rserve (Trying to start Rserve (this might fail on systems that are not able to execute bash scripts or do not have R/Rserve installed)" />
		<exec executable="${tests.rserve-control-script.sh}" failonerror="false" failifexecutionfails="false">
			<arg value="stop" />
		</exec>
	</target>
</project>
