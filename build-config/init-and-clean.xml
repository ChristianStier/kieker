<?xml version="1.0" encoding="UTF-8"?>
<project name="Kieker (init and clean)" basedir=".." xmlns:artifact="antlib:org.apache.maven.artifact.ant">

	<property file="build-config/build.properties" />
	
	<target name="-init-version" description="Initializes variables based on the Kieker version number">
		<tstamp />
		<property name="kieker.name" value="Kieker Framework" />
		<property name="kieker.version" value="1.11-SNAPSHOT" />
		
        <tstamp>
		  <format property="year" pattern="yyyy" /> <!-- e.g., 2014 -->
        </tstamp>
        <tstamp>
		  <format property="monthMMM" pattern="MMM" /> <!-- e.g., Mar, Sep, Oct -->
        </tstamp>
		
		<property name="copyright" value="Kieker Project" />

		<property name="dist.kieker.main.sources.jar" value="${kieker.main.packagenamebase}-${kieker.version}-${kieker-src.suffix}.jar" />
		<property name="dist.kieker.main.sources.aspectj.jar" value="${kieker.main.packagenamebase}-${kieker.version}_aspectj-${kieker-src.suffix}.jar" />
		<property name="dist.kieker.main.sources.emf.jar" value="${kieker.main.packagenamebase}-${kieker.version}_emf-${kieker-src.suffix}.jar" />

		<property name="dist.kieker.main.javadoc.jar" value="${kieker.main.packagenamebase}-${kieker.version}-${kieker-api.suffix}.jar" />
		<property name="dist.kieker.main.javadoc.aspectj.jar" value="${kieker.main.packagenamebase}-${kieker.version}_aspectj-${kieker-api.suffix}.jar" />
		<property name="dist.kieker.main.javadoc.emf.jar" value="${kieker.main.packagenamebase}-${kieker.version}_emf-${kieker-api.suffix}.jar" />

		<property name="dist.kieker.main.pom" value="${kieker.main.packagenamebase}-${kieker.version}.pom" />

		<property name="dist.kieker.main.jar" value="${kieker.main.packagenamebase}-${kieker.version}.jar" />
		<property name="dist.kieker.main.aspectj.jar" value="${kieker.main.packagenamebase}-${kieker.version}_aspectj.jar" />
		<property name="dist.kieker.main.aspectj.jar.latex" value="${kieker.main.packagenamebase}-${kieker.version}\\\\\\_aspectj.jar" />
		<property name="dist.kieker.main.emf.jar" value="${kieker.main.packagenamebase}-${kieker.version}_emf.jar" />
		<property name="dist.kieker.main.emf.jar.latex" value="${kieker.main.packagenamebase}-${kieker.version}\\\\\\_emf.jar" />

		<property name="kieker.dist.name" value="${kieker.packagenamebase}-${kieker.version}" />
		<property name="dist.kieker.srcBaseName" value="${kieker.dist.name}_${kieker-src.suffix}" />
		<property name="dist.kieker.binBaseName" value="${kieker.dist.name}_${kieker-bin.suffix}" />
		<property name="dist.kieker.apiBaseName" value="${kieker.dist.name}_${kieker-api.suffix}" />
		<property name="dist.kieker.userguide.pdf" value="${kieker.dist.name}_${kieker-userguide.suffix}.pdf" />
	</target>

	<target name="-update-version" unless="version.noupdate" depends="-init-version" description="Updates the version number contained in the Kieker sources">
		<replaceregexp file="${src.kieker.common.dir}/kieker/common/util/Version.java" match="VERSION = &quot;.*?&quot;" replace="VERSION = &quot;${kieker.version}&quot;" />
		<replaceregexp file="doc/userguide/bibliography.bib" match="Kieker .* User Guide" replace="Kieker ${kieker.version} User Guide" />
		<replaceregexp file="doc/userguide/bibliography.bib" match="CURYEAR = .* " replace="CURYEAR = ${year} " />
		<replaceregexp file="doc/userguide/bibliography.bib" match="CURMONTH = .* " replace="CURMONTH = ${monthMMM} " />
		<replaceregexp file="bin/dev/check-release-archives.sh" match="KIEKER_VERSION=&quot;.*?&quot;" replace="KIEKER_VERSION=&quot;${kieker.version}&quot;" />
		<!-- Not sure if String valid today, but replacing it #1199: -->
		<replaceregexp file="test/tools/kieker/test/tools/manual/TestTCPReader.java" match="lib/kieker-.*_aspectj.jar" replace="lib/kieker-${kieker.version}_aspectj.jar" />
		<replaceregexp file="examples/monitoring/custom-timesource/build.properties" match="kieker-.*_aspectj.jar" replace="kieker-${kieker.version}_aspectj.jar" />
		<replaceregexp file="examples/monitoring/probe-aspectj/build.properties" match="kieker-.*_aspectj.jar" replace="kieker-${kieker.version}_aspectj.jar" />
		<replaceregexp file="examples/monitoring/adaptive-monitoring/build.properties" match="kieker-.*_aspectj.jar" replace="kieker-${kieker.version}_aspectj.jar" />
		<replaceregexp file="examples/OverheadEvaluationMicrobenchmark/MooBench/benchmark.sh" match="kieker-.*_aspectj.jar" replace="kieker-${kieker.version}_aspectj.jar" />
		<replaceregexp file="examples/OverheadEvaluationMicrobenchmark/executeRemoteMicroBenchmark.sh" match="kieker-.*_aspectj.jar" replace="kieker-${kieker.version}_aspectj.jar" />

		<!-- Update the AspectJ version in various files -->
		<replaceregexp byline="true" flags="g">
			<regexp pattern="(aspectj.*)-.*.jar"/>
			<substitution expression="\1-${lib.aspectj.version}.jar"/>
			<fileset dir=".">
				<include name="${src.userguide.dir}/Macros.tex"/>
				<include name="${src.userguide.example.aspectj.dir}/BookstoreStarter.launch"/>
				<include name=".classpath"/>
			</fileset>
		</replaceregexp>
	</target>

	<target name="-init" depends="clean,-update-version,-init-compile-classpaths" description="Initializes variables and creates directories">
		<!-- Register special aspectj commands in ant - allow ant to use special AspectJ commands: -->
		<path id="aspectjtools-jar">
			<fileset dir="${lib.dir}">
				<include name="aspectjtools-*.jar" />
			</fileset>
		</path>
		<taskdef resource="org/aspectj/tools/ant/taskdefs/aspectjTaskdefs.properties" classpathref="aspectjtools-jar" />
		<mkdir dir="${build.dir}" />
		<mkdir dir="${dist.dir}" />
		<mkdir dir="${release.dir}" />
		<mkdir dir="${maven.dir}" />
		<mkdir dir="${build.tests.dir}" />
		<mkdir dir="${tmp.dir}" />
	</target>

	<!-- Compile classpaths used for javac and javadoc -->
	<target name="-init-compile-classpaths" description="Initializes the classpath variables for the compile and Javadoc targets">
		<path id="kieker.common-compile-classpath">
			<fileset dir="${lib.dir}">
				<include name="commons-logging-*.jar" />
				<include name="slf4j-api-*.jar" />
			</fileset>
		</path>

		<path id="kieker.monitoring-compile-classpath">
			<fileset dir="${lib.dir}">
				<!--<include name="aspectjrt-*.jar" />-->
				<include name="javax.jms-*.jar" />
				<include name="disl-*/disl-server.jar" />
				<include name="framework-libs/javax.servlet-*.jar" />
				<include name="framework-libs/cxf/cxf-*.jar" />
				<include name="framework-libs/spring/aopalliance-*.jar" />
				<include name="framework-libs/spring/spring-context-*.jar" />
				<include name="framework-libs/spring/spring-web*.jar" />
			</fileset>
			<fileset dir="${lib.sigar.dir}">
				<include name="sigar-*.jar" />
			</fileset>
			<pathelement location="${build.kieker.common.dir}/" />
		</path>

		<path id="kieker.monitoring-ajc-compile-classpath">
			<fileset dir="${lib.dir}">
				<include name="aspectjweaver-*.jar" />
				<include name="aspectjrt-*.jar" />
				<include name="framework-libs/javax.servlet-*.jar" />
			</fileset>
			<pathelement location="${build.kieker.common.dir}/" />
			<pathelement location="${build.kieker.monitoring.dir}" />
		</path>

		<path id="kieker.analysis-compile-classpath">
			<fileset dir="${lib.dir}">
				<include name="javax.jms-*.jar" />
				<include name="org.eclipse.emf.*.jar" />
			</fileset>
			<pathelement location="${build.kieker.common.dir}/" />
			<pathelement location="${build.kieker.analysis.model.dir}/" />
		</path>

		<path id="kieker.tools-compile-classpath">
			<fileset dir="${bin.dir}/dev/jnbridge/">
				<include name="bcel-5.1-jnbridge.jar" />
				<include name="jnbcore.jar" />
				<include name="log4j-core.jar" />
				<include name="log4j.jar" />
			</fileset>
			<fileset dir="${lib.dir}">
				<include name="commons-cli-*.jar" />
				<include name="jgraphx-*.jar" />
				<include name="org.eclipse.emf.*.jar" />
				<!-- Bridge begin -->
				<include name="activemq-*.jar" />
				<include name="javax.jms-*.jar" />
				<include name="reflections-*.jar"/>
				<include name="geronimo-j2ee-management_1.1_spec-*.jar"/>
				<include name="framework-libs/javax.servlet-*.jar" />
				<!-- Bridge end -->
				<!-- OPAD begin -->
				<include name="commons-math3-*.jar"/>
				<include name="commons-lang3-*.jar"/>
				<include name="REngine-*.jar"/>
				<include name="Rserve-*.jar"/>
				<include name="Rsession-*.jar"/>
				<!-- OPAD end -->
			</fileset>
			<!-- Bridge begin -->
			<fileset dir="${example.javaee.jetty.lib.dir}">
				<include name="jetty-server-*.jar" />
				<include name="jetty-util-*.jar" />
				<include name="jetty-servlet-*.jar" />
			</fileset>	
			<!-- Bridge end -->
			<pathelement location="${build.kieker.common.dir}/" />
			<pathelement location="${build.kieker.monitoring.dir}/" />
			<pathelement location="${build.kieker.analysis.dir}/" />
			<pathelement location="${build.kieker.analysis.model.dir}/" />
		</path>

		<path id="javaee.demo-compile-classpath">
			<fileset dir="${example.javaee.demo.lib.dir}">
				<include name="primefaces-*.jar" />
				<include name="ApacheJMeter_core.jar" />
				<include name="jsf-api-*.jar" />
			</fileset>
			<fileset dir="${example.javaee.jetty.lib.dir}/annotations/">
				<include name="javax.annotation-*.jar" />
			</fileset>
			<fileset dir="${dist.dir}">
				<include name="${dist.kieker.main.jar}" />
			</fileset>
		</path>
	</target>

	<target name="clean-userguide-examples" description="Removes artifacts from previous builds and manually changed configuration files">
		<ant antfile="build.xml" dir="${src.userguide.example.bookstore.dir}" target="clean" />
		<ant antfile="build.xml" dir="${src.userguide.example.manual.dir}" target="clean" />
		<ant antfile="build.xml" dir="${src.userguide.example.extended.dir}" target="clean" />
		<ant antfile="build.xml" dir="${src.userguide.example.aspectj.dir}" target="clean" />
		<ant antfile="build.xml" dir="${src.userguide.example.jms.dir}" target="clean" />
		<ant antfile="build.xml" dir="${src.userguide.example.sigar.dir}" target="clean" />
		
		<ant antfile="build.xml" dir="${src.example.analysis.kax.dir}" target="clean" />
		<ant antfile="build.xml" dir="${src.example.analysis.opad.dir}" target="clean" />
		<ant antfile="build.xml" dir="${src.example.monitoring.adaptive.dir}" target="clean" />
		<ant antfile="build.xml" dir="${src.example.monitoring.timesource.dir}" target="clean" />
		<ant antfile="build.xml" dir="${src.example.monitoring.aspectj.dir}" target="clean" />
		<ant antfile="build.xml" dir="${src.example.monitoring.manual.dir}" target="clean" />
		<ant antfile="build.xml" dir="${src.example.monitoring.spring.dir}" target="clean" />
		<ant antfile="build.xml" dir="${src.example.monitoring.jvm.dir}" target="clean" />
		<ant antfile="build.xml" dir="${src.example.monitoring.sigar.dir}" target="clean" />
		
		<delete>
			<fileset dir="${examples.dir}" includes="**/.classpath-binrelease.generated" />
		</delete>
		<!-- make sure a current version is included -->
		<copy file="${kieker.monitoring.default.properties}" tofile="${src.userguide.example.aspectj.dir}/META-INF/kieker.monitoring.properties" />
	</target>

	<target name="-prepare-userguide-examples-binary-release" depends="-init-version" description="Removes artifacts from previous builds and manually changed configuration files">
		<!-- Create .classpath variant for binary release(#710) -->
		<copy file="${src.userguide.example.manual.dir}/.classpath" tofile="${src.userguide.example.manual.dir}/.classpath-binrelease.generated" overwrite="true"/>
		<copy file="${src.userguide.example.extended.dir}/.classpath" tofile="${src.userguide.example.extended.dir}/.classpath-binrelease.generated" overwrite="true"/>
		<copy file="${src.userguide.example.aspectj.dir}/.classpath" tofile="${src.userguide.example.aspectj.dir}/.classpath-binrelease.generated" overwrite="true"/>
		<copy file="${src.userguide.example.jms.dir}/.classpath" tofile="${src.userguide.example.jms.dir}/.classpath-binrelease.generated" overwrite="true"/>
		<copy file="${src.userguide.example.sigar.dir}/.classpath" tofile="${src.userguide.example.sigar.dir}/.classpath-binrelease.generated" overwrite="true"/>

		<copy file="${src.example.analysis.kax.dir}/.classpath" tofile="${src.example.analysis.kax.dir}/.classpath-binrelease.generated" overwrite="true"/>
		<copy file="${src.example.analysis.opad.dir}/.classpath" tofile="${src.example.analysis.opad.dir}/.classpath-binrelease.generated" overwrite="true"/>
		<copy file="${src.example.monitoring.adaptive.dir}/.classpath" tofile="${src.example.monitoring.adaptive.dir}/.classpath-binrelease.generated" overwrite="true"/>
		<copy file="${src.example.monitoring.timesource.dir}/.classpath" tofile="${src.example.monitoring.timesource.dir}/.classpath-binrelease.generated" overwrite="true"/>
		<copy file="${src.example.monitoring.aspectj.dir}/.classpath" tofile="${src.example.monitoring.aspectj.dir}/.classpath-binrelease.generated" overwrite="true"/>
		<copy file="${src.example.monitoring.manual.dir}/.classpath" tofile="${src.example.monitoring.manual.dir}/.classpath-binrelease.generated" overwrite="true"/>
		<copy file="${src.example.monitoring.spring.dir}/.classpath" tofile="${src.example.monitoring.spring.dir}/.classpath-binrelease.generated" overwrite="true"/>
		<copy file="${src.example.monitoring.jvm.dir}/.classpath" tofile="${src.example.monitoring.jvm.dir}/.classpath-binrelease.generated" overwrite="true"/>
		<copy file="${src.example.monitoring.sigar.dir}/.classpath" tofile="${src.example.monitoring.sigar.dir}/.classpath-binrelease.generated" overwrite="true"/>
		
		<!-- Examples using the plain Jar -->
		<replaceregexp byline="true" flags="g">
			<regexp pattern="&lt;classpathentry .*/Kieker&quot;.*"/>
			<substitution expression="&lt;classpathentry kind=&quot;lib&quot; path=&quot;lib/${dist.kieker.main.jar}&quot;/&gt;"/>
			<fileset dir=".">
				<include name="${src.userguide.example.jms.dir}/.classpath-binrelease.generated"/>
				<include name="${src.example.monitoring.manual.dir}/.classpath-binrelease.generated"/>
				<include name="${src.example.monitoring.jvm.dir}/.classpath-binrelease.generated"/>
			</fileset>
		</replaceregexp>

		<!-- Examples using the EMF Jar -->
		<replaceregexp byline="true" flags="g">
			<regexp pattern="&lt;classpathentry .*/Kieker&quot;.*"/>
			<substitution expression="&lt;classpathentry kind=&quot;lib&quot; path=&quot;lib/${dist.kieker.main.emf.jar}&quot;/&gt;"/>
			<fileset dir=".">
				<include name="${src.userguide.example.manual.dir}/.classpath-binrelease.generated"/>
				<include name="${src.userguide.example.extended.dir}/.classpath-binrelease.generated"/>
				<include name="${src.userguide.example.sigar.dir}/.classpath-binrelease.generated"/>
				<include name="${src.example.analysis.kax.dir}/.classpath-binrelease.generated"/>
				<include name="${src.example.analysis.aspectj.dir}/.classpath-binrelease.generated"/>
			</fileset>
		</replaceregexp>

		<!-- Examples using the AspectJ Jar -->
		<replaceregexp byline="true" flags="g">
			<regexp pattern="&lt;classpathentry .*/Kieker&quot;.*"/>
			<substitution expression="&lt;classpathentry kind=&quot;lib&quot; path=&quot;lib//${dist.kieker.main.aspectj.jar}&quot;/&gt;"/>
			<fileset dir=".">
				<include name="${src.userguide.example.aspectj.dir}/.classpath-binrelease.generated"/>
				<include name="${src.example.monitoring.adaptive.dir}/.classpath-binrelease.generated"/>
				<include name="${src.example.monitoring.timesource.dir}/.classpath-binrelease.generated"/>
				<include name="${src.example.monitoring.aspectj.dir}/.classpath-binrelease.generated"/>
			</fileset>
		</replaceregexp>

		<!-- Examples referencing libs from /Kieker/lib/ -->
		<replaceregexp byline="true" flags="g">
			<regexp pattern="(&lt;classpathentry .*)/Kieker/lib/(.*&quot;.*)"/>
			<substitution expression="\1lib/\2"/>
			<fileset dir=".">
				<include name="${src.userguide.example.aspectj.dir}/.classpath-binrelease.generated"/>
				<include name="${src.userguide.example.sigar.dir}/.classpath-binrelease.generated"/>
				<include name="${src.example.monitoring.sigar.dir}/.classpath-binrelease.generated"/>
				<include name="${src.example.monitoring.spring.dir}/.classpath-binrelease.generated"/>
			</fileset>
		</replaceregexp>
	</target>

	<target name="-update-version.examples" depends="-init-version" description="Updates the Kieker version in the examples (e.g., in the .classpath files)">
		<replaceregexp file="${example.javaee.jetty.dir}/start.ini" match="kieker-\S*.jar" replace="${dist.kieker.main.aspectj.jar}" flags="g" />
		<replaceregexp file="${example.javaee.jetty.dir}/start.KiekerAspectJActivated.ini" match="kieker-\S*.jar" replace="${dist.kieker.main.aspectj.jar}" flags="g" />
		<replaceregexp file="${src.userguide.example.bookstore.dir}/.classpath" match="kieker-\S*.jar" replace="${dist.kieker.main.jar}" flags="g" />
		<replaceregexp file="${src.userguide.example.bookstore.dir}/README.txt" match="kieker-\S*.jarr" replace="${dist.kieker.main.jar}" flags="g" />
		<replaceregexp file="${src.userguide.example.manual.dir}/.classpath" match="kieker-\S*.jar" replace="${dist.kieker.main.emf.jar}" flags="g" />
		<replaceregexp file="${src.userguide.example.manual.dir}/README.txt" match="kieker-\S*.jar" replace="${dist.kieker.main.emf.jar}" flags="g" />
		<replaceregexp file="${src.userguide.example.extended.dir}/.classpath" match="kieker-\S*.jar" replace="${dist.kieker.main.emf.jar}" flags="g" />
		<replaceregexp file="${src.userguide.example.extended.dir}/README.txt" match="kieker-\S*.jar" replace="${dist.kieker.main.emf.jar}" flags="g" />
		<replaceregexp file="${src.userguide.example.aspectj.dir}/build.properties" match="kieker-\S*.jar" replace="${dist.kieker.main.aspectj.jar}" flags="g" />
		<replaceregexp file="${src.userguide.example.aspectj.dir}/.classpath" match="kieker-\S*.jar" replace="${dist.kieker.main.aspectj.jar}" flags="g" />
		<replaceregexp file="${src.userguide.example.aspectj.dir}/README.txt" match="kieker-\S*.jar" replace="${dist.kieker.main.aspectj.jar}" flags="g" />
		<replaceregexp file="${src.userguide.example.jms.dir}/.classpath" match="kieker-\S*.jar" replace="${dist.kieker.main.jar}" flags="g" />
		<replaceregexp file="${src.userguide.example.sigar.dir}/.classpath" match="kieker-\S*.jar" replace="${dist.kieker.main.jar}" flags="g" />
		
		<replaceregexp file="${src.example.analysis.kax.dir}/.classpath" match="kieker-\S*.jar" replace="${dist.kieker.main.emf.jar}" flags="g" />
		<replaceregexp file="${src.example.analysis.opad.dir}/.classpath" match="kieker-\S*.jar" replace="${dist.kieker.main.emf.jar}" flags="g" />
		<replaceregexp file="${src.example.monitoring.adaptive.dir}/.classpath" match="kieker-\S*.jar" replace="${dist.kieker.main.aspectj.jar}" flags="g" />
		<replaceregexp file="${src.example.monitoring.adaptive.dir}/.build.properties" match="kieker-\S*.jar" replace="${dist.kieker.main.aspectj.jar}" flags="g" />
		<replaceregexp file="${src.example.monitoring.timesource.dir}/.classpath" match="kieker-\S*.jar" replace="${dist.kieker.main.aspectj.jar}" flags="g" />
		<replaceregexp file="${src.example.monitoring.timesource.dir}/.build.properties" match="kieker-\S*.jar" replace="${dist.kieker.main.aspectj.jar}" flags="g" />
		<replaceregexp file="${src.example.monitoring.aspectj.dir}/.classpath" match="kieker-\S*.jar" replace="${dist.kieker.main.aspectj.jar}" flags="g" />
		<replaceregexp file="${src.example.monitoring.aspectj.dir}/.build.properties" match="kieker-\S*.jar" replace="${dist.kieker.main.aspectj.jar}" flags="g" />
		<replaceregexp file="${src.example.monitoring.manual.dir}/.classpath" match="kieker-\S*.jar" replace="${dist.kieker.main.jar}" flags="g" />
		<replaceregexp file="${src.example.monitoring.spring.dir}/.classpath" match="kieker-\S*.jar" replace="${dist.kieker.main.jar}" flags="g" />
		<replaceregexp file="${src.example.monitoring.jvm.dir}/.classpath" match="kieker-\S*.jar" replace="${dist.kieker.main.jar}" flags="g" />
		<replaceregexp file="${src.example.monitoring.sigar.dir}/.classpath" match="kieker-\S*.jar" replace="${dist.kieker.main.jar}" flags="g" />
	</target>

	<target name="clean" depends="clean-userguide-examples" description="Removes artifacts from previous builds">
		<!-- <delete dir="tmp"/>-->
		<delete dir="${dist.dir}" includeemptydirs="true" />
		<delete dir="${release.dir}" includeemptydirs="true" />
		<delete dir="${maven.dir}" includeemptydirs="true" />
		<delete dir="${build.dir}" includeemptydirs="true" />
	</target>

</project>
