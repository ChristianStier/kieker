@TECHREPORT{vanHoornRohrHasselbringWallerEhlersFreyKieselhorst2009TRContinuousMonitoringOfSoftwareServicesDesignAndApplicationOfTheKiekerFramework,
  author = {van Hoorn, Andr{\'e} and Rohr, Matthias and Hasselbring, Wilhelm
	and Waller, Jan and Ehlers, Jens and Frey, S{\"o}ren and Kieselhorst,
	Dennis},
  title = {Continuous Monitoring of Software Services: {D}esign and Application
	of the {K}ieker Framework},
  institution = {Department of Computer Science, University of Kiel, Germany},
  year = {2009},
  number = {TR-0921},
  month = nov,
  file = {:avanhoorn/vanHoornRohrHasselbringWallerEhlersFreyKieselhorst2009TRContinuousMonitoringOfSoftwareServicesDesignAndApplicationOfTheKiekerFramework-final-withmetainfo.pdf:PDF},
  owner = {voorn},
  pages = {28~pages},
  timestamp = {2009.11.17},
  url = {http://www.informatik.uni-kiel.de/uploads/tx_publication/vanhoorn_tr0921.pdf}
}

@INPROCEEDINGS{RohrHoornMatevskaStoeverSommerGieseckeHasselbring2008KiekerContinuousMonitoringAndOnDemandVisualizationOfJavaSoftwareBehavior,
  author = {Matthias Rohr and Andr\'{e} van Hoorn and Jasminka Matevska and Nils
	Sommer and Lena St\"over and Simon Giesecke and Wilhelm Hasselbring},
  title = {Kieker: {C}ontinuous Monitoring and on Demand Visualization of {J}ava
	Software Behavior},
  booktitle = {Proceedings of the IASTED International Conference on Software Engineering
	2008 (SE 2008)},
  year = {2008},
  editor = {Claus Pahl},
  pages = {80--85},
  address = {Anaheim, CA, USA},
  month = feb,
  publisher = {ACTA Press},
  abstract = {Software behavior visualizations such as UML Sequence Diagrams are
	valuable to continuous program comprehension and analysis. This paper
	introduces an approach and implementation to the continuous monitoring
	and on demand visualization of software behavior, with a focus on
	multi-user Java Web applications. Our tool, called Kieker, monitors
	response times and control-flow for selected operations of a software
	application. The monitoring overhead is intended to be small enough
	to continuously monitor a selection of operations during normal operation.
	Besides monitoring, Kieker offers the reconstruction and visualization
	of models of current or past software system behavior in terms of
	UML Sequence Diagrams, Markov chains, Component Dependency Graphs,
	Trace Timing Diagrams, as well as Execution and Message trace models.},
  file = {RohrHoornMatevskaStoeverSommerGieseckeHasselbring2008KiekerContinuousMonitoringAndOnDemandVisualizationOfJavaSoftwareBehavior.pdf:avanhoorn/RohrHoornMatevskaStoeverSommerGieseckeHasselbring2008KiekerContinuousMonitoringAndOnDemandVisualizationOfJavaSoftwareBehavior.pdf:PDF},
  isbn = {978-0-88986-715-4},
  location = {Innsbruck, Austria}
}