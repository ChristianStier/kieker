@MISC{Markov4JMeter,
  author = {Andr\'e van Hoorn},
  title = {{Markov4JMeter}},
  year = {2007},
  url = {http://markov4jmeter.sourceforge.net/}
}@InProceedings{MatevskaHasselbring:07:ScenarioAvailability,
  author =   {Jasminka Matevska and Wilhelm Hasselbring},
  title =    {A Scenario-based Approach to Increasing Service Availability at Runtime
Reconfiguration of Component-based Systems},
  booktitle = {Proceedings of 33rd Euromicro Conference on
Software Engineering and Advanced Applications (SEAA)},
  publisher = {IEEE},
  editor = {Paul Müller and Peter Liggesmeyer and Erik Maehle},
  address =  {Lübeck, Germany},
  pages =        {137-144},
  month =        Aug,
  year =     2007,
  ISBN = {0-7695-2977-1},
  ISSN = {1089-6503},
}

@InProceedings{MatevskaOlligesHasselbring:04:RuntimeRecJ2EEApp,
  author =   {Jasminka Matevska-Meyer and Sascha Olliges and Wilhelm Hasselbring},
  title =    {Runtime Reconfiguration of {J2EE} Applications},
  booktitle =    {Proceedings of DECOR'04 - 1st French Conference on Software Deployment and (Re) Configuration},
  publisher = {University of Grenoble},  
  editor = {},
  address =  {Grenoble, France},
  pages =        {77--84},
  month =        Oct,
  year =     2004,
  ISBN = {2-7261-1276-5},
}

@Book{singh02designing,
  author =   {Inderjeet Singh and Beth Stearns and Mark Johnson
                  and {Enterprise Team}},
  title =    {Designing Enterprise Applications with the J2EE
                  Platform},
  publisher =    {Addison-Wesley},
  year =     2002,
  edition =  2,
  url =
                  {http://java.sun.com/blueprints/guidelines/designing_enterprise_applications_2e/},
  isbn =     0201787903,
}

@Book{perry02jmx,
  author =   {J. Steven Perry},
  title =    {Java Management Extensions},
  publisher =    {O'Reilly},
  year =     2002
}

@book{Lyu96HandbookOfSoftwareReliabilityEngineering,
editor    = {Michael R. Lyu},
title = {Software Reliability Engineering},
publisher = {McGraw-Hill},
year      = 1996,
address   = {New York},
pages     = 850,
edition   = 1
}

%in library of uni-oldenburg: inf 325 bl 0246
@Book{MusaIanninoOkumoto87SoftwareReliabilityMeasurementPredictionApplication,
  author =	 {John D. Musa and Anthony Iannino and Kazuhira
                  Okumoto},
  title =	 {Software Reliability: Measurement, Prediction,
                  Application},
  publisher =	 {McGraw-Hill},
  year =	 1987,
  address =	 {New York},
  isbn =	 {0-07-044093-X},
  pages =	 621,
  edition =	 1,
}

@InCollection{GarlanChengSchmerl03IncreasingSystemDependabilityThroughArchitectureBasedSelfRepair,
  author =	 {David Garlan and Shang-Wen Cheng and Bradley
                  Schmerl},
  title =	 {Increasing System Dependability through
                  Architecture-based Self-repair},
  year =	 2003,
  booktitle =	 {Architecting Dependable Systems},
  crossref =	 {LemosGacekRomanovsky03ArchitectingDependableSystems},
  pages =	 {23--46},
}

@Article{AvizienisLaprieRandellLandwehr04BasicConceptsAndTaxonomyOfDependableAndSecureComputing,
  author =	 {Algirdas Avi\v{z}ienis and Jean-Claude Laprie and
                  Brian Randell and Carl Landwehr},
  title =	 {Basic Concepts and Taxonomy of Dependable and Secure
                  Computing},
  journal =	 {IEEE Transactions on Dependable and Secure Computing},
  volume =	 1,
  number =	 1,
  year =	 2004,
  issn =	 {1545-5971},
  pages =	 {11--33},
  doi =		 {10.1109/TDSC.2004.2},
  publisher =	 {IEEE},
  NOaddress =	 {Los Alamitos, CA, USA},
}

@Article{TrustSoft2006,
  author =	 {W. Hasselbring and R. Reussner},
  title =	 {Toward Trustworthy Software Systems},
  journal =	 {IEEE Computer},
  year =	 2006,
  volume =	 39,
  number =	 4,
  pages =	 {98--99},
  month =	 apr,
}

@InProceedings{FentonNeil00SoftwareMetricsRoadmap,
  author =	 {Norman E. Fenton and Martin Neil},
  title =	 {Software metrics: roadmap},
  booktitle =	 {ICSE '00: Proceedings of the Conference on The
                  Future of Software Engineering},
  year =	 2000,
  isbn =	 {1-58113-253-0},
  pages =	 {357--370},
  doi =		 {10.1145/336512.336588},
  publisher =	 {ACM Press},
}




@Book{LemosGacekRomanovsky03ArchitectingDependableSystems,
  editor =	 "R. de Lemos and C. Gacek and A. Romanovsky",
  title =	 {Architecting Dependable Systems},
  year =	 2003,
  isbn =	 {3-540-40727-8},
  series =	 {Lecture Notes in Computer Science},
  volume =	 2677,
  publisher =	 "Springer-Verlag",
  address =	 "Berlin",
}

@Book{lavy02wmi,
  author =	 {Matthew Lavy and Ashley Meggitt},
  title =	 {Windows Management Instrumentation (WMI)},
  publisher =	 {Sams},
  year =	 2002,
}

@TechReport{ws-management,
  author =	 {Sun},
  title =	 {Web Services Specifications for Systems Management},
  institution =	 {Sun Microsystems},
  year =	 2005,
  url =
                  {http://developers.sun.com/techtopics/webservices/management/},
}

@inproceedings{bischofs04hierarchical,
  author    = {Ludger Bischofs and
               Wilhelm Hasselbring and
               J{\"u}rgen Schlegelmilch and
               Ulrike Steffens},
  title     = {A Hierarchical Super Peer Network for Distributed Artifacts.},
  booktitle = {DELOS Workshop: Digital Library Architectures},
  year      = {2004},
  pages     = {105-114},
  crossref  = {DBLP:conf/delos/2004},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}

@proceedings{DBLP:conf/delos/2004,
  editor    = {Maristella Agosti and
               Hans-J{\"o}rg Schek and
               Can T{\"u}rker},
  title     = {Digital Library Architectures: Peer-to-Peer, Grid, and Service-Orientation,
               Pre-proceedings of the Sixth Thematic Workshop of the EU
               Network of Excellence DELOS, S. Margherita di Pula, Cagliari,
               Italy, 24-25 June, 2004},
  booktitle = {DELOS Workshop: Digital Library Architectures},
  publisher = {Edizioni Libreria Progetto, Padova},
  year      = {2004},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}

@Article{reussner05role,
  author =	 {Ralf H. Reussner},
  title =	 {The Role of the Software Architect: The Software
                  Architecture Memorandum of the Sylter Runde},
  journal =	 {EASST Newsletter},
  year =	 2005
}

@Article{reussner04report,
  author =	 {Ralf H. Reussner and Juliana KÃ¼ster-Filipe and Iman
                  H. Poenomo and Sandeep Shukla},
  title =	 {Report on the Workshop on Formal Foundations of
                  Embedded Software and Component-based Software
                  Architectures},
  journal =	 {EASST Newsletter},
  year =	 2004
}

@inproceedings{speck02modelbased,
  author =	 {Andreas Speck and Elke PulvermÃ¼ller and Ragnhild Van
                  Der Straeten and Ralf Reussner and Matthias Clau\ss},
  title =	 {Model-Based Software Reuse},
  editor =	 {HernÃ¡ndez, Juan and Moreira, Ana M. D.},
  booktitle =	 {Object-oriented technology : ECOOP 2002 workshop
                  reader ; proceedings},
  year =	 2002,
  series =	 {Lecture notes in computer science},
  volume =	 2548,
  isbn =	 {3-540-00233-2},
  pages =	 {135--146},
  publisher =	 {Springer-Verlag},
}

@inproceedings{matevska03exploiting,
  LOCATION =	 {Darmstadt, Germany},
  AUTHOR =	 {J. Matevska-Meyer and W. Hasselbring and
                  R. Reussner},
  BOOKTITLE =	 {Proceedings of the Eighth International Workshop on
                  Component-Oriented Programming, WCOP 2003},
  LANGUAGE =	 {english},
  TITLE =	 {Exploiting Protocol Information for Speeding up
                  Runtime Reconfiguration of Component-Based Systems},
  YEAR =	 2003,
  URL =
                  {http://se.informatik.uni-oldenburg.de/pubdb_files/pdf/WCOP2003.pdf},
  abstract =	 {To reduce the down-time of software systems and
                  maximise the set of available services during
                  reconfiguration, we propose exploiting component
                  protocol information. This is achieved by knowing
                  the state of a running system and determining the
                  component dependencies for the time interval from
                  receiving a reconfiguration request until
                  reconfiguration completion. For this forecast we use
                  the architectural descriptions that specify static
                  dependencies, as well as component protocol
                  information. By considering only component
                  interactions for the time interval of
                  reconfiguration we can exclude past and future
                  dependencies from our runtime dependency graphs. We
                  show that such change-request-specific runtime
                  dependency graphs may be considerably smaller than
                  the corresponding static architecture based
                  dependency graphs; this way, we are speeding up
                  runtime reconfiguration of component-based systems
                  while maximising the set of available services.}
}

@inproceedings{matevskameyer04software,
  AUTHOR =	 {Jasminka Matevska-Meyer and Wilhelm Hasselbring and
                  Ralf H. Reussner},
  BOOKTITLE =	 {Proceedings of the Ninth International Workshop on
                  Component-Oriented Programming (WCOP'04)},
  EDITOR =	 {Jan Bosch and Clemens Szyperski and Wolfgang Weck},
  LANGUAGE =	 {english},
  MONTH =	 Jun,
  TITLE =	 {On A Software Architecture Description supporting
                  Component Deployment and System Runtime
                  Reconfiguration},
  YEAR =	 2004
}

@article{reussner03reliability,
  author =	 {Ralf H. Reussner and Heinz W. Schmidt and Iman
                  H. Poernomo},
  title =	 {Reliability prediction for component-based software
                  architectures},
  journal =	 {J. Syst. Softw.},
  volume =	 66,
  number =	 3,
  year =	 2003,
  issn =	 {0164-1212},
  pages =	 {241--252},
  doi =		 {10.1016/S0164-1212(02)00080-8},
  publisher =	 {Elsevier Science Inc.},
  abstract =	 { One of the motivations for specifying software
                  architectures explicitly is the use of high level
                  structural design information for improved control
                  and prediction of software system quality
                  attributes. In this paper, we present an approach
                  for determining the reliability of component-based
                  software architectures.Our method is based on rich
                  architecture definition language (RADL) oriented
                  towards modem industrial middleware platforms, such
                  as Microsoft's. NET and Sun's EJB. Our methods
                  involve parameterised contractual specifications
                  based on state machines and thus permits efficient
                  static analysis.We show how RADL allows software
                  architects to predict component reliability through
                  compositional analysis of usage profiles and of
                  environment component reliability. We illustrate our
                  approach with an e-commerce example and report about
                  empirical measurements which confirm our analytical
                  reliability prediction through monitoring in our
                  reliability test-bed. Our evaluation confirms that
                  prediction accuracy for software components
                  necessitates modelling the behaviour of binary
                  components and the dependency of provided services
                  on required components. Fortunately, our
                  measurements also show that an abstract protocol
                  view of that behaviour is sufficient to predict
                  reliability with high accuracy. The reliability of a
                  component most strongly depends on its
                  environment. Therefore, we advocate a reliability
                  model parameterized by required component
                  reliability in a deployment context. },
  keywords =	 { availability, component-based software,
                  reliability, software architecture}
}

@INPROCEEDINGS{kent02negotiable,
  author =	 {Simon D. Kent and Chris Ho-Stuart and Paul Roe},
  title =	 {Negotiable Interfaces for Components},
  booktitle =	 {Fourth Australasian Workshop on Software and Systems
                  Architectures},
  year =	 2002,
  editor =	 {Ralf H. Reussner and Iman Poernomo and John Grundy},
  address =	 {Sydney, Australia},
  month =	 Feb,
  local =	 {kent02negotiable.pdf},
  abstract =	 {Component specifications are vital for communicating
                  a component s requirements, as components are
                  subject to third-party composition. Most modern
                  programming languages lack sufficient features to
                  express the full requirements of a component,
                  however, much less enforce them. Pre- and
                  post-conditions can capture functional aspects of a
                  component s requirements, but are unable to express
                  many temporal constraints such as re-entrance
                  restrictions or changing availability of services
                  over the lifetime of a component instance
                  (object). The approach described within forms a
                  basis for extending the specification of components
                  at the programming language level, thus making such
                  specifications enforceable. Interfaces are extended
                  with a factorable, abstract state, and methods of
                  interfaces are extended with state transformation
                  behaviours. A new programming language command, the
                  USE statement, allows clients to negotiate for those
                  services provided by an object. A mixture of static
                  and dynamic checking ensures the consistency of an
                  object s state according to the specification of the
                  object s interfaces. The mechanism proposed allows a
                  clearer expression of re-entrance conditions and
                  dynamic service availability, and a greater level of
                  checking that allows erroneous cases to be prevented
                  or detected during development time. The mechanism
                  also acts as a self-documenting feature for
                  interfaces.},
}

@INPROCEEDINGS{reussner01enhanced,
  author =	 {R. Reussner},
  title =	 {Enhanced Component Interfaces to Support Dynamic
                  Adaption and Extension},
  booktitle =	 {Proceedings of the 34th Annual Hawaii International
                  Conference on System Sciences (HICSS-34)-Volume 9},
  year =	 2001,
  pages =	 9043,
  publisher =	 {IEEE Computer Society},
  isbn =	 {0-7695-0981-9},
}

@INPROCEEDINGS{reussner02counter,
  author =	 {Ralf Reussner},
  title =	 {Counter-Constrained Finite State Machines: A New
                  Model for Component Protocols with
                  Resource-Dependencies},
  booktitle =	 {Proceedings of the 29th Conference on Current Trends
                  in Theory and Practice of Informatics},
  year =	 2002,
  pages =	 {20--40},
  publisher =	 {Springer-Verlag},
  isbn =	 {3-540-00145-X},
}

@inproceedings{schmidt02generating,
  author =	 {Heinz W. Schmidt and Ralf H. Reussner},
  title =	 {Generating adapters for concurrent component
                  protocol synchronisation},
  booktitle =	 {Proceedings of the IFIP TC6/WG6.1 Fifth
                  International Conference on Formal Methods for Open
                  Object-Based Distributed Systems V (FMOODS 2002)},
  year =	 2002,
  isbn =	 {0-7923-7683-8},
  pages =	 {213--229},
  publisher =	 {Kluwer, B.V.},
}

@inproceedings{reussner03contracts,
  AUTHOR =	 {Ralf H. Reussner and Iman H. Poernomo and Heinz
                  W. Schmidt},
  BOOKTITLE =	 {Proceedings of the Eigth International Workshop on
                  Component-Oriented Programming (WCOP'03)},
  EDITOR =	 {Wolfgang Weck and Jan Bosch and Clemens Szyperski},
  LANGUAGE =	 {english},
  MONTH =	 6,
  TITLE =	 {Contracts and Quality Attributes for Software
                  Components},
  YEAR =	 2003,
  URL =
                  {http://se.informatik.uni-oldenburg.de/pubdb_files/pdf/reussner03b.pdf}
}

@inproceedings{reussner04parametric,
  AUTHOR =	 {Ralf H. Reussner and Viktoria Firus and Steffen
                  Becker},
  BOOKTITLE =	 {Proceedings of the 9. International Workshop on
                  Component-Oriented Programming (WCOP 04)},
  EDITOR =	 {Clemens Szyperski and Jan Bosch and Wolfgang Weck},
  LANGUAGE =	 {english},
  MONTH =	 6,
  TITLE =	 {Parametric Performance Contracts for Software
                  Components and their Compositionality},
  YEAR =	 2004,
  noURL =
                  {http://se.informatik.uni-oldenburg.de/pubdb_files/pdf/Parametric performance contracts for software components and their compositionality.pdf}
}

@InProceedings{pedersen02begriffssysteme,
  author =	 {S. Pedersen and W. Hasselbring},
  booktitle =	 {Tagungsband der 7. Fachtagung Deutscher Verband
                  Medizinischer Dokumentare (DVMD 2002)},
  language =	 {german},
  month =	 3,
  nourl =	 {http://www.dvmd.de/tagung2002},
  pages =	 {47-52},
  title =	 {{Begriffssysteme fÃ¼r die medizinische
                  Dokumentation}},
  year =	 2002,
  nourl =
                  {http://se.informatik.uni-oldenburg.de/pubdb_files/pdf/DVMD2002.pdf},
}

@Article{pedersen04interoperabilitaet,
  author =	 {S. Pedersen and W. Hasselbring},
  journal =	 {Informatik -- Forschung und Entwicklung},
  language =	 {german},
  pages =	 {174-188},
  title =	 {{InteroperabilitÃ¤t fÃ¼r Informationssysteme im
                  Gesundheitswesen}},
  volume =	 18,
  number =	 {?},
  year =	 2004,
  nourl =
                  {http://se.informatik.uni-oldenburg.de/pubdb_files/pdf/IFuE2004.pdf},
}

@misc{wiki:kraftwerksleitstand,
   author = "Wikipedia",
   title = "Leitstand --- {W}ikipedia{,} The Free Encyclopedia",
   year = "2006",
   url = "\url{http://de.wikipedia.org/wiki/Leitstand}",
   note = "[Online; letzter Zugriff 28.7.2006]"
}@inproceedings{maibaum84what,
  author =	 {T. S. E. Maibaum and W. M. Turski},
  title =	 {On what exactly is going on when software is
                  developed step-by-step},
  booktitle =	 {Proceedings of the 7th international conference on
                  Software engineering},
  year =	 1984,
  isbn =	 {0-8186-0528-6},
  pages =	 {528--533},
  location =	 {Orlando, Florida, United States},
  publisher =	 {IEEE Press},
  abstract =	 { In this paper we present a (necessarily) informal
                  and brief description of formal concepts which lend
                  mathematical support to a paradigm of software
                  development. Some important obligations which must
                  be met by the software developers are pointed
                  out. Correspondences between widely adhered to
                  practices and their mathematical counterparts are
                  identified and explained. }
}

@article{hasselbring99defining,
  author =	 {Wilhelm Hasselbring},
  title =	 {Technical opinion: On defining computer science
                  terminology},
  journal =	 {Commun. ACM},
  volume =	 42,
  number =	 2,
  year =	 1999,
  issn =	 {0001-0782},
  pages =	 {88--91},
  doi =		 {http://doi.acm.org/10.1145/293411.293488},
  publisher =	 {ACM Press},
}


@article{sharp00community,
  author =	 {Helen Sharp and Hugh Robinson and Mark Woodman},
  title =	 {Software Engineering: Community and Culture},
  journal =	 {IEEE Softw.},
  volume =	 17,
  number =	 1,
  year =	 2000,
  issn =	 {0740-7459},
  pages =	 {40--47},
  doi =		 {http://dx.doi.org/10.1109/52.819967},
  publisher =	 {IEEE Computer Society Press},
  abstract =	 {Ideas and techniques from the social sciences can
                  improve the theory and practice of the software
                  engineering discipline. To illustrate the
                  contributions this cross-pollination has made, these
                  authors focus on the nature of paradigms and
                  software quality management systems. Their studies
                  underscore the importance of community in how new
                  technical ideas become accepted, how despite
                  software engineers too often prefer polemic to
                  evidence, and the primacy given to the local guru
                  that transcends formal organizational structures.}
}

@article{harel04meaningful,
  author =	 {David Harel and Bernhard Rumpe},
  title =	 {Meaningful Modeling: What's the Semantics of
                  "Semantics"?},
  journal =	 {Computer},
  volume =	 37,
  number =	 10,
  year =	 2004,
  issn =	 {0018-9162},
  pages =	 {64--72},
  doi =		 {http://dx.doi.org/10.1109/MC.2004.172},
  publisher =	 {IEEE Computer Society Press},
  abstract =	 {Researchers differ on what constitutes semantics for
                  UML subsets and adaptations. Worse, implicit
                  assumptions often influence these definitions and
                  results, which makes comparing published research on
                  UML semantics difficult.The authors have thus set
                  out to clarify some of the notions involved in
                  defining modeling languages, with an eye toward the
                  particular difficulties arising in defining
                  UML. They are primarily interested in distinguishing
                  a language's notation, or syntax, from its meaning,
                  or semantics, as well as recognizing the differences
                  between variants of syntax and semantics in their
                  nature, purpose, style, and use.}
}

@article{spinellis03global,
  author =	 {Diomidis Spinellis},
  title =	 {Global Analysis and Transformations in Preprocessed
                  Languages},
  journal =	 {IEEE Trans. Softw. Eng.},
  volume =	 29,
  number =	 11,
  year =	 2003,
  issn =	 {0098-5589},
  pages =	 {1019--1030},
  doi =		 {http://dx.doi.org/10.1109/TSE.2003.1245303},
  publisher =	 {IEEE Press},
  abstract =	 {Tool support for refactoring code written in
                  mainstream languages such as C and C++ is currently
                  lacking due to the complexity introduced by the
                  mandatory preprocessing phase that forms part of the
                  C/C++ compilation cycle. The defintion and use of
                  macros complicates the notions of scope and of
                  identifier boundaries. The concept of token
                  equivalence classes can be used to bridge the gap
                  between the language proper semantic analysis and
                  the nonpreprocessed source code. The CScout
                  toolchest uses the developed theory to analyze large
                  interdependent program families. A Web-based
                  interactive front end allows the precise realization
                  of rename and remove refactorings on the original C
                  source code. In addition, CScout can convert
                  programs into a portable obfuscated format or store
                  a complete and accurate representation of the code
                  and its identifiers in a relational database.},
  keywords =	 { Refactoring, preprocessor, program families,
                  renaming, C, C++, reverse engineering}
}

@article{mens04survey,
  author =	 {Tom Mens and Tom Tourwé},
  title =	 {A Survey of Software Refactoring},
  journal =	 {IEEE Trans. Softw. Eng.},
  volume =	 30,
  number =	 2,
  year =	 2004,
  issn =	 {0098-5589},
  pages =	 {126--139},
  doi =		 {http://dx.doi.org/10.1109/TSE.2004.1265817},
  publisher =	 {IEEE Press},
  abstract =	 {This paper provides an extensive overview of
                  existing research in the field of software
                  refactoring. This research is compared and discussed
                  based on a number of different criteria: the
                  refactoring activities that are supported, the
                  specific techniques and formalisms that are used for
                  supporting these activities, the types of software
                  artifacts that are being refactored, the important
                  issues that need to be taken into account when
                  building refactoring tool support, and the effect of
                  refactoring on the software process. A running
                  example is used throughout the paper to explain and
                  illustrate the main concepts. },
  keywords =	 { Coding tools and techniques, programming
                  environments/construction tools, restructuring,
                  reverse engineering, reengineering}
}

@article{hungerford04reviewing,
  author =	 {Bruce C. Hungerford and Alan R. Hevner and Rosann
                  W. Collins},
  title =	 {Reviewing Software Diagrams: A Cognitive Study},
  journal =	 {IEEE Trans. Softw. Eng.},
  volume =	 30,
  number =	 2,
  year =	 2004,
  issn =	 {0098-5589},
  pages =	 {82--96},
  doi =		 {http://dx.doi.org/10.1109/TSE.2004.1265814},
  publisher =	 {IEEE Press},
  abstract =	 {Reviews and inspections of software artifacts
                  throughout the development life cycle are effective
                  techniques for identifying defects and improving
                  software quality. While review methods for
                  text-based artifacts (e.g., code) are well
                  understood, very little guidance is available for
                  performing reviews of software diagrams, which are
                  rapidly becoming the dominant form of software
                  specification and design. Drawing upon human
                  cognitive theory, we study how 12 experienced
                  software developers perform individual reviews on a
                  software design containing two types of diagrams:
                  entity-relationship diagrams and data flow
                  diagrams. Verbal protocol methods are employed to
                  describe and analyze defect search patterns among
                  the software artifacts, both text and diagrams,
                  within the design. Results indicate that search
                  patterns that rapidly switch between the two design
                  diagrams are the most effective. These findings
                  support the cognitive theory thesis that how an
                  individual processes information impacts processing
                  success. We conclude with specific recommendations
                  for improving the practice of reviewing software
                  diagrams.},
  keywords =	 { Defects, human cognitive theory, inspections,
                  software diagrams, software quality, software
                  reviews, verbal protocol methods}
}

@article{lethbridge03software,
  author    = {Timothy Lethbridge and
               Janice Singer and
               Andrew Forward},
  title     = {How Software Engineers Use Documentation: The State of the
               Practice.},
  journal   = {IEEE Software},
  volume    = {20},
  number    = {6},
  year      = {2003},
  pages     = {35-39},
  ee        = {http://csdl.computer.org/comp/mags/so/2003/06/s6035abs.htm},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}

@article{birk03product,
  author    = {Andreas Birk and
               Gerald Heller and
               Isabel John and
               Klaus Schmid and
               Thomas von der Ma{\ss}en and
               Klaus M{\"u}ller},
  title     = {Product Line Engineering: The State of the Practice.},
  journal   = {IEEE Software},
  volume    = {20},
  number    = {6},
  year      = {2003},
  pages     = {52-60},
  ee        = {http://csdl.computer.org/comp/mags/so/2003/06/s6052abs.htm},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}

@article{reifer03practice,
  author    = {Donald J. Reifer},
  title     = {Is the Software Engineering State of the Practice Getting
               Closer to the State of the Art?},
  journal   = {IEEE Software},
  volume    = {20},
  number    = {6},
  year      = {2003},
  pages     = {78-83},
  ee        = {http://csdl.computer.org/comp/mags/so/2003/06/s6078abs.htm},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}

@article{alexander04understanding,
  author    = {Ian F. Alexander and
               Suzanne Robertson},
  title     = {Understanding Project Sociology by Modeling Stakeholders.},
  journal   = {IEEE Software},
  volume    = {21},
  number    = {1},
  year      = {2004},
  pages     = {23-27},
  ee        = {http://csdl.computer.org/comp/mags/so/2004/01/s1023abs.htm},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}

@article{raymond04alchemy,
  author    = {Eric S. Raymond},
  title     = {Point: Up from Alchemy},
  journal   = {IEEE Software},
  volume    = {21},
  number    = {1},
  year      = {2004},
  pages     = {88-90},
  ee        = {http://csdl.computer.org/comp/mags/so/2004/01/s1088abs.htm},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}

@article{schrage04never,
  author    = {Michael Schrage},
  title     = {Never Go to a Client Meeting without a Prototype.},
  journal   = {IEEE Software},
  volume    = {21},
  number    = {2},
  year      = {2004},
  pages     = {42-45},
  ee        = {http://csdl.computer.org/comp/mags/so/2004/02/s2042abs.htm},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}

@article{moitra04bookshelf,
  author =	 {Deependra Moitra and Martin Fogarty},
  title =	 {Bookshelf.},
  journal =	 {IEEE Software},
  volume =	 {21},
  number =	 {2},
  year =	 {2004},
  pages =	 {100-101},
  ee =
                  {http://csdl.computer.org/comp/mags/so/2004/02/s2100abs.htm},
  bibsource =	 {DBLP, http://dblp.uni-trier.de},
  note =	 {Review of Endres/Rombach: A Handbook of Software and
                  Systems Engineering, Empirical Observations, Laws
                  and Theories; Bittner/Spence: Use Case Modeling}
}

@Article{shaw02what,
  author =	 {Mary Shaw},
  title =	 {What makes good research in software engineering?},
  journal =	 {International Journal on Software Tools for
                  Technology Transfer },
  year =	 {2002},
  volume =	 4,
  number =	 1,
  pages =	 {1-7},
  month =	 Oct,
  doi =		 {10.1007/s10009-002-0083-4},
  issn =	 {1433-2779},
  abstract =	 {Physics, biology, and medicine have well-refined
                  public explanations of their research
                  processes. Even in simplified form, these provide
                  guidance about what counts as "good research" both
                  inside and outside the field. Software engineering
                  has not yet explicitly identified and explained
                  either our research processes or the ways we
                  recognize excellent work. Science and engineering
                  research fields can be characterized in terms of the
                  kinds of questions they find worth investigating,
                  the research methods they adopt, and the criteria by
                  which they evaluate their results. I will present
                  such a characterization for software engineering,
                  showing the diversity of research strategies and the
                  way they shift as ideas mature. Understanding these
                  strategies should help software engineers design
                  research plans and report the results clearly; it
                  should also help explain the character of software
                  engineering research to computer science at large
                  and to other scientists.},
}

@article{berry05syntactically,
  author =	 {Daniel M. Berry and Erik Kamsties},
  title =	 {The Syntactically Dangerous All and Plural in
                  Specifications},
  journal =	 {IEEE Softw.},
  volume =	 22,
  number =	 1,
  year =	 2005,
  issn =	 {0740-7459},
  pages =	 {55--57},
  doi =		 {http://dx.doi.org/10.1109/MS.2005.22},
  publisher =	 {IEEE Computer Society Press},
  abstract =	 {The word "all" and the plural can be misused in ways
                  that create ambiguities and other problems in
                  computer-based system specification documents. The
                  authors describe these and related misuses, the
                  ambiguities and problems they can cause, and how to
                  avoid them.},
  keywords =	 { natural language, syntax, semantics, requirements
                  specification },
  printed =	 {yes},
}

@article{kandrup05systems,
  author =	 {Susanne Kandrup},
  title =	 {On Systems Coaching},
  journal =	 {IEEE Softw.},
  volume =	 22,
  number =	 1,
  year =	 2005,
  issn =	 {0740-7459},
  pages =	 {52--54},
  doi =		 {http://dx.doi.org/10.1109/MS.2005.15},
  publisher =	 {IEEE Computer Society Press},
  abstract =	 {Producing good systems relies on asking "the right
                  questions" to discover users' real
                  requirements. Family therapy provides interview
                  techniques and different types of questions that can
                  generate new knowledge.},
  keywords =	 { requirements specification, systems coaching,
                  family therapy},
}

@inproceedings{rout99consistency,
  author =	 {Terry Rout},
  title =	 {Consistency and Conflict in Terminology in Software
                  Engineering Standards},
  booktitle =	 {ISESS '99: Proceedings of the 4th IEEE International
                  Symposium and Forum on Software Engineering
                  Standards},
  year =	 1999,
  isbn =	 {0-7695-0068-4},
  pages =	 67,
  publisher =	 {IEEE Computer Society},
  abstract =	 { The results of a study of consistency of
                  terminology in a group of Standards and related
                  documents dealing with software engineering are
                  presented. A lack of consistent definition of some
                  key terms is identified. Possible strategies to
                  address the problem are suggested; such steps would
                  lead in the longer term to a more coherent and
                  understandable set of documents. }
}

@article{kelsey96bad,
  author =	 {Robert Bruce Kelsey},
  title =	 {Bad fixes, change specifications, and linguistic
                  constraints on problem diagnosis},
  journal =	 {SIGSOFT Softw. Eng. Notes},
  volume =	 21,
  number =	 2,
  year =	 1996,
  issn =	 {0163-5948},
  pages =	 {74--78},
  doi =		 {http://doi.acm.org/10.1145/227531.227543},
  publisher =	 {ACM Press},
  abstract =	 {Analyzing, diagnosing, and proposing fixes to
                  problems in complex software is essentially a
                  linguistic activity: we think in languages such as C
                  and English, we analyze written problem reports, we
                  read listings. In cognitive psychology and
                  interpretation theory, the linguistic constraints
                  upon cognition are well established; but with the
                  exception of those authors working within the field
                  of Speech Act Theory, little has been said about how
                  these constraints affect software problem diagnosis
                  or what we can do to overcome these
                  constraints. This paper examines some of the
                  linguistic aspects of software problem analysis,
                  showing how these may contribute to the bad fix, and
                  then describes a change specification procedure
                  specifically designed to help development teams
                  overcome some of the liabilities of interpreting
                  complex software failures.},
  keywords =	 { change management, phenomenology, software
                  maintenance, speech act theory }
}

@Article{zendler01preliminary,
  author =	 {Andreas Zendler},
  title =	 {A Preliminary Software Engineering Theory as
                  Investigated by Published Experiments.},
  journal =	 {Empirical Software Engineering},
  volume =	 6,
  number =	 2,
  year =	 2001,
  pages =	 {161-180},
  bibsource =	 {DBLP, http://dblp.uni-trier.de}, read = {yes},
}



@InProceedings{white76engineering,
  author =	 {John R. White and Taylor L. Booth},
  title =	 {Towards an engineering approach to software design},
  booktitle =	 {ICSE '76: Proceedings of the 2nd international
                  conference on Software engineering},
  year =	 1976,
  pages =	 {214-222},
  location =	 {San Francisco, California, United States},
  publisher =	 {IEEE Computer Society Press},
  address =	 {Los Alamitos, CA, USA},
  abstract =	 {The software design process is discussed from an
                  engineering point of view. Initially, a distinction
                  is made between software design and program
                  design. Software design is then described in terms
                  of evolving a system architecture independently of
                  implementation considerations. Computation
                  structures are introduced as a means of modeling the
                  dynamic behavior of a software
                  architecture. Functional completeness, quality,
                  machine independence, and performance completeness
                  of a design are then used as criteria for
                  engineering design decisions. Finally, the basic
                  elements of a system to support the software design
                  process are described.},
  keywords =	 {process support system, design decisions},
}

@Article{gonzales05developing_requirements_discipline,
  author =	 {Regina Gonzales},
  title =	 {Developing the Requirements Discipline: Software
                  vs. Systems},
  journal =	 {IEEE Softw.},
  volume =	 22,
  number =	 2,
  year =	 2005,
  issn =	 {0740-7459},
  pages =	 {59-61},
  doi =		 {http://dx.doi.org/10.1109/MS.2005.37},
  publisher =	 {IEEE Computer Society Press},
  address =	 {Los Alamitos, CA, USA},
  abstract =	 { Despite their cultural differences, software
                  engineering and systems engineering communities can
                  learn from each other. For the requirements
                  engineering discipline to continue to develop, the
                  two communities must engage in dialogue with each
                  other and find influences in other disciplines. },
}

@article{boehm04idave,
  author =	 {Barry W. Boehm and Li Guo Huang and Apurva Jain and
                  Raymond J. Madachy},
  title =	 {The ROI of Software Dependability: The iDAVE Model.},
  journal =	 {IEEE Software},
  volume =	 21,
  number =	 3,
  year =	 2004,
  pages =	 {54-61},
  ee =
                  {http://csdl.computer.org/comp/mags/so/2004/03/s3054abs.htm},
  bibsource =	 {DBLP, http://dblp.uni-trier.de}
}

@InProceedings{farbey01evaluation,
  author =	 {Farbey, B. and Finkelstein, A. },
  title =	 {Evaluation in software engineering: ROI, but more
                  than ROI},
  booktitle =	 {3rd International Workshop on Economics-Driven
                  Software Engineering Research (EDSER-3 2001)},
  year =	 2001
}

@InProceedings{reijonen-software,
  author =	 {Pekka Reijonen},
  title =	 {Software Development and IS Use},
  booktitle =	 {?},
  pages =	 {305-319},
  year =	 {2000?}
}

@Article{harrison05skinner,
  author =	 {Warren Harrison},
  title =	 {Skinner Wasn't a Software Engineer},
  journal =	 {IEEE Software},
  year =	 2005,
  pages =	 {5-7}
}


@article{mylopoulos01exploring,
  author =	 {John Mylopoulos and Lawrence Chung and Stephen Liao
                  and Huaiqing Wang and Eric S. K. Yu},
  title =	 {Exploring Alternatives during Requirements
                  Analysis.},
  journal =	 {IEEE Software},
  volume =	 18,
  number =	 1,
  year =	 2001,
  ee =
                  {http://www.computer.org:80/software/so2001/s1092abs.htm},
  bibsource =	 {DBLP, http://dblp.uni-trier.de}
}

@article{boehm88spiral,
  author =	 {Barry W. Boehm},
  title =	 {A Spiral Model of Software Development and
                  Enhancement.},
  journal =	 {IEEE Computer},
  volume =	 21,
  number =	 5,
  year =	 1988,
  pages =	 {61-72},
  bibsource =	 {DBLP, http://dblp.uni-trier.de}
}

@Article{mikkonen01flexibility,
  author =	 {Tommi Mikkonen and Peeter Pruuden},
  title =	 {Flexibility as a Design Driver},
  journal =	 {Computer},
  volume =	 34,
  number =	 11,
  year =	 2001,
  issn =	 {0018-9162},
  pages =	 {52-56},
  doi =		 {http://dx.doi.org/10.1109/2.963444},
  publisher =	 {IEEE Computer Society Press},
  address =	 {Los Alamitos, CA, USA},
}

@Article{conway68committees,
  author = 	 {Melvin E. Conway},
  title = 	 {How Do Committees Invent?},
  journal = 	 {Datamation},
  year = 	 1968,
  month = 	 Apr, NOurl =
                  {http://www.melconway.com/research/committees.html},
}

@inproceedings{parnas94software,
  author =	 {David Lorge Parnas},
  title =	 {Software aging},
  booktitle =	 {ICSE '94: Proceedings of the 16th international
                  conference on Software engineering},
  year =	 1994,
  isbn =	 {0-8186-5855-X},
  pages =	 {279--287},
  location =	 {Sorrento, Italy},
  publisher =	 {IEEE Computer Society Press},
  address =	 {Los Alamitos, CA, USA},
}

@Manual{ieee610.12,
  key =		 {IEEE 610.12:1990},
  title =	 {IEEE 610.12:1990: Standard Glossary of Software Engineering Terminology},
  organization = {IEEE},
  note =	 {Published standard},
  year =	 1990
}

@article{krueger92reuse,
  author =	 {Charles W. Krueger},
  title =	 {Software reuse},
  journal =	 {ACM Comput. Surv.},
  volume =	 24,
  number =	 2,
  year =	 1992,
  issn =	 {0360-0300},
  pages =	 {131--183},
  doi =		 {http://doi.acm.org/10.1145/130844.130856},
  publisher =	 {ACM Press},
  address =	 {New York, NY, USA},
}

@inproceedings{girczyc93increasing,
  author =	 {Emil Girczyc and Steve Carlson},
  title =	 {Increasing design quality and engineering
                  productivity through design reuse},
  booktitle =	 {DAC '93: Proceedings of the 30th international
                  conference on Design automation},
  year =	 1993,
  isbn =	 {0-89791-577-1},
  pages =	 {48--53},
  location =	 {Dallas, Texas, United States},
  doi =		 {10.1145/157485.164565},
  publisher =	 {ACM Press},
  address =	 {New York, NY, USA},
}


@InCollection{shneiderman87direct,
  author =	 {B. Shneiderman},
  title =	 {Direct Manipulation: A Step Beyond Programming
                  Languages},
  booktitle =	 {Readings in Human-Computer Interaction: A
                  Multidisciplinary Approach},
  pages =	 {461-467},
  publisher =	 {Morgan Kaufmann},
  year =	 1987,
  editor =	 {Baecker, R. M. and W. A. S. Buxton}
}

@Manual{ieee1471-2000,
  title =	 {Recommended Practice for Architectural
                  Description of Software-Intensive Systems},
  author =	 {{ISO}},
  type =	 {Standard},
  year =	 2006,
  note =	 {IEEE Standard 1471-2000, ISO/IEC DIS 25961.},
}


@Manual{ieee1016-1998,
  title =	 {IEEE Recommended Practice for Software Design Descriptions},
  author =	 {{IEEE}},
  type =	 {Standard},
  year =	 1998,
  note =	 {IEEE Standard 1016-1998}
}


@Manual{dublin-core,
  title =	 {Dublin Core Metadata Initiative},
  key =		 {DCMI},
  url =		 {http://dublincore.org/},
  year =	 {n.d.},
}



@Manual{rdf-primer,
  organization = {W3C},
  title =	 {RDF Primer},
  key =		 {RDF},
  url =		 {http://www.w3.org/TR/2004/REC-rdf-primer-20040210/},
  year =	 2004,
  month =	 Feb,
}


@Manual{together-architect,
  title =	 {Borland Together Architect},
  key =		 {Borland},
  url =		 {http://www.borland.com/together/architect/index.html},
  year =	 {n.d.},
}

@Manual{corba,
  title =	 {Common Object Request Broker Architecture (CORBA)
                  Core Specification 3.0.3},
  organization = {Object Management Group},
  key =		 {OMG},
  year =	 2004,
  note =	 {OMG Specification formal/2004-03-01},
}

@Manual{hisa,
  title =	 {Standard Architecture for Healthcare Information Systems},
  organization = {European Committee for Standardization (CEN)},
  key =		 {CEN},
  year =	 2004,
  note =	 {ENV 12967},
}

@Manual{j2ee,
  title =	 {Java Platform, Enterprise Edition 5 (Java EE 5)
                  Specification},
  organization = {Sun Microsystems},
  key =		 {Sun},
  year =	 2005,
  note =	 {JSR-000244, Proposed Final Draft},
}

@Manual{websphere-mq,
  title =	 {WebSphere MQ Version 6.0},
  organization = {IBM},
  key =		 {IBM},
  year =	 2005,
  note =
                  {\url{http://www-306.ibm.com/software/integration/wmq/v60/}},
}

@Manual{uml2superstructure,
  title =	 {UML 2.0 Superstructure Specification},
  organization = {Object Management Group},
  key =		 {{OMG}},
  year =	 2005,
  note =	 {OMG Specification formal/05-07-04},
}

@Manual{iso-14750,
  title =	 {Information technology -- Open Distributed Processing -- Interface Definition Language},
  author =	 {{ISO/IEC}},
  type =	 {Standard},
  year =	 1999,
  note =	 {ISO/IEC Standard 14750:1999}
}

@Manual{wsdl,
  title =	 {Web Services Description Language (WSDL) 1.1},
  month =	 Mar,
  author =	 {{W3C}},
  type =	 {Note},
  year =	 2001,
}

@Manual{iec61850,
  title =	 {Communication Networks and Systems in Substations},
  author =	 {{IEC}},
  type =	 {Standard},
  year =	 2005,
  note =	 {IEC Standard 61850}
}

@Manual{iccp-tase2,
  title =	 {Fieldbus Technology -- Systems Integration,
                  Networking, and Engineering},
  author =	 {{IEC}},
  type =	 {Standard},
  year =	 1998,
  note =	 {IEC Standard 60870-6 TASE.2},
}

@inproceedings{AridorLange98AgentDesignPatternsElementsOfAgentApplicationDesign,
 author = {Yariv Aridor and Danny B. Lange},
 title = {Agent design patterns: elements of agent application design},
 booktitle = {AGENTS '98: Proceedings of the second international conference on Autonomous agents},
 year = {1998},
 isbn = {0-89791-983-1},
 pages = {108--115},
 location = {Minneapolis, Minnesota, United States},
 doi = {10.1145/280765.280784},
 publisher = {ACM Press},
 }
@article{TengChen90AdaptiveRealTimeAnomalyDetectionUsingInductivelyGeneratedSequentialPatterns,
author = {Henry S. Teng and Kaihu Chen},
title = {Adaptive Real-Time Anomaly Detection Using Inductively Generated Sequential Patterns},
journal = {sp},
volume = {00},
year = {1990},
issn = {1540-7993},
pages = {278},
doi = {10.1109/RISP.1990.63857},
publisher = {IEEE Computer Society},
address = {Los Alamitos, CA, USA},
}

@article{SongWuJermaineRanka2007ConditionalAnomalyDetection,
author = {Xiuyao Song and Mingxi Wu and Christopher Jermaine and Sanjay Ranka},
title = {Conditional Anomaly Detection},
journal = {IEEE Transactions on Knowledge and Data Engineering},
volume = {19},
number = {5},
year = {2007},
issn = {1041-4347},
pages = {631-645},
doi = {http://doi.ieeecomputersociety.org/10.1109/TKDE.2007.1009},
publisher = {IEEE Computer Society},
address = {Los Alamitos, CA, USA},
}

@article{MarkouSingh2003NoveltyDetectionAReviewPart1StatisticalApproaches,
  author = "Markos Markou and Sameer Singh",
  title = "Novelty Detection: A Review - Part 1: Statistical Approaches",
  journal = {Signal Processing},
  volume = {83},
  number = {12},
  month = {dec},
  year = {2003},
  pages = {2481--2497},
  doi = {10.1016/j.sigpro.2003.07.018},
  abstract = {Novelty detection is the identification of new or unknown data or signal that a machine learning system is not aware of during training. Novelty detection is one of the fundamental requirements of a good classification or identification system since sometimes the test data contains information about objects that were not known at the time of training the model. In this paper we provide state-of-the-art review in the area of novelty detection based on statistical approaches. The second part paper details novelty detection using neural networks. As discussed, there are a multitude of applications where novelty detection is extremely important including signal processing, computer vision, pattern recognition, data mining, and robotics.},
  keywords = {Novelty detection review; Statistical approaches; Gaussian mixture models; Hidden Markov models; KNN; Parzen density estimation; String matching; Clustering},
}




@article{PatchaPark07AnOverviewOfAnomalyDetectionTechniquesExistingSolutionsAndLatestTechnologicalTrens,
 author = {Animesh Patcha and Jung-Min Park},
 title = {An overview of anomaly detection techniques: Existing solutions and latest technological trends},
 journal = {Computer Networks},
 volume = {51},
 number = {12},
 year = {2007},
 issn = {1389-1286},
 pages = {3448--3470},
 doi = {10.1016/j.comnet.2007.02.001},
 publisher = {Elsevier North-Holland},
 abstract = {As advances in networking technology help to connect the distant corners of the globe and as the Internet continues to expand its influence as a medium for communications and commerce, the threat from spammers, attackers and criminal enterprises has also grown accordingly. It is the prevalence of such threats that has made intrusion detection systems-the cyberspace's equivalent to the burglar alarm-join ranks with firewalls as one of the fundamental technologies for network security. However, today's commercially available intrusion detection systems are predominantly signature-based intrusion detection systems that are designed to detect known attacks by utilizing the signatures of those attacks. Such systems require frequent rule-base updates and signature updates, and are not capable of detecting unknown attacks. In contrast, anomaly detection systems, a subset of intrusion detection systems, model the normal system/network behavior which enables them to be extremely effective in finding and foiling both known as well as unknown or ``zero day'' attacks. While anomaly detection systems are attractive conceptually, a host of technological problems need to be overcome before they can be widely adopted. These problems include: high false alarm rate, failure to scale to gigabit speeds, etc. In this paper, we provide a comprehensive survey of anomaly detection systems and hybrid intrusion detection systems of the recent past and present. We also discuss recent technological trends in anomaly detection and identify open problems and challenges in this area.}
 }

@inproceedings{KruegelVigna03AnomalyDetectionOfWebBasedAttacks,
author = {Christopher Kruegel and Giovanni Vigna},
title = {Anomaly Detection of Web-based Attacks},
booktitle = {10th Conference on Computer and Communications Security (CCS'03)},
year = 2003,
publisher = {ACM},
month = oct}




@techreport{LaPadula99StateOfTheArtInAnomalyDetectionAndIntrusionDetection,
author = "Leonard J. LaPadula",
title = {State of the art in anomaly detection and intrusion detection},
year = 1999,
month = jul,
institution = {MITRE, Center for Integrated Intelligence Systems, Bedford, Massachusetts},
url = {http://www.mitre.org/work/tech\_papers/tech\_papers\_99/lapadula99\_reaction/lapadula99\_reaction.pdf},
}


@inproceedings{Lunt88AutomatedAuditTrailAnalysisAndIntrusionDetectionASurvey,
    author = "Teresa F. Lunt",
    title = "Automated Audit Trail Analysis and Intrusion Detection: {A} Survey",
    booktitle = "Proceedings of the 11th National Computer Security Conference",
    address = "Baltimore, MD",
    year = "1988",
    }

@InProceedings{JavitzValdes91TheSRIIDESStatisticalAnomalyDetector,
  title =	"The {SRI} {IDES} Statistical Anomaly Detector",
  author =	"H. S. Javitz and A. Valdes",
  year = 	"1991",
  booktitle =	"IEEE Symposium on Security and Privacy",
  pages =	"316--326",
}

@InProceedings{JavitzValdes91TheSRIIDESStatisticalAnomalyDetector,
  title =	"The {SRI} {IDES} Statistical Anomaly Detector",
  author =	"H. S. Javitz and A. Valdes",
  year = 	"1991",
  booktitle =	"",
  pages =	"316--326",
}

@inbook{LazarevicKumarSrivastava05IntrusionDetectionASurvey,
  title = "Intrustion Detection: A Survey",
  author = "Aleksandar Lazarevic and Vipin Kumar and Jaideep Srivastava",
  crossref = {KumarSrivastavaLazarevic05ManagingCyberThreatsIssuesApproachesAndChallenges},
  chapter = 2,
}

@book{KumarSrivastavaLazarevic05ManagingCyberThreatsIssuesApproachesAndChallenges,
	booktitle = "Managing Cyber Threats: Issues, Approaches and Challenges",
	editor = "Vipin Kumar and Jaideep Srivastava and Alexsandar Lazarevic",
    isbn = "978-0-387-23226-2",
	publisher = "Springer Verlag",
	year = "2005",
	pages = "330",
	series = "Massive Computing",
	volume = "5",
}

@inbook{NoelWijesekeraYouman02ModernIntrusionDetectionDataMiningAndDegreesOfAttackGuilt,
	author = "Steven Noel and Duminda Wijesekera and Charles Youman",
	title = "Modern Intrusion Detection Data Mining And Degrees Of Attack Guilt",
	crossref = {BarbaraJajodia02ApplicationsOfDataMiningInComputerSecurity},
	chapter = 1,

}

@book{BarbaraJajodia02ApplicationsOfDataMiningInComputerSecurity,
	booktitle = "Applications Of Data Mining In Computer Security",
	editor = "Daniel Barbara and Sushil Jajodia",
	publisher = "Springer Verlag",
	series = "Advances In Information Security",
	volume = 6,
	year = 2002,
	pages = 272,
	isbn = "978-1-4020-7054-9",
}
@inproceedings{Clements96ASurveyOfArchitectureDescriptionLanguages,
 author = {Paul C. Clements},
 title = {A Survey of Architecture Description Languages},
 booktitle = {Proceedings of the 8th International Workshop on Software Specification and Design (IWSSD '96)},
 year = {1996},
 isbn = {0-8186-7361-3},
 pages = {16},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
 }

@inproceedings{Szyperski03ComponentTechnologyWhatWhereAndHow,
 author = {Clemens Szyperski},
 title = {Component technology: what, where, and how?},
 booktitle = {ICSE '03: Proceedings of the 25th International Conference on Software Engineering},
 year = {2003},
 isbn = {0-7695-1877-X},
 pages = {684--693},
 location = {Portland, Oregon},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
 }

@article{DePauwLeiPringVillardArnoldMorar07WebServicesNavigatorVisualizingTheExecutionOfWebServices,
 author = {W. De Pauw and M. Lei and E. Pring and L. Villard and M. Arnold and J. F. Morar},
 title = {Web services navigator: visualizing the execution of web services},
 journal = {IBM Syst. J.},
 volume = {44},
 number = {4},
 year = {2005},
 issn = {0018-8670},
 pages = {821--845},
 publisher = {IBM Corp.},
 }

@Article{Brown04ModelDrivenArchitecturePrinciplesAndPractice,
  title =	{{Model driven architecture: Principles and practice}},
  author =	{Alan W. Brown}, 
  journal =	{Software and System Modeling},
  year = 	{2004},
  number =	{4},
  volume =	{3},
  pages =	{314--327},
  doi = {10.1007/s10270-004-0061-2},
  publisher = {Springer Verlag},
  address = {Berlin, Germany},
}


@book{Szyperski02ComponentSoftwareBeyondObjectOrientedProgramming,
 author = {Clemens Szyperski},
 title = {Component Software. Beyond Object-oriented Programming},
 year = {2002},
 edition = 2,
 pages = 448,
 isbn = {0-201-745-720},
 publisher = {Addison-Wesley Publishing Co.},
 }

@book{Szyperski98ComponentSoftwareBeyondObjectOrientedProgramming,
 author = {Clemens Szyperski},
 title = {Component Software: Beyond Object-oriented Programming},
 year = {1998},
 edition = 1,
 isbn = {0-201-17888-5},
 publisher = {ACM Press/Addison-Wesley Publishing Co.},
 }

% first 3 chapters are online at http://www.syntropy.co.uk/umlcomponents/umlccontents.htm
@Book{CheesmanDaniels2000UMLComponentsASimpeProcessForSpecifyingComponentBasedSoftware,
  author =	"John Cheesman and John Daniels",
  title =	"{UML} Components: {A} Simple Process for Specifying
		 Component-Based Software",
  publisher =	"Addison-Wesley",
  year = 	"2000",
  ISBN = 	"0-201-70851-5",
}

@misc{OMGUML2005,
   title           = {Unified Modeling Language Specification: Version 2, Revised Final Adopted Specification (ptc/05-07-04)},
   url             = {http://www.uml.org/\#UML2.0},
   year            = {2005},
   publisher       = {OMG},
   author          = {{Object Management Group (OMG)}},
   key             = {UML2},
} 

@misc{OMGUML2007,
   title           = {{U}nified {M}odeling {L}anguage: {S}uperstructure {V}ersion 2.1.1},
   year            = {2007},
   month	   = feb,
   publisher       = {OMG},
   author          = {{Object Management Group (OMG)}},
   key             = {UML211},
} 
@article{Yu01ClassIsTypeIsInadequateForObjectReuse,
 author = {Sheng Yu},
 title = {Class-is-type is inadequate for object reuse},
 journal = {SIGPLAN Not.},
 volume = {36},
 number = {6},
 year = {2001},
 issn = {0362-1340},
 pages = {50--59},
 doi = {10.1145/504359.504364},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }

@article{BondarevChaudronZhangKlomp05QualityOrientedDesignSpaceExploationForComponentBasedArchitectures,
 author = {Egor Bondarev and Michael R.V. Chaudron and Jiang Zhang and Arjen Klomp},
 title = {Quality-Oriented Design Space Exploation For Component-Based Architectures},
 journal = {unpublished},
 year = {2005}
 }

****************************
* component testing
****************************

%discussed in lesegruppe 05-06-02
@article{Weyuker01TheTroubleWithTestingComponents,
 author = {Elaine J. Weyuker},
 title = {The trouble with testing components},
 book = {Component-based software engineering: putting the pieces together},
 year = {2001},
 isbn = {0-201-70485-4},
 pages = {499--512},
 publisher = {Addison-Wesley Longman Publishing Co., Inc.},
 address = {Boston, MA, USA},
 }


@Misc{tpcapp,
  Author         = "{TPC}",
  Title          = {{(Transaction Processing Performance Council).} {TPC} Benchmark {APP} ({A}pplication {S}erver)},
  HowPublished   = "\url{http://www.tpc.org/tpc_app/default.asp}",
  Note           = "Online, last access: 20th December 2006",
  year           = {2005}
}


@Misc{specjapp,
  Author         = "{SPEC}",
  Title          = {{(Standard Performance Evaluation Corporation).} {SPEC jAppServer2004} ({J}ava {A}pplication {S}erver) {B}enchmark},
  HowPublished   = "\url{http://www.spec.org/jAppServer2004/}",
  Note           = "Online, last access: 20th December 2006",
  year           = {1995 -- 2006}
}



@Misc{trade3,
  Author         = "{IBM}",
  Title          = {{T}rade3 {W}eb{S}phere benchmark and performance sample application},
  HowPublished   = "\url{http://www-306.ibm.com/software/webservers/appserv/benchmark3.html}",
  Note           = "Online, last access: 20th December 2006",
  year           = {2006}
}

@Misc{blueprints,
  Author         = "{Sun Microsystems, Inc.}",
  Title          = {Java {B}lue{P}rints: Guidelines, patterns, and code for end-to-end applications},
  HowPublished   = "http://java.sun.com/reference/blueprints/",
  Note           = "Online, last access: 10th October 2007",
  year           = {1994-2006}
}
*****
***** Dynamic Architecture, Self-healing, Adaptive systems
***** Matthias Rohr 2005
*****


************************
* Architectures in General
*************************

@inproceedings{Perry97AnOverviewOfTheStateOfTheArtInSoftwareArchitecture,
 author = {Dewayne E. Perry},
 title = {An overview of the state of the art in software architecture},
 booktitle = {Proceedings of the 19th international conference on Software engineering (ICSE '97)},
 year = {1997},
 isbn = {0-89791-914-9},
 pages = {590--591},
 location = {Boston, Massachusetts, United States},
 doi = {10.1145/253228.253487},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }

@incollection{deLemosGacekRomanovsky04ArchitecturalMismatchTolerance,
  author =       {Rog\'erio de Lemos and Cristina Gacek and Alexander Romanovsky},
  title =        {Architectural Mismatch Tolerance},
  crossref = "LemosGacekRomanovsky03ArchitectingDependableSystems",
  PAGES =        {175--194}
}

@PHDTHESIS{Sadjadi04TransparentShapingOfExistingSoftwareToSupportPervasiveAndAutonomicComputing,
  AUTHOR = {S. Masoud Sadjadi},
  TITLE = {Transparent Shaping of Existing Software to Support Pervasive and Autonomic Computing},
  SCHOOL = {Department of Computer Science, Michigan State University, East Lansing, United States},
  YEAR = {2004},
  MONTH = {August},
  PDF = {PhD-Dissertation.pdf}
}



@book{ShawGarlan96SoftwareArchitecturesPerspectivesOnAnEmergingDiscipline,
 editor = "M. Shaw and D. Garlan",
 title = {Software Architecture: Perspectives on an Emerging Discipline.},
 year = {1996},
 publisher = "Prentice-Hall"
 }

@article{PerryWolf92FoundationsForTheStudyOfSoftwareArchitecture,
    author = "Dewayne E. Perry and Alexander L. Wolf",
    title = "Foundations for the Study of Software Architecture",
    journal = "ACM SIGSOFT Software Engineering Notes",
    volume = "17",
    number = "4",
    pages = "40--52",
    year = "1992",
    url = "http://citeseer.ist.psu.edu/perry92foundation.html" }


@inproceedings{RoshandelSchmerlMedvidovicGarlanZhang97UnderstandingTradeoffsAmongDifferentArchitecturalModelingApproaches,
 author = {Roshandel, R. and  Schmerl, B. and  Medvidovic, N. and  Garlan, D. and  Zhang, D.},
 title = {Understanding tradeoffs among different architectural modeling approaches},
 booktitle = {Fourth Working IEEE/IFIP Conference on Software Architecture (WICSA)},
 year = {2004},
 month = {jun},
 pages = {47 -- 56},
 publisher = {IEEE},
 abstract = "Over the past decade, a number of architecture description languages (ADLs) have been proposed to facilitate modeling and analysis of software architecture. While each claims to have various benefits, to date, there have been few studies to assess the relative merits of these approaches. In this paper, we describe our experience using two ADLs to model a system initially described in UML, and compare their effectiveness in identifying system design flaws. We also describe the techniques we used for extracting architectural models from a UML system description.",
 }


@PHDTHESIS{Georgiadis02SelfOrganisingDistributedComponentSoftwareArchitectures,
    author = {Ioannis Georgiadis},
    title = {Self-organising Distributed Component Software Architectures},
    school = {Department of Computing, Imperial College of Science, Technology and Medicine, Univerity of London},
    year = {2002},
    month = jan,
    address = {London},
}



@inproceedings{MedvidovicRosenblumTaylor99ALanguageAndEnvironmentForArchitectureBasedSoftwareDevelopmentAndEvolution,
 author = {N. Medvidovic and D. S. Rosenblum and R. N. Taylor},
 title = {A Language and Environment for
Architecture-Based Software Development and Evolution},
 booktitle = {21st International Conference on Software Engineering (ICSE '99)},
 year = {1999},
 month = {may},
 pages = {44--53},
 }



@inproceedings{Shaw01TheComingOfAgeOfSoftwareArchitectureResearch,
 author = {Shaw, M.},
 title = {The coming-of-age of software architecture research},
 booktitle = {Proceedings of the Internation Conference on Software Engineering (ICSE '01)},
 year = {2001},
 pages = {656--664},
 url = "http://www-2.cs.cmu.edu/afs/cs/project/vit/ftp/pdf/shaw-keynote-rev.pdf"
 }

%two earlier papers of Medvidovic exists, perhaps they are more detailed...
@article{MedvidovicTaylor00AClassificationAndComparisonFrameworkForSoftwareArchitectureDescriptionLanguages,
 author = {Nenad Medvidovic and Richard N. Taylor},
 title = {A Classification and Comparison Framework for Software Architecture Description Languages},
 journal = {IEEE Trans. Softw. Eng.},
 volume = {26},
 number = {1},
 year = {2000},
 issn = {0098-5589},
 pages = {70--93},
 doi = {10.1109/32.825767},
 publisher = {IEEE Press},
 address = {Piscataway, NJ, USA},
 }

********************************************************
* Reconfiguration
********************************************************



@inproceedings{MatevskaMeyerOlligesHasselbring04RuntimeReconfigurationOfJ2EEApplications,
               ADDRESS = {Grenoble, France},
               AUTHOR = {Jasminka Matevska-Meyer and Sascha Olliges and Wilhelm Hasselbring},
               BOOKTITLE = {Proceedings of DECOR04 - 1st French Conference on Software Deployment and (Re) Configuration},
               LANGUAGE = {english},
               MONTH = {10},
               PAGES = {77--84},
               PUBLISHER = {University of Grenoble},
               TITLE = {Runtime Reconfiguration of J2EE Applications},
               YEAR = {2004},
               URL = {http://se.informatik.uni-oldenburg.de/pubdb\_files/pdf/http://se.informatik.uni-oldenburg.de/pubdb\_files/pdf/07.pdf}
}

@inproceedings{MatevskaMeyerHasselbring03EnablingReconfigurationOfComponentBasedSystemsAtRuntime,
               ADDRESS = {Groningen, The Netherlands},
               AUTHOR = {J. Matevska-Meyer and W. Hasselbring},
               BOOKTITLE = {Workshop on Software Variability Management},
               EDITOR = {J. van Gurp and J. Bosch},
               LANGUAGE = {english},
               MONTH = {2},
               PAGES = {123--125},
               TITLE = {Enabling Reconfiguration of Component-Based Systems at Runtime},
               YEAR = {2003},
               URL = {http://se.informatik.uni-oldenburg.de/pubdb\_files/pdf/SVM2003.pdf}
}

*********************************************************
* ACM - dynamic architectures (200 results)
*********************************************************




@techreport{Bradbury04OrganizingDefinitionsAndFormalismsForDynamicSoftwareArchitectures,
AUTHOR = {Jeremy S. Bradbury},
TITLE = {Organizing Definitions and Formalisms for Dynamic Software Architectures},
INSTITUTION = {Queen's University},
LOCATION = {Kingston, Canada},
NUMBER = {2004-477},
YEAR = {2004},
note = "49 pages",
url = "http://www.cs.queensu.ca/home/bradbury/pdf/techreport\_2004-477.pdf"
}

@unpublished{BradburyCordyDingelWermelinger04AClassificationOfFormalSpecificationsForDynamicSoftwareArchitectures,
  author = "Jeremy S. Bradbury and James R. Cordy and Juergen Dingel and Michel Wermelinger",
  title = "A Classification of Formal Specifications for Dynamic Software Architectures (unpublished)",
  url = "http://citeseer.ist.psu.edu/bradbury04classification.html",
  year = {2004},
  note = "unpublished",
}

@misc{Andersson00IssuesInDynamicSoftwareArchitectures,
  author = "J. Andersson",
  title = "Issues in dynamic software architectures",
  text = "J. Andersson. Issues in dynamic software architectures. In Proc. of the
    Int. Software Architecture Workshop, Jun. 2000.",
  year = "2000",
  url = "citeseer.ist.psu.edu/629596.html" }

@inproceedings{PoladianSousaGarlanShaw04DynamicConfigurationOfResourceAwareServices,
 author = {Vahe Poladian and Jo\~ao Pedro Sousa and David Garlan and Mary Shaw},
 title = {Dynamic Configuration of Resource-Aware Services},
 booktitle = {Proceedings of the 26th International Conference on Software Engineering (ICSE '04)},
 year = {2004},
 isbn = {0-7695-2163-0},
 pages = {604--613},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
 }

@Article{ChengGarlanSchmerlSousaSpitznagelSteenkisteHu02SoftwareArchitectureBasedAdaptationForPervasiveSystems,
    author      = "Cheng, S. and Garlan, D. and Schmerl, B. and Sousa, J. and Spitznagel B. and Steenkiste, P. and Hu, N.",
    title       = "{Software Architecture-based Adaptation for Pervasive Systems}",
    YEAR        = 2002,
    MONTH       = apr,
    journal     = {Lecture Notes in Computer Science},
    publisher   = {Springer-Verlag},
    volume      = 2299,
    PAGES       = {69},
    abstract    ="An important requirement for pervasive computing systems is the
ability to adapt at runtime to handle varying resources, user mobility, changing
user needs, and system faults. In this paper we describe an approach in which
dynamic adaptation is supported by the use of software architectural models to
monitor an application and guide dynamic changes to it. The use of externalized
models permits one to make reconfiguration decisions based on a global perspective
of the running system, apply analytic models to determine correct repair
strategies, and gauge the effectiveness of repair through continuous system
monitoring. We illustrate the application of this idea to pervasive computing
systems, focusing on the need to adapt based on performance-related criteria
and models."
    }


@inproceedings{ChungDewan04TowardsDynamicCollaborationArchitectures,
 author = {Goopeel Chung and Prasun Dewan},
 title = {Towards dynamic collaboration architectures},
 booktitle = {CSCW '04: Proceedings of the 2004 ACM conference on Computer supported cooperative work},
 year = {2004},
 isbn = {1-58113-810-5},
 pages = {1--10},
 location = {Chicago, Illinois, USA},
 doi = {10.1145/1031607.1031609},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }

@inproceedings{ScottKumarVelusamyChildersDavidsonSoffa03RetargetableAndReconfigurableSoftwareDynamicTranslation,
 author = {K. Scott and N. Kumar and S. Velusamy and B. Childers and J. W. Davidson and M. L. Soffa},
 title = {Retargetable and reconfigurable software dynamic translation},
 booktitle = {CGO '03: Proceedings of the international symposium on Code generation and optimization},
 year = {2003},
 isbn = {0-7695-1913-X},
 pages = {36--47},
 location = {San Francisco, California},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
 }


@inproceedings{HillmanWarren04AnOpenFrameworkForDynamicReconfiguration,
 author = {Jamie Hillman and Ian Warren},
 title = {An Open Framework for Dynamic Reconfiguration},
 booktitle = {Proceedings of the 26th International Conference on Software Engineering (ICSE '04)},
 year = {2004},
 isbn = {0-7695-2163-0},
 pages = {594--603},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
 }

@inproceedings{EideReidRegehrLepreau02StaticAndDynamicStructureInDesignPatterns,
 author = {Eric Eide and Alastair Reid and John Regehr and Jay Lepreau},
 title = {Static and dynamic structure in design patterns},
 booktitle = {Proceedings of the 24th International Conference on Software Engineering (ICSE '02)},
 year = {2002},
 isbn = {1-58113-472-X},
 pages = {208--218},
 location = {Orlando, Florida},
 doi = {10.1145/581339.581367},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }




@inproceedings{CuestaFuenteBarrioSolorzano01DynamicCoordinationArchitectureThroughTheUseOfReflection,
 author = {Carlos E. Cuesta and Pablo de la Fuente and Manuel Barrio-Sol\'orzano},
 title = {Dynamic coordination architecture through the use of reflection},
 booktitle = {SAC '01: Proceedings of the 2001 ACM symposium on Applied computing},
 year = {2001},
 isbn = {1-58113-287-5},
 pages = {134--140},
 location = {Las Vegas, Nevada, United States},
 doi = {10.1145/372202.372298},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }




@inproceedings{WermelingerLopesFiadeiro01AGraphBasedArchitecturalReConfigurationLanguage,
 author = {Michel Wermelinger and Ant\'onia Lopes and Jos\'o Luiz Fiadeiro},
 title = {A graph based architectural (Re)configuration language},
 booktitle = {ESEC/FSE-9: Proceedings of the 8th European software engineering conference held jointly with 9th ACM SIGSOFT international symposium on Foundations of software engineering},
 year = {2001},
 isbn = {1-58113-390-1},
 pages = {21--32},
 location = {Vienna, Austria},
 doi = {10.1145/503209.503213},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }




@inproceedings{BlairIssarnyTumaZarras00TheRoleOfSoftwareArchitectureInConstrainingAdaotationInComponentBasedMiddlewarePlattforms,
 author = {Gordon S. Blair and Lynne Blair and Val\'erie Issarny and Petr Tuma and Apostolos Zarras},
 title = {The role of software architecture in constraining adaptation incomponent-based middleware platforms},
 booktitle = {International Conference on Distributed systems platforms (Middleware '00)},
 year = {2000},
 isbn = {3-540-67352-0},
 pages = {164--184},
 location = {New York, New York, United States},
 publisher = {Springer-Verlag New York, Inc.},
 address = {Secaucus, NJ, USA},
 }

@inproceedings{BialekJulSchneiderJin04PartitioningOfJavaApplicationsToSupportDynamicUpdates,
  author    = {Robert Pawel Bialek and Eric Jul and Jean-Guy Schneider and Yan Jin},
  title     = {Partitioning of Java Applications to Support Dynamic Updates.},
  booktitle = {11th Asia-Pacific Conference on Software Engineering (APSEC '04)},
  year      = {2004},
  pages     = {616-623},
  doi        = {10.1109/APSEC.2004.71},
  publisher = {IEEE Computer Society}
}




@inproceedings{WermelingerFiadeiro99AlgebraicSoftwareArchitectureReconfiguration,
 author = {Michel Wermelinger and Jos\'e Luiz Fiadeiro},
 title = {Algebraic software architecture reconfiguration},
 booktitle = {ESEC/FSE-7: Proceedings of the 7th European software engineering conference held jointly with the 7th ACM SIGSOFT international symposium on Foundations of software engineering},
 year = {1999},
 isbn = {3-540-66538-2},
 pages = {393--409},
 location = {Toulouse, France},
 doi = {10.1145/318773.319256},
 publisher = {Springer-Verlag},
 address = {London, UK},
 }



@inproceedings{YangZhouChengMcKinley04EnablingCollaborativeAdaptationAcrossLegacyComponents,
 author = {Z. Yang and Z. Zhou and B. H. C. Cheng and P. K. McKinley},
 title = {Enabling collaborative adaptation across legacy components},
 booktitle = {Proceedings of the 3rd workshop on Adaptive and reflective middleware},
 year = {2004},
 isbn = {1-58113-949-7},
 pages = {277--282},
 location = {Toronto, Ontario, Canada},
 doi = {10.1145/1028613.1028629},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 abstract = {Software frequently needs to adapt its behavior at run time
to respond to changes in its execution environment. Different
software components may use different approaches
to adaptation. Composing a single adaptive system from
existing adaptive components requires an ``adaptation infrastructure''
to integrate and arbitrate adaptive behaviors.
This paper proposes a model for such an infrastructure and
describes the design and operation of $M^2$, a prototype implementation.
$M^2$ uses a technique called transparent shaping
to modify existing components so that they can report
events of interest to the $M^2$ core and implement appropriate
responses. The architecture and communication infrastructure
of $M^2$ are described, followed by a case study in which
$M^2$ is used to construct an adaptive multimedia conferencing
application from otherwise incompatible components.}
 }

@article{McKinleySadjadiKastenCheng04ComposingAdaptiveSoftware,
 author = {Philip K. McKinley and Seyed Masoud Sadjadi and Eric P. Kasten and Betty H. C. Cheng},
 title = {Composing Adaptive Software},
 journal = {Computer},
 volume = {37},
 number = {7},
 year = {2004},
 issn = {0018-9162},
 pages = {56--64},
 doi = {10.1109/MC.2004.48},
 publisher = {IEEE},
 address = {Los Alamitos, CA, USA},
 abstract = { Compositional adaptation exchanges algorithmic or structural system components with others that improve a program's fit to its current environment. With this approach, an application can add new behaviors after deployment. Compositional adaptation also enables dynamic recomposition of the software during execution. While dynamic software recomposition dates back to the earliest days of computing, such programs were difficult to write and debug. Several new software tools and technologies now help address these problems. The authors review the research in compositional adaptation and survey the supporting technologies, proposed solutions, and areas that require further study.
}
 }



@TECHREPORT{Sadjadi03ASurveyOfAdaptiveMiddleware,
  AUTHOR = {S. M. Sadjadi and P. K. McKinley},
  TITLE = {A Survey of Adaptive Middleware (Technical Report)},
  NUMBER = {MSU-CSE-03-35},
  INSTITUTION = {Computer Science and Engineering, Michigan State University},
  ADDRESS = {East Lansing, Michigan},
  ABSTRACT = {
    Developing distributed applications is a difficult task
    due to three major problems: the complexity of programming
    interprocess communication, the need to support services
    across heterogeneous platforms, and the need to adapt to
    changing conditions. Traditional middleware (such as CORBA,
    DCOM, and Java RMI) addresses the first two problems to
    some extent through the use of a ``black-box'' approach,
    such as encapsulation in object-oriented programming.
    However, traditional middleware is limited in its ability
    to support adaptation. To address all the three problems,
    {\em adaptive} middleware has evolved from traditional
    middleware. In addition to the object-oriented programming
    paradigm, adaptive middleware employs several other key
    technologies including computational reflection,
    component-based design, aspect-oriented programming, and
    software design patterns. This survey paper proposes a
    three-dimensional taxonomy that categorizes different
    adaptive middleware approaches. Examples of each category
    are described and compared in detail. Suggestions for
    future research are also provided. },
    MONTH = dec, 
  YEAR = {2003},
  PAGES = {1--38},
}

@inproceedings{AksitChoukair03DynamicAdaptiveAndReconfigurableSystemsOverviewAndProspectiveVision,
 author = {Mehmet Aksit and Zi\`ed Choukair},
 title = {Dynamic, Adaptive and Reconfigurable Systems Overview and Prospective Vision},
 booktitle = {ICDCSW '03: Proceedings of the 23rd International Conference on Distributed Computing Systems},
 year = {2003},
 isbn = {0-7695-1921-0},
 pages = {84},
 doi = {10.1109/ICDCSW.2003.1203537},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
 abstract = {Systems are more and more expected to work in dynamic environment, to deal with fluctuation of their characteristics and to guaranty
functional and nonfunctional requirements. Systems should also keep compliant with the contracted quality of service. Moreover, when necessary,
services and aspects should be added or removed on line. In this paper, we overview major approaches to deploy, reconfigure and adapt applications
and underlying software platforms. These changes should be realized according to the evolving context and execution environment so that systems can
stay compliant with the specifications and requirements of the application. We end this position paper with a vision on future directions and
developments.}
 }

@inproceedings{Pal98ATechniqueForIllustratingDynamicComponentLevelInteractionsWithinASoftwareArchitecture,
 author = {Chris Pal},
 title = {A technique for illustrating dynamic component level interactions within a software architecture},
 booktitle = {CASCON '98: Proceedings of the 1998 conference of the Centre for Advanced Studies on Collaborative research},
 year = {1998},
 pages = {18},
 location = {Toronto, Ontario, Canada},
 publisher = {IBM Press},
 }

@inproceedings{Wermelinger98AsimpleDescriptionLanguageForDynamicArchitectures,
 author = {Michel Wermelinger},
 title = {A simple description language for dynamic architectures},
 booktitle = {ISAW '98: Proceedings of the third international workshop on Software architecture},
 year = {1998},
 isbn = {1-58113-081-3},
 pages = {159--162},
 location = {Orlando, Florida, United States},
 doi = {10.1145/288408.288449},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }

@inproceedings{Anderson98ReactiveDynamicArchitectures,
 author = {Jesper Andersson},
 title = {Reactive dynamic architectures},
 booktitle = {ISAW '98: Proceedings of the third international workshop on Software architecture},
 year = {1998},
 isbn = {1-58113-081-3},
 pages = {1--4},
 location = {Orlando, Florida, United States},
 doi = {10.1145/288408.288409},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }






@inproceedings{MageeKramer96DynamicStructureInSoftwareArchitectures,
 author = {Jeff Magee and Jeff Kramer},
 title = {Dynamic structure in software architectures},
 booktitle = {SIGSOFT '96: Proceedings of the 4th ACM SIGSOFT symposium on Foundations of software engineering},
 year = {1996},
 isbn = {0-89791-797-9},
 pages = {3--14},
 location = {San Francisco, California, United States},
 doi = {10.1145/239098.239104},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }

@techreport{Oreizy96IssuesInTheRuntimeModificationOfSoftwareArchitectures,
    author = "Peyman Oreizy",
    title = "Issues in the Runtime Modification of Software Architectures",
	institution = "University Of California, Irvine",
    number = "UCI-ICS-96-35",
    month = "August",
    address = "Irvine, CA, USA",
    year = "1996",
    url = "http://citeseer.ist.psu.edu/oreizy96issues.html"
}

*******************************************
* self healing (ordered by publicatio year, name of first author)
*******************************************


@book{GarlanKramerWolf04WOSSproceedingsOfThe1stACMSIGSOFTworkshopOnSelfManagedSystems,
 author = {David Garlan and Jeff Kramer and Alexander Wolf},
 title = {{WOSS '04}: {P}roceedings of the 1st {ACM} {SIGSOFT} workshop on {S}elf-managed systems},
 year = {2004},
 isbn = {1-58113-989-6},
 location = {Newport Beach, California},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }

@inproceedings{BlairCoulsonGrace04ResearchDirectionsInReflectiveMmiddlewareTheLancasterExperience,
 author = {Gordon S. Blair and Geoff Coulson and Paul Grace},
 title = {Research directions in reflective middleware: the Lancaster experience},
 booktitle = {Proceedings of the 3rd workshop on Adaptive and reflective middleware},
 year = {2004},
 isbn = {1-58113-949-7},
 pages = {262--267},
 location = {Toronto, Ontario, Canada},
 doi = {10.1145/1028613.1028627},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }


@inproceedings{WileEgyed04AnExternalizedInfrastructureForSelfHealingSystems,
 author = {Wile, D.S. and Egyed, A.},
 title = {An Externalized Infrastructure for Self-Healing Systems},
 booktitle = {Proceedings of the Fourth Working IEEE/IFIP Conference on Software Architecture (WICSA'04)},
 year = {2004},
 isbn = {0-7695-2172-X},
 pages = {285--288},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
 abstract = {Software architecture descriptions can play a wide variety of roles in the software lifecycle, from requirements specification, to logical design, to implementation architectures. In addition, execution architectures can be used both to constrain and enhance the functionality of running systems, e.g. security architectures and debugging architectures. Along with others from DARPA's DASADA program we proposed an execution infrastructure for so-called self-healing, self-adaptive systems - systems that maintain a particular level of healthiness or quality of service (QoS). This externalized infrastructure does not entail any modification of the target system - whose health is to be maintained. It is driven by a reflective model of the target system's operation to determine what aspects can be changed to effect repair. We present that infrastructure along with an example implemented in accord with it.}
 }







@inproceedings{HuangXiangMadey04ASelfManageableInfrastructureForSupportingWebBasedSimulations,
  author       = {Yingping Huang and  Xiaorong Xiang  and Madey, G.  },
  title        = {A self manageable infrastructure for supporting Web-based simulations},
 booktitle = {Proceedings of the 37th Annual Symposium on Simulation},
 year = {2004},
 month = apr,
 pages = {149--156},
 doi = {10.1109/SIMSYM.2004.1299478},
 publisher = {IEEE},
 abstract = {We describe the design and implementation of a self-manageable multi-tiered infrastructure to support Web-based scientific simulations. This infrastructure demonstrates not only the successful integration of Web servers, simulation servers, database servers, reports servers, data warehousing and mining, but also the ability to achieve self manageability: self-configuring, self-healing, self-protecting and self-optimizing. A scientific simulation program, NOMSIM (Natural Organic Matter Simulator), is used to demonstrate the effectiveness of this infrastructure.}
}

@article{HerrmannMuhlGeihs05SelfManagementTheSolutionToComplexityOrJustAnotherProblem,
 author = {Klaus Herrmann and Gero Muhl and Kurt Geihs},
 title = {Self-Management: The Solution to Complexity or Just Another Problem?},
 journal = {IEEE Distributed Systems Online},
 volume = {6},
 number = {1},
 year = {2005},
 issn = {1541-4922},
 pages = {1},
 doi = {10.1109/MDSO.2005.3},
 publisher = {IEEE},
 address = {Piscataway, NJ, USA},
 }





@TECHREPORT{McKinleySadjadiKastenCheng04ATaxonomyOfCompositionalAdaptation,
  AUTHOR =        {Philip K. McKinley and Seyed Masoud Sadjadi and
                   Eric P. Kasten and Betty H. C. Cheng},
  TITLE =         {A Taxonomy of Compositional Adaptation},
  NUMBER =        {MSU-CSE-04-17},
  INSTITUTION =   {Department of Computer Science, Michigan State University},
  ADDRESS =       {East Lansing, Michigan},
  ABSTRACT =      {Driven by the emergence of pervasive computing and the
                   increasing need for self-managed systems, many approaches
                   have been proposed for building software that can
                   dynamically adapt to its environment. These adaptations
                   involve not only changes in program flow, but also run-time
                   recomposition of the software itself. We discuss the
                   supporting technologies that enable dynamic recomposition
                   and classify different approaches according to how, when and
                   where recomposition occurs. We also highlight key challenges
                   that need to be addressed to realize the full potential of
                   run-time adaptable software. This survey is intended to be a
                   living document, updated periodically to summarize and
                   classify new contributions to the field. The document is
                   maintained under the RAPIDware project web site,
                   specifically, at http://www.cse.msu.edu/rapidware/survey.
                   },
  KEYWORDS =      {adaptive software, compositional adapation, middleware,
                   survey, taxonomy, pervasive computing, autonomic computing,
                   computational reflection, separation of concerns,
                   component-based design, aspect-oriented programming,
                   object-oriented programming},
  NOTE =          {},
  MONTH =         {May},
  YEAR  =         {2004},
  AUTHOR1_URL =   {http://www.cse.msu.edu/~mckinley},
  AUTHOR1_EMAIL = {mckinley@cse.msu.edu},
  AUTHOR2_URL =   {},
  AUTHOR2_EMAIL = {sadjadis@cse.msu.edu},
  PAGES =         {},
  FILE  =         {},
  URL   =         {A Taxonomy of Compositional Adaptation},
  CONTACT =       {mckinley@cse.msu.edu}
}



@inproceedings{ChengHuangGarlanSchmerlSteenkiste04AnArchitectureForCoordinatingMultipleSelfManagementSystems,
 title = {An Architecture for Coordinating Multiple Self-Management Systems},
 booktitle = {WICSA '04: Proceedings of the Fourth Working IEEE/IFIP Conference on Software Architecture (WICSA'04)},
 author = {Shang-Wen Cheng and An-Cheng Huang and David Garlan and Bradley Schmerl and Peter Steenkiste},
 year = {2004},
 isbn = {0-7695-2172-X},
 pages = {243},
 publisher = {IEEE},
 address = {Washington, DC, USA},
abstract = {A common approach to adding self-management capabilities to a system is to provide one or more external control modules, whose responsibility is to monitor system behavior, and adapt the system at run time to achieve various goals (configure the system, improve performance, recover from faults, etc.). An important problem arises when there is more than one such self-management module: how can one make sure that they are composed to provide consistent and complementary benefits? In this paper we describe a solution that introduces a self-management coordination architecture and infrastructure to support such composition. We focus on the problem of coordinating self-configuring and self-healing capabilities, particularly with respect to global configuration and incremental repair. We illustrate the approach in the context of a self-managing video teleconference system that composes two preexisting adaptation modules to achieve synergistic benefits of both.}
 }

@inproceedings{ChengGarlanSchmerlSousaSpitnagelSteenkiste02UsingArchitecturalStyleAsABasisForSystemSelfRepair,
 author = {Shang-Wen Cheng and David Garlan and Bradley R. Schmerl and Jo\~ao Pedro Sousa and Bridget Spitnagel and Peter Steenkiste},
 title = {Using Architectural Style as a Basis for System Self-repair},
 booktitle = {WICAS3: Proceedings of the IFIP 17th World Computer Congress - TC2 Stream / 3rd IEEE/IFIP Conference on Software Architecture},
 year = {2002},
 isbn = {1-4020-7176-0},
 pages = {45--59},
 publisher = {Kluwer, B.V.},
 address = {Deventer, The Netherlands, The Netherlands},
 }

@inproceedings{BlairCoulsonBlairDuranLimonGraceMoreiraParlavantzas02ReflectionSelfAwarenessAndSelfHealingInOpenORB,
 author = {Gordon S. Blair and Geoff Coulson and Lynne Blair and Hector Duran-Limon and Paul Grace and Rui Moreira and Nikos Parlavantzas},
 title = {Reflection, self-awareness and self-healing in OpenORB},
 booktitle = {WOSS '02: Proceedings of the first workshop on Self-healing systems},
 year = {2002},
 isbn = {1-58113-609-9},
 pages = {9--14},
 location = {Charleston, South Carolina},
 doi = {10.1145/582128.582131},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }

@inproceedings{DashofyHoekTaylor02TowardsArchitectureBasedSelfHealingSystems,
 author = {Eric M. Dashofy and Andr\'e van der Hoek and Richard N. Taylor},
 title = {Towards architecture-based self-healing systems},
 booktitle = {WOSS '02: Proceedings of the first workshop on Self-healing systems},
 year = {2002},
 isbn = {1-58113-609-9},
 pages = {21--26},
 location = {Charleston, South Carolina},
 doi = {10.1145/582128.582133},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }

@inproceedings{GarlanSchmerl02ModelBasedAdaptationForSelfHealingSystems,
 author = {David Garlan and Bradley Schmerl},
 title = {Model-based adaptation for self-healing systems},
 booktitle = {WOSS '02: Proceedings of the first workshop on Self-healing systems},
 year = {2002},
 isbn = {1-58113-609-9},
 pages = {27--32},
 location = {Charleston, South Carolina},
 doi = {10.1145/582128.582134},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }


@inproceedings{GeorgeEvansdson02ABiologicallyInspiredProgrammingModelForSelfHealingSystems,
 author = {Selvin George and David Evans and Lance Davidson},
 title = {A biologically inspired programming model for self-healing systems},
 booktitle = {WOSS '02: Proceedings of the first workshop on Self-healing systems},
 year = {2002},
 isbn = {1-58113-609-9},
 pages = {102--104},
 location = {Charleston, South Carolina},
 doi = {10.1145/582128.582149},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }

@inproceedings{GustavssonAndler02SelfStabilizationAndEventualConsistencyInReplicatedRealTimeDatabases,
 author = {Sanny Gustavsson and Sten F. Andler},
 title = {Self-stabilization and eventual consistency in replicated real-time databases},
 booktitle = {WOSS '02: Proceedings of the first workshop on Self-healing systems},
 year = {2002},
 isbn = {1-58113-609-9},
 pages = {105--107},
 location = {Charleston, South Carolina},
 doi = {10.1145/582128.582150},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }


@inproceedings{MikicRakicMehtaMedvidovic02ArchitecturalStyleRequirementsForSelfHealingSystems,
 author = {Marija Mikic-Rakic and Nikunj Mehta and Nenad Medvidovic},
 title = {Architectural style requirements for self-healing systems},
 booktitle = {WOSS '02: Proceedings of the first workshop on Self-healing systems},
 year = {2002},
 isbn = {1-58113-609-9},
 pages = {49--54},
 location = {Charleston, South Carolina},
 doi = {10.1145/582128.582138},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }

@inproceedings{SchmerlGarlan02ExploitingArchitecturalDesignKnowledgeToSupportSelfRepairingSystems,
 author = {Bradley Schmerl and David Garlan},
 title = {Exploiting architectural design knowledge to support self-repairing systems},
 booktitle = {SEKE '02: Proceedings of the 14th international conference on Software engineering and knowledge engineering},
 year = {2002},
 isbn = {1-58113-556-4},
 pages = {241--248},
 location = {Ischia, Italy},
 doi = {10.1145/568760.568804},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }


@inproceedings{Shaw02SelfHealingSofteningPrecisionToAvoidBrittelness,
 author = {Mary Shaw},
 title = {``Self-healing'': softening precision to avoid brittleness: position paper for WOSS '02: workshop on self-healing systems},
 booktitle = {WOSS '02: Proceedings of the first workshop on Self-healing systems},
 year = {2002},
 isbn = {1-58113-609-9},
 pages = {111--114},
 location = {Charleston, South Carolina},
 doi = {10.1145/582128.582152},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }

*******************************************
* Autonomic Computing
*******************************************

@article{GanekCorbi03TheDawningOfTheAutonomicComputingEra,
 author = {A. G. Ganek and T. A. Corbi},
 title = {The dawning of the autonomic computing era},
 journal = {IBM Systems Journal},
 volume = {42},
 number = {1},
 year = {2003},
 issn = {0018-8670},
 pages = {5--18},
 publisher = {IBM},
 address = {Riverton, NJ, USA},
 }

@inproceedings{Kephart05ResearchChallengesOfAutonomicComputing,
 author = {Jeffrey O. Kephart},
 title = {Research challenges of autonomic computing},
 booktitle = {Proceedings of the 27th international conference on Software engineering (ICSE '05)},
 year = {2005},
 isbn = {1-59593-963-2},
 pages = {15--22},
 location = {St. Louis, MO, USA},
 doi = {10.1145/1062455.1062464},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }

@article{KephartChess03TheVisionOfAutonomicComputing,
 author = {Kephart, J.O. and  Chess, D.M.},
 title = {The Vision of Autonomic Computing},
 journal = {Computer},
 volume = {36},
 number = {1},
 month= jan,
 year = 2003,
 issn = {0018-9162},
 pages = {41-50},
 doi = {10.1109/MC.2003.1160055},
 publisher = {IEEE},
 abstract = {A 2001 IBM manifesto observed that a looming software complexity crisis -caused by applications and environments that number into the tens of millions of lines of code - threatened to halt progress in computing. The manifesto noted the almost impossible difficulty of managing current and planned computing systems, which require integrating several heterogeneous environments into corporate-wide computing systems that extend into the Internet. Autonomic computing, perhaps the most attractive approach to solving this problem, creates systems that can manage themselves when given high-level objectives from administrators. Systems manage themselves according to an administrator's goals. New components integrate as effortlessly as a new cell establishes itself in the human body. These ideas are not science fiction, but elements of the grand challenge to create self-managing computing systems.}
 }

*******************************************
* Adaptive Software
*******************************************

@misc{Palsberg95WhatIsTheTypeOfAnAdaptiveProgram,
  author = "Jens Palsberg",
  title = "What is the Type of an Adaptive Program?",
  url = "citeseer.ist.psu.edu/589986.html" }

@article{AbdelzaherBhatti99WebContentAdaptationToImproveServerOverloadBehavior,
    author = "Tarek F. Abdelzaher and Nina Bhatti",
    title = "{Web} content adaptation to improve server overload behavior",
    journal = "Computer Networks (Amsterdam, Netherlands)",
    volume = "31",
    number = "11--16",
    pages = "1563--1577",
    year = "1999",
    url = "citeseer.ist.psu.edu/article/abdelzaher99web.html" }

@inproceedings{KonRomanLiuMaoYamaneMagalhaesCampell00MonitoringSecurityAndDynamicConfigurationWithTheDynamicTAOReflectiveORB,
  author =       {Fabio Kon and Manuel Rom\'an and Ping Liu and Jina Mao and
                  Tomonori Yamane and Luiz Claudio Magalh{\~a}es and Roy H. Campbell},
  title =        "{Monitoring, Security, and Dynamic Configuration with the dynamicTAO
                   Reflective ORB}",
  booktitle =    {Proceedings of the IFIP/ACM International Conference on Distributed
                  Systems Platforms and Open Distributed Processing (Middleware '2000)},
  pages =        {121-143},
  year =         2000,
  series =       {LNCS},
  number =       {1795},
  address =      {New York},
  month =        {April},
  publisher =    {Springer-Verlag},
  url = {citeseer.ist.psu.edu/kon00monitoring.html} }

@Article{LiNahrstedt99,
  author ="Baochun Li and Klara Nahrstedt",
  title ="A Control-based Middleware Framework for Quality of Service Adaptations",
  journal = "ieee-jsac",
  year = 1999,
  holder =   "article",
  url = "http://cairo.cs.uiuc.edu/papers/JSAC99.ps"
}

@article{Wegner97WhyInteractionIsMorePowerfulThanAlgorithms,
 author = {Peter Wegner},
 title = {Why interaction is more powerful than algorithms},
 journal = {Commun. ACM},
 volume = {40},
 number = {5},
 year = {1997},
 issn = {0001-0782},
 pages = {80--91},
 doi = {10.1145/253769.253801},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }

@inproceedings{BernonCampsGleizesPicard03ToolsForSelfOrganizingApplicationsEngineering,
  author    = {Carole Bernon and Val{\'e}rie Camps and Marie Pierre Gleizes and Gauthier Picard},
  title     = {Tools for Self-Organizing Applications Engineering},
  booktitle = {Engineering Self-Organising Systems},
  year      = {2003},
  pages     = {283-298},
  ee        = {http://springerlink.metapress.com/openurl.asp?genre=article{\&}issn=0302-9743{\&}volume=2977{\&}spage=283},
  crossref  = {SerugendoKarageorgosRanaZambonelli04EngineeringSelfOrganisingSystems},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}

@proceedings{SerugendoKarageorgosRanaZambonelli04EngineeringSelfOrganisingSystems,
  editor    = {Giovanna Di Marzo Serugendo and
               Anthony Karageorgos and
               Omer F. Rana and
               Franco Zambonelli},
  title     = {Engineering Self-Organising Systems, Nature-Inspired Approaches
               to Software Engineering [revised and extended papers presented
               at the Engineering Self-Organising Applications ,
               ESOA 2003, held at AAMAS 2003 in Melbourne, Australia, in
               July 2003 and selected invited papers from leading researchers
               in self-organisation]},
  booktitle = {Engineering Self-Organising Systems},
  publisher = {Springer},
  series    = {Lecture Notes in Computer Science},
  volume    = {2977},
  year      = {2004},
  isbn      = {3-540-21201-9},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}


@inproceedings{GeorgiadisMageeKramer02SelfOrganisingSoftwareArchitecturesForDistributedSystems,
 author = {Ioannis Georgiadis and Jeff Magee and Jeff Kramer},
 title = {Self-organising software architectures for distributed systems},
 booktitle = {WOSS '02: Proceedings of the first workshop on Self-healing systems},
 year = {2002},
 isbn = {1-58113-609-9},
 pages = {33--38},
 location = {Charleston, South Carolina},
 doi = {10.1145/582128.582135},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }

@misc{SterrittBustard03AutonomicComputingAMeansOfAchievingDependability,
  author = "R. Sterritt and D. Bustard",
  title = "Autonomic Computing-a Means of Achieving Dependability",
  text = "R Sterritt, DW Bustard, Autonomic Computing-a Means of Achieving Dependability?,
    Proceedings of IEEE International Conference on the Engineering of Computer
    Based Systems (ECBS'03), Huntsville, Alabama, USA, April 7-11 2003, pp 247-251.",
  year = "2003",
  url = "citeseer.ist.psu.edu/sterritt03autonomic.html" }

@article{PalsbergXiaoLieberherr95EfficientImplementationOfAdaptiveSoftware,
 author = {Jens Palsberg and Cun Xiao and Karl Lieberherr},
 title = {Efficient implementation of adaptive software},
 journal = {Transactions on Programming Languages and Systems (TOPLAS)},
 volume = {17},
 number = {2},
 year = {1995},
 issn = {0164-0925},
 pages = {264--292},
 doi = {10.1145/201059.201066},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }

@inproceedings{Shaw02SelfHealingSofteningPrecisionToAvoidBrittleness,
 author = {Mary Shaw},
 title = {``Self-healing'': softening precision to avoid brittleness},
 booktitle = {WOSS '02: Proceedings of the first workshop on Self-healing systems},
 year = {2002},
 isbn = {1-58113-609-9},
 pages = {111--114},
 location = {Charleston, South Carolina},
 doi = {10.1145/582128.582152},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }

@incollection{GarlanChengSchmerl03IncreasingSystemDependabilityThroughArchitectureBasedSelfRepair,
  author =       {David Garlan and Shang-Wen Cheng and Bradley Schmerl},
  title =        {Increasing System Dependability through Architecture-based Self-repair},
  publisher =    {Springer-Verlag},
  year =         {2003},
  address =      {Berlin},
  booktitle =    {Architecting Dependable Systems},
  crossref =     {LemosGacekRomanovsky03ArchitectingDependableSystems},
  PAGES =        {23--46}
}



% ist in der Uni-Oldenburg Bibo
@book{LemosGacekRomanovsky03ArchitectingDependableSystems,
 editor = "R. de Lemos and C. Gacek and A. Romanovsky",
 title = {Architecting Dependable Systems,  Series: Lecture Notes in Computer Science, Vol. 2677 },
 year = {2003},
 isbn = {3-540-40727-8},
 publisher = "Springer-Verlag",
  address =     "Berlin",
 }

@inbook{ChengGarlanSchmerl03MakingSelfAdaptationAnEngineeringReality,
  author =       "Shang-Wen Cheng and David Garlan and and Bradley Schmerl",
  title =        "{Making Self-Adaptation an Engineering Reality}",
  editor =       "Ozlap Babaoglu and Mark Jelasity and Alberto Montresor and Christof Fetzer and Stefano Leonardi and Aad van Moorsel and Maarten van Steen",
  publisher =    {Springer-Verlag},
  year =         {2003},
  note  = "29 pages",
  address =     "Berlin",
  booktitle =   "Self-Star Properties in Complex Information Systems",
  PAGES =       "23--46"
}




@inproceedings{BlairBlairIssarnyTumaZarras00TheRoleOfSoftwareArchitectureInConstrainingAdaptationIncomponentBasedMiddlewarePlatforms,
 author = {Gordon S. Blair and Lynne Blair and Val\'erie Issarny and Petr Tuma and Apostolos Zarras},
 title = {The role of software architecture in constraining adaptation incomponent-based middleware platforms},
 booktitle = {Middleware '00: IFIP/ACM International Conference on Distributed systems platforms},
 year = {2000},
 isbn = {3-540-67352-0},
 pages = {164--184},
 location = {New York, New York, United States},
 publisher = {Springer-Verlag New York, Inc.},
 address = {Secaucus, NJ, USA},
 }

@inproceedings{LemosFiadeiro02AnArchitecturalSupportForSelfAdaptiveSoftwareForTreatingFaults,
 author = {Rog\'erio de Lemos and Jos\'e Luiz Fiadeiro},
 title = {An architectural support for self-adaptive software for treating faults},
 booktitle = {WOSS '02: Proceedings of the first workshop on Self-healing systems},
 year = {2002},
 isbn = {1-58113-609-9},
 pages = {39--42},
 location = {Charleston, South Carolina},
 doi = {10.1145/582128.582136},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }

@inproceedings{CombsVagle02AdaptiveMirroringOfSystemOfSystemsArchitectures,
 author = {Nathan Combs and Jeff Vagle},
 title = {Adaptive mirroring of system of systems architectures},
 booktitle = {WOSS '02: Proceedings of the first workshop on Self-healing systems},
 year = {2002},
 isbn = {1-58113-609-9},
 pages = {96--98},
 location = {Charleston, South Carolina},
 doi = {10.1145/582128.582147},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }

@inproceedings{SubramanianChung01SoftwareArchitectureAdaptabilityAnNFRApproach,
 author = {Nary Subramanian and Lawrence Chung},
 title = {Software architecture adaptability: an NFR approach},
 booktitle = {IWPSE '01: Proceedings of the 4th International Workshop on Principles of Software Evolution},
 year = {2001},
 isbn = {1-58113-508-4},
 pages = {52--61},
 location = {Vienna, Austria},
 doi = {10.1145/602461.602470},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }

@inproceedings{DellarocasKleinShrobe98AnArchitectureForConstructingSelfEvolvingSoftwareSystems,
 author = {Chrysanthos Dellarocas and Mark Klein and Howard Shrobe},
 title = {An architecture for constructing self-evolving software systems},
 booktitle = {Proceedings of the third international workshop on Software architecture (ISAW 98)},
 year = {1998},
 isbn = {1-58113-081-3},
 pages = {29--32},
 location = {Orlando, Florida, United States},
 doi = {10.1145/288408.288416},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }

@inproceedings{OreizyMedvidovicTaylor98ArchitectureBasedRuntimeSoftwareEvolution,
 author = {Peyman Oreizy and Nenad Medvidovic and Richard N. Taylor},
 title = {Architecture-based runtime software evolution},
 booktitle = {Proceedings of the 20th international conference on Software engineering (ICSE '98)},
 year = {1998},
 isbn = {0-8186-8368-6},
 pages = {177--186},
 location = {Kyoto, Japan},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
 }


@article{GarlanChengHuangSchmerlSteenkiste04RainbowArchitectureBasedSelfAdaptationWithReusableInfrastructure,
 author = {Garlan, D. and Cheng, S.-W. and Huang, A.-C. and Schmerl, B. and Steenkiste, P.},
 title = {Rainbow: architecture-based self-adaptation with reusable infrastructure},
 journal = {Computer},
 volume = {37},
 number = {10},
 month= oct,
 year = 2004,
 issn = {0018-9162},
 pages = {46--54},
 doi = {10.1109/MC.2004.175},
 publisher = {IEEE},
 abstract = {While attractive in principle, architecture-based self-adaptation raises a number of research and engineering challenges. First, the ability to handle a wide variety of systems must be addressed. Second, the need to reduce costs in adding external control to a system must be addressed. Our rainbow framework attempts to address both problems. By adopting an architecture-based approach, it provides reusable infrastructure together with mechanisms for specializing that infrastructure to the needs of specific systems. The specialization mechanisms let the developer of self-adaptation capabilities choose what aspects of the system to model and monitor, what conditions should trigger adaptation, and how to adapt the system.}
 }







@article{FayadCline96AspectsOfSoftwareAdaptability,
 author = {Mohamed Fayad and Marshall P. Cline},
 title = {Aspects of software adaptability},
 journal = {Commun. ACM},
 volume = {39},
 number = {10},
 year = {1996},
 issn = {0001-0782},
 pages = {58--59},
 doi = {10.1145/236156.236170},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }

@inproceedings{ShenWangMei04SelfAdaptiveSoftwareCyberneticPerspectiveAndAnApplicationServerSupportedFramework,
 author = {Junrong Shen and Qianxiang Wang and Hong Mei},
 title = {Self-adaptive software: cybernetic perspective and an application server supported framework},
 booktitle = {Proceedings of the 28th Annual International Conference on Computer Software and Applications (COMPSAC) 2004},
 year = {2004},
 pages = {92--95},
 month = sep,
 volume = 2,
 doi = {10.1109/CMPSAC.2004.1342684},
 publisher = {IEEE}
 }

@article{OreizyGorlickTaylorHeimhignerJohnsonMedvidovicQuiliciRosenblumWolf99AnArchitectureBasedApproachToSelfAdaptiveSoftware,
 author = {Oreizy, P. and  Gorlick, M.M. and  Taylor, R.N. and  Heimhigner, D. and  Johnson, G. and  Medvidovic, N. and  Quilici, A. and  Rosenblum, D.S. and  Wolf, A.L.  },
 title = {An architecture-based approach to self-adaptive software},
 journal = {Intelligent Systems and Their Applications},
 volume = {14},
 number = {3},
 month= "may--jun",
 year = 1999,
 issn = {1094-7167},
 pages = {54-62},
 doi = {10.1109/5254.769885},
 publisher = {IEEE}
 }





*************************************
* software evolution
*************************************

@inproceedings{LehmanRamil01EvolutionInSoftwareAndRelatedAreas,
 author = {M. M. Lehman and J. F. Ramil},
 title = {Evolution in software and related areas},
 booktitle = {IWPSE '01: Proceedings of the 4th International Workshop on Principles of Software Evolution},
 year = {2001},
 isbn = {1-58113-508-4},
 pages = {1--16},
 location = {Vienna, Austria},
 doi = {10.1145/602461.602463},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }

@inproceedings{LehmanRamil01AnApproachToATheoryOfSoftwareEvolution,
 author = {M. M. Lehman and J. F. Ramil},
 title = {An approach to a theory of software evolution},
 booktitle = {IWPSE '01: Proceedings of the 4th International Workshop on Principles of Software Evolution},
 year = {2001},
 isbn = {1-58113-508-4},
 pages = {70--74},
 location = {Vienna, Austria},
 doi = {10.1145/602461.602473},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }

@inproceedings{BennettGold01AchievingUltraRapidEvolutionUsingServiceBasedSoftware,
 author = {Keith Bennett and Nicolas Gold},
 title = {Achieving ultra rapid evolution using service-based software},
 booktitle = {IWPSE '01: Proceedings of the 4th International Workshop on Principles of Software Evolution},
 year = {2001},
 isbn = {1-58113-508-4},
 pages = {91--94},
 location = {Vienna, Austria},
 doi = {10.1145/602461.602479},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }

@inproceedings{Mittermeir01SoftwareEvolutionLetsSharpenTheTerminologyBeforeSharpeningOutOfScopeTools,
 author = {Roland T. Mittermeir},
 title = {Software evolution: let's sharpen the terminology before sharpening (out-of-scope) tools},
 booktitle = {IWPSE '01: Proceedings of the 4th International Workshop on Principles of Software Evolution},
 year = {2001},
 isbn = {1-58113-508-4},
 pages = {114--121},
 location = {Vienna, Austria},
 doi = {10.1145/602461.602485},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }

*********************
* self organisation
********************



*******************
* ADL
*******************

@inproceedings{Heineman98AdaptationAndSoftwareArchitecture,
 author = {George T. Heineman},
 title = {Adaptation and software architecture},
 booktitle = {ISAW '98: Proceedings of the third international workshop on Software architecture},
 year = {1998},
 isbn = {1-58113-081-3},
 pages = {61--64},
 location = {Orlando, Florida, United States},
 doi = {10.1145/288408.288424},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }

************************
* Ubiquious computing
************************

@inproceedings{NiemelaeLatvakoski04SurveyOfRequirementsAndSolutionsForUbiquitousSoftware,
 author = {Eila Niemel\"a and Juhani Latvakoski},
 title = {Survey of requirements and solutions for ubiquitous software},
 booktitle = {MUM '04: Proceedings of the 3rd international conference on Mobile and ubiquitous multimedia},
 year = {2004},
 isbn = {1-58113-981-0},
 pages = {71--78},
 location = {College Park, Maryland},
 doi = {10.1145/1052380.1052391},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }

**************************
* reflection
**************************

@inproceedings{DemersMalenfant95ReflectionInLogicFunctionalAndObjectOrientedProgrammingAShortComparativeStudy,
 author = {F.-N. Demers and J. Malenfant},
 title = {Reflection in Logic, Functional and Object-Oriented Programming: a Short Comparative Study},
 booktitle = {Proceedings of the International Joint Conference on Artificial Intelligence (IJCAI)},
 year = {1995},
 month = {Aug},
 }

******************************
* HW self healing
******************************


@inproceedings{KumarLach03FineGrainedSelfHealingHardwareForLargeScaleAutonomicSystems,
 author = {Kumar, V.V. and  Lach, J.},
 title = {Fine-grained self-healing hardware for large-scale autonomic systems},
 booktitle = {Proceedings of the Workshop on Database and Expert Systems Applications},
 year = {2003},
 month = sep,
 pages = {707--712},
 doi = {10.1109/DEXA.2003.1232104},
 publisher = {IEEE},
 abstract = {}
 }

@inproceedings{MangeSipperStaufferTempesti00TowardSelfRepairingAndSelfReplicatingHardwareTheEmbryonicsApproach,
 author = {Mange, D. and  Sipper, M. and  Stauffer, A. and  Tempesti, G.  },
 title = {Toward self-repairing and self-replicating hardware: the Embryonics approach},
 booktitle = {Proceedings of the Second NASA/DoD Workshop on Evolvable Hardware  },
 year = {2000},
 month = jul,
 pages = {205 -- 214},
 volume = 5,
 doi = {10.1109/EH.2000.869358},
 publisher = {IEEE},
 abstract = {The growth and operation of all living beings are directed by the interpretation, in each of their cells, of a chemical program, the DNA string or genome. This process is the source of inspiration for the Embryonics (embryonic electronics) project, whose final objective is the design of highly robust integrated circuits, endowed with properties usually associated with the living world: self-repair (cicatrization) and self-replication. The Embryonics architecture is based on four hierarchical levels of organization: 1) The basic primitive of our system is the molecule, a multiplexer-based element of a novel programmable circuit. 2) A finite set of molecules makes up a cell, essentially a small processor with an associated memory. 3) A finite set of cells makes up an organism, an application-specific multiprocessor system. 4) The organism can itself replicate, giving rise to a population of identical organisms. In the conclusion, we describe our ongoing research efforts to meet three challenges: a scientific challenge, that of implementing the original specifications formulated by John von Neumann; a technical challenge, that of realizing very robust integrated circuits; and a biological challenge, that of attempting to show that the genomes of artificial and natural organisms share common properties.}
 }

***********************************
* Aspect Oriented Programming AOP
***********************************

@incollection{KiczalesLampingMenhdhekarMaedaLopesLoingtierIrwin97AspectOrientedProgramming,
    author = "Gregor Kiczales and John Lamping and Anurag Menhdhekar and Chris Maeda and Cristina Lopes and Jean-Marc Loingtier and John Irwin",
    title = "Aspect-Oriented Programming",
    booktitle = "Proceedings European Conference on Object-Oriented Programming",
    volume = "1241",
    publisher = "Springer-Verlag",
    address = "Berlin, Heidelberg, and New York",
    editor = "Mehmet Ak\c{s}it and Satoshi Matsuoka",
    pages = "220--242",
    year = "1997",
}

%BIS: 4013 inf 720 i SA 0603
@inproceedings{KiczalesHilsdaleHuguninKerstenPalmGriswold01AnOverviewOfAspectJ,
 author = {Gregor Kiczales and Erik Hilsdale and Jim Hugunin and Mik Kersten and Jeffrey Palm and William G. Griswold},
 title = {An Overview of AspectJ},
 booktitle = {ECOOP '01: Proceedings of the 15th European Conference on Object-Oriented Programming},
 year = {2001},
 isbn = {3-540-42206-4},
 pages = {327--353},
 publisher = {Springer-Verlag},
 address = {London, UK},
 }

*****************************
* middleware
*****************************

@article{Schmidt02MiddlewareForRealTimeAndEmbeddedSystems,
 author = {Douglas C. Schmidt},
 title = {Middleware for real-time and embedded systems},
 journal = {Commun. ACM},
 volume = {45},
 number = {6},
 year = {2002},
 issn = {0001-0782},
 pages = {43--48},
 doi = {10.1145/508448.508472},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }

%better use this article than the magazin article Schmidt02
@inproceedings{SchmidtBuschmann03PatternsFrameworksAndMiddlewareTheirSynergisticRelationships,
 author = {Douglas C. Schmidt and Frank Buschmann},
 title = {Patterns, frameworks, and middleware: their synergistic relationships},
 booktitle = {Proceedings of the 25th International Conference on Software Engineering (ICSE '03)},
 year = {2003},
 isbn = {0-7695-1877-X},
 pages = {694--704},
 location = {Portland, Oregon},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
 abstract = {The knowledge required to develop complex software has historically existed in programming folklore, the heads of experienced developers, or buried deep in the code. These locations are not ideal since the effort required to capture and evolve this knowledge is expensive, time-consuming, and error-prone. Many popular software modeling methods and tools address certain aspects of these problems by documenting how a system is designed. However, they only support limited portions of software development and do not articulate why a system is designed in a particular way, which complicates subsequent software reuse and evolution.Patterns, frameworks, and middleware are increasingly popular techniques for addressing key aspects of the challenges outlined above. Patterns codify reusable design expertise that provides time-proven solutions to commonly occurring software problems that arise in particular contexts and domains. Frameworks provide both a reusable product-line architecture [1] guided by patterns -- for a family of related applications and an integrated set of collaborating components that implement concrete realizations of the architecture. Middleware is reusable software that leverages patterns and frameworks to bridge the gap between the functional requirements of applications and the underlying operating systems, network protocol stacks, and databases. This paper presents an overview of patterns, frameworks, and middleware, describes how these technologies complement each other to enhance reuse and productivity, and then illustrates how they have been applied successfully in practice to improve the reusability and quality of complex software systems.}
 }

@inproceedings{Emmerich00SoftwareEngineeringAndMiddlewareARoadmap,
 author = {Wolfgang Emmerich},
 title = {Software engineering and middleware: a roadmap},
 booktitle = {Proceedings of the Conference on The Future of Software Engineering (ICSE '00)},
 year = {2000},
 isbn = {1-58113-253-0},
 pages = {117--129},
 location = {Limerick, Ireland},
 doi = {10.1145/336512.336542},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }


**************************
* monitoring
**************************

@inproceedings{LudwigWismueller97OMIS2AUniversalInterfaceForMonitoringSystems,
 author = {Thomas Ludwig and Roland Wism\"uller},
 title = {OMIS 2.0 - A Universal Interface for Monitoring Systems},
 booktitle = {Proceedings of the 4th European PVM/MPI Users' Group Meeting on Recent Advances in Parallel Virtual Machine and Message Passing Interface},
 year = {1997},
 isbn = {3-540-63697-8},
 pages = {267--276},
 publisher = {Springer-Verlag},
 address = {London, UK},
 }

**************************
* MISSING
***************************

% not subscribed by Ralf in IEEE
@inproceedings{LaForge00SelfHealingAvionicsForStarships,
 author = {LaForge, L.E.},
 title = {Self-healing avionics for starships},
 booktitle = {Proceedings of the Conference on Aerospace  },
 year = {2000},
 month = mar,
 pages = {499 - 519},
 volume = 5,
 doi = {10.1109/AERO.2000.878525},
 publisher = {IEEE},
 abstract = {Imagine interstellar missions lasting five times your lifespan. Our spacecraft approaches Alpha Centauri, plans to sample soil from a crater on a moon of the second planet, and lands a rover that burrows beneath the crater's surface. From the perspective of self-healing architectures and algorithms, we describe opportunities and challenges that are key to launching, within the next forty years, star-ships that are truly autonomous}
 }

% not subscribed by Ralf in IEEE
% interesting because of fundamental concepts
@inproceedings{MangeSipperStaufferTempesti00TowardSelfRepairingAndSelfReplicatingHardwareTheEmbryonicsApproach,
 author = {Wang Yong and  Hu Shousong and  Xiong Yun  },
 title = {Some basic problems about self-repairing flight control},
 booktitle = {Proceedings of the 3rd World Congress on Intelligent Control and Automation},
 year = {2000},
 month = jul,
 pages = {3161 -- 3164 },
 volume = 5,
 doi = {10.1109/WCICA.2000.863081},
 publisher = {IEEE},
 abstract = {For certain structural failures and damages for which redundancy cannot be employed, the best method to ensure flight safety is the self-repairing technique. Based on the characters of self-repair plane, the paper explicitly states some basic assumptions of the self-repair, and comes up with some new concepts: control input, operating input, command input, repair input and operating and control factor, etc., and their relationship. Thus it provides a simple and reliable mathematical model structure for the research on the self-repair control of plane.}
 }

%in Bibo???
@inproceedings{WolfHolvoet04EmergenceVersusSelfOrganisationDifferentConceptsButPromisingWhenCombined,
  author    = {Tom De Wolf and Tom Holvoet},
  title     = {Emergence Versus Self-Organisation: Different Concepts but Promising When Combined.},
  booktitle = {Engineering
               Selforganising Applications},
  year      = {2004},
  pages     = {1--15},
  doi       = {10.1007/11494676\_1},
  crossref  = {BruecknerSerugendoKarageorgosNagpal05EngineeringSelfOrganisingSystems},
  publisher = {Springer},
}

%in Bibo???
@proceedings{BruecknerSerugendoKarageorgosNagpal05EngineeringSelfOrganisingSystems,
  editor    = {Sven Brueckner and Giovanna Di Marzo Serugendo and Anthony Karageorgos and Radhika Nagpal},
  title     = {Engineering Self-Organising Systems, Methodologies and Applications
               [revised versions of papers presented at the Engineering
               Selforganising Applications (ESOA 2004) workshop, held during
               the Autonomous Agents and Multi-agent Systems conference
               (AAMAS 2004) in New York in July 2004, and selected invited
               papers]},
  booktitle = {Engineering Self-Organising Systems},
  series    = {Lecture Notes in Computer Science},
  volume    = {3464},
  year      = {2005}
}

@inproceedings{AttariyanFlinn2008UsingCausalityToDiagnoseConfigurationBugs,
title = {Using Causality to Diagnose Configuration Bugs},
author = {Mona Attariyan and Jason Flinn},
booktitle = {In the Proceedings of the USENIX Annual Technical Conference},
month = Jun,
year = {2008},
url = {https://db.usenix.org/events/usenix08/tech/full\_papers/attariyan/attariyan.pdf},
}

@inproceedings{SuAttariyanFlinn2007AutoBashImprovingConfigurationManagementWithOperatingSystemCausalityAnalysis,
title = {AutoBash: Improving configuration management with operating system causality analysis},
author = {Ya-Yunn Su and Mona Attariyan and Jason Flinn},
booktitle = {Proceedings of the 21st ACM Symposium on Operating Systems Principles (SOSP'07)},
year = {2007},
url = {http://notrump.eecs.umich.edu/group/papers/autobash.pdf},
}


@INCOLLECTION{BocanialaPalade06ComputationalIntelligenceMethodologiesInFaultDiagnosisReviewAndStateOfTheArt,
  author = {Cosmin Danut Bocaniala and Vasile Palade},
  title = {Computational Intelligence Methodologies in Fault Diagnosis: Review
	and State of the Art},
  chapter = {1},
  pages = {1--36},
  crossref = {PaladeBocanialaJain06ComputationalIntelligenceInFaultDiagnosis},
}

@inproceedings{WilliamsNarasimhan07ArchitectureDrivenDiagnosisOfPerformanceFailuresInATokenRing,
 author = {Andrew Williams and Priya Narasimhan},
 title = {Architecture-driven diagnosis of performance failures in a token ring},
 booktitle = {Proceedings of the 3rd workshop on on Hot Topics in System Dependability (HotDep'07)},
 year = {2007},
 pages = {8},
 publisher = {USENIX},
 }





@article{ChenJiangYoshihira07FailureDetectionInLargeScaleInternetServicesByPrincipleSubspaceMapping,
author = {Haifeng Chen and Guofei Jiang and Kenji Yoshihira},
title = {Failure Detection in Large-Scale Internet Services by Principal Subspace Mapping},
journal = {IEEE Transactions on Knowledge and Data Engineering},
volume = {19},
number = {10},
year = {2007},
issn = {1041-4347},
pages = {1308-1320},
doi = {http://doi.ieeecomputersociety.org/10.1109/TKDE.2007.190633},
publisher = {IEEE Computer Society},
address = {Los Alamitos, CA, USA},
}

@inproceedings{HaberkornTrivedi07AvailabilityMonitorForASoftwareBasedSystem,
author = {Marc Haberkorn and Kishor Trivedi},
title = {Availability Monitor for a Software Based System},
journal = {10th High Assurance Systems Engineering Symposium (HASE'07)},
volume = {0},
year = {2007},
pages = {321--328},
doi = {10.1109/HASE.2007.24},
publisher = {IEEE},
}

% A set of representative service requests is periodically executed by clients. A response time objective violations is reported when the 90th percentile of a set ofresponse times are above some predefined threshold. The service requests are distinguished into the categories trivial, intermediate, and complex. This categorization aims to differenciate levels of demands of resources such as, processor, network, and disc. Response times are monitored at client side and regularly transfered to a central server to enable evaluation of actual data and comparison to predefined profiles.
%Antwortzeiten von Standardabfragen (und Servererreichbarkeit) eines Terminalsystems werden periodisch auf Client-Seite gemessen. Eine Ausnahme wird berichtet, falls das 0.9 Quantil von einer Menge von Beobachtungen einen vorgegebenen Schwellwert Ã¼berschreitet. Standardabfragen werden in die Klassen "trivial","intermediate" und "complex" unterteilt, um unterschiedlichen Ressourcenbedarf (CPU, Netzwerk, IO) zu berÃ¼cksichtigen.
@article{BaileySoucy83PerformanceAndAvailabilityMeasurementOfTheIBMInformationNetwork,
  author    = {Richard M. Bailey and
               Richard C. Soucy},
  title     = {Performance and Availability Measurement of the IBM Information Network},
  journal   = {IBM Systems Journal},
  volume    = {22},
  number    = {4},
  year      = {1983},
  pages     = {404--416},
}

@inproceedings{PilskalnsWallaceIlas07RuntimeDebuggingUsingReverseEngineeredUML,
  author    = {Orest Pilskalns and
               Scott Wallace and
               Filaret Ilas},
  title     = {Runtime Debugging Using Reverse-Engineered UML},
  booktitle = {10th International Conference on Model Driven Engineering, Languages, and Systems (MODELS'07)},
  year      = {2007},
  pages     = {605-619},
  ee        = {10.1007/978-3-540-75209-7_41},
}

@inproceedings{YilmazParadkarWilliams08TimeWillTellFaultLocalizationUsingTimeSpectra,
 author = {Cemal Yilmaz and Amit Paradkar and Clay Williams},
 title = {Time will tell: fault localization using time spectra},
 booktitle = {Proceedings of the 13th international conference on Software engineering (ICSE '08)},
 year = {2008},
 isbn = {978-1-60558-079-1},
 pages = {81--90},
 doi = {10.1145/1368088.1368100},
 publisher = {ACM},
}

%about suitable visualization of fault localization results
@inproceedings{JonesHarroldStasko02VisualizationOfTestInformationToAssistFaultLocalization,
 author = {James A. Jones and Mary Jean Harrold and John Stasko},
 title = {Visualization of test information to assist fault localization},
 booktitle = {Proceedings of the 24th International Conference on Software Engineering (ICSE'02)},
 year = {2002},
 isbn = {1-58113-472-X},
 pages = {467--477},
 doi = {10.1145/581339.581397},
 publisher = {ACM},
 address = {New York, NY, USA},
 }

@article{YilmazPorterKrishnaMemonSchmidtGokhaleNatarajan07ReliableEffectsScreeningADistributedContinuousQualityAssuranceProcessForMonitoringPerformanceDegradationInEvolvingSoftwareSystems,
  author    = {Cemal Yilmaz and
               Adam A. Porter and
               Arvind S. Krishna and
               Atif M. Memon and
               Douglas C. Schmidt and
               Aniruddha S. Gokhale and
               Balachandran Natarajan},
  title     = {Reliable Effects Screening: A Distributed Continuous Quality
               Assurance Process for Monitoring Performance Degradation
               in Evolving Software Systems},
  journal   = {IEEE Trans. Software Eng.},
  volume    = {33},
  number    = {2},
  year      = {2007},
  pages     = {124-141},
  ee        = {http://doi.ieeecomputersociety.org/10.1109/TSE.2007.20},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}

@INPROCEEDINGS{AguileraMogulWienerReynoldsMuthitacharoen03PerformanceDebuggingForDistributedSystemsOfBlackBoxes,
  author = {Marcos K. Aguilera and Jeffrey C. Mogul and Janet L. Wiener and Patrick
	Reynolds and Athicha Muthitacharoen},
  title = {Performance debugging for distributed systems of black boxes},
  booktitle = {SOSP '03: Proceedings of the nineteenth ACM symposium on Operating
	systems principles},
  year = {2003},
  pages = {74--89},
  publisher = {ACM},
  doi = {10.1145/945445.945454},
  isbn = {1-58113-757-5},
  location = {Bolton Landing, NY, USA},
}

@INPROCEEDINGS{TianAlaeddine07AnalysisOfAnomaliesAndFailuresInDynamicWebApplications,
  author = {Nasser Alaeddine and Jeff Tian},
  title = {Analysis of Anomalies and Failures in Dynamic Web Applications},
  booktitle = {Proceedings of the 11th IASTED International Conference on Software
	Engineering and Applications (SEA'07)},
  year = {2007},
  pages = {385--390},
  publisher = {ACTA Press},
  isbn = {978-0-88986-705-5},
}

@ARTICLE{ArlatAgueraAmatCrouzetFabreLaprieMartinsPowell90FaultInjectionForDependabilityValidationAMethodologyAndSomeApplications,
  author = {Jean Arlat and Martine Aguera and Louis Amat and Yves

			 Crouzet and Jean-Charles Fabre and Jean-Claude Laprie

			 and Eliane Martins and David Powell},
  title = {Fault Injection for Dependability Validation: {A}

			 Methodology and Some Applications},
  journal = {IEEE Transactions on Software Engineering},
  year = {1990},
  volume = {16},
  pages = {166--182},
  number = {2},
  month = feb,
}

@INPROCEEDINGS{AvritzerBondiGrottkeTrivediWeyuker06PerformanceAssuranceViaSoftwareRevjuvenationMonitoringStatisticsAndAlgorithms,
  author = {Alberto Avritzer and Andre B. Bondi and Michael

			 Grottke and Kishor S. Trivedi and Elaine J. Weyuker},
  title = {Performance Assurance via Software Rejuvenation:

			 Monitoring, Statistics and Algorithms},
  booktitle = {International Conference on Dependable Systems and Networks (DSN'06)},
  year = {2006},
  pages = {435--444},
  publisher = {IEEE Computer Society},
  doi = {10.1109/DSN.2006.58},
  isbn = {0-7695-2607-1},
}

@INPROCEEDINGS{BarhamIsaacsMortierNarayanan03MapgieOnlineModellingAndPerformanceAwareSystems,
  author = {Paul Barham and Rebecca Isaacs and Richard Mortier and Dushyanth
	Narayanan},
  title = {Magpie: online modelling and performance-aware systems},
  booktitle = {Proceedings of the 9th conference on Hot Topics in Operating
	Systems (HOTOS'03)},
  year = {2003},
  pages = {15--15},
  publisher = {USENIX Association},
}

@INPROCEEDINGS{BarhamDonnellyIsaacsMortier04UsingMagpieForRequestExtractionAndWorkloadModelling,
  author = {Paul T. Barham and Austin Donnelly and Rebecca Isaacs and Richard Mortier},
  title = {Using Magpie for Request Extraction and Workload Modelling},
  booktitle = {6th Symposium On Operating Systems Design and Implementation (OSDI'04)},
  year = {2004},
  pages = {259--272},
}

@INPROCEEDINGS{BaudryFleureyTraon06ImprovingTestSuitesForEfficientFaultLocalization,
  author = {Benoit Baudry and Franck Fleurey and Yves Le Traon},
  title = {Improving Test Suites for Efficient Fault Localization},
  booktitle = {Proceedings of the 28th International Conference on Software Engineering (ICSE '06)},
  year = {2006},
  month = {may},
  publisher = {IEEE/ACM},
  location = {Shanghai, China},
}

@INPROCEEDINGS{Benoit07PerformanceDiagnosisForChangingWorkloads,
  author = {Darcy G. Benoit},
  title = {Performance Diagnosis for Changing Workloads},
  booktitle = {Proceedings of the Third International Conference on Autonomic and
	Autonomous Systems (ICAS'07)},
  year = {2007},
  pages = {18},
  address = {Washington, DC, USA},
  publisher = {IEEE Computer Society},
  doi = {10.1109/CONIELECOMP.2007.93},
  isbn = {0-7695-2859-5},
}

@ARTICLE{CandeaKicimanKawamotoFox06AutonomousRecoveryInComponentizedInternetApplications,
  author = {George Candea and Emre Kiciman and Shinichi Kawamoto and Armando
	Fox},
  title = {Autonomous recovery in componentized Internet applications},
  journal = {Cluster Computing},
  year = {2006},
  volume = {9},
  pages = {175--190},
  number = {2},
  doi = {10.1007/s10586-006-7562-4},
}

@INPROCEEDINGS{ChenJiangUngureanuKenji06CombiningSupervisedAndUnsupervisedMonitoringForFaultDetectionInDistributedComputingSystems,
  author = {Haifeng Chen and Guofei Jiang and Cristian Ungureanu and Kenji Yoshihira},
  title = {Combining supervised and unsupervised monitoring for fault detection
	in distributed computing systems},
  booktitle = {Proceedings of the 2006 {ACM} Symposium on Applied Computing ({SAC
	'06})},
  year = {2006},
  editor = {Hisham Haddad},
  pages = {705--709},
  publisher = {ACM},
  doi = {10.1145/1141277.1141438},
  isbn = {1-59593-108-2},
  location = {Dijon, France},
}

@INPROCEEDINGS{ChenJiangUngureanuYoshihira05FailureDetectionAndLocalizationInComponentBasedSystemsByOnlineTracking,
  author = {Haifeng Chen and Guofei Jiang and Cristian Ungureanu and Kenji Yoshihira},
  title = {Failure detection and localization in component based systems by
	online tracking},
  booktitle = {Proceeding of the 11th ACM SIGKDD International Conference on Knowledge
	Discovery in Data Mining (KDD'04)},
  year = {2005},
  pages = {750--755},
  publisher = {ACM},
  doi = {10.1145/1081870.1081968},
  isbn = {1-59593-135-X},
  location = {Chicago, Illinois, USA},
}

@INPROCEEDINGS{CohenZhangGoldszmidtSymonsKellyFox05CapturingIndexingClusteringAndRetrievingSystemHistory,
  author = {Ira Cohen and Steve Zhang and Moises Goldszmidt and Julie Symons
	and Terence Kelly and Armando Fox},
  title = {Capturing, indexing, clustering, and retrieving system history},
  booktitle = {SOSP '05: Proceedings of the twentieth ACM symposium on Operating
	systems principles},
  year = {2005},
  pages = {105--118},
  publisher = {ACM},
  doi = {http://doi.acm.org/10.1145/1095810.1095821},
  isbn = {1-59593-079-5},
  location = {Brighton, United Kingdom},
}

@ARTICLE{CretuParekhWangStolfo06IntrusionAndAnomalyDetectionMOdelExchangeForMobileAdHocNetworks,
  author = {Gabriela F. Cretu and Janak J. Parekh and Ke Wang and Salvatore J.
	Stolfo },
  title = { (RECHECK BIBTEX ENTRY) Intrusion and Anomaly Detection Model Exchange
	for Mobile Ad-Hoc Networks},
  journal = {CCNC06},
  year = {2006},
}

@ARTICLE{Denning87AnIntrusionDetectionModel,
  author = {D.E. Denning},
  title = {An Intrusion-Detection Model},
  journal = {IEEE Transactions on Software Engineering},
  year = {1987},
  volume = {13},
  pages = {222--232},
  number = {2},
  month = feb,
  publisher = {IEEE},
}

@ARTICLE{EchtleSilva98FehlerinjektionEinMittelZurBewertungDerMassnahmenGegenFehlerInKomplexenRechensystemen,
  author = {Klaus Echtle and Jo{\~a}o Gabriel Silva},
  title = {Fehlerinjektion - ein Mittel zur Bewertung der

			 Ma{\ss}nahmen gegen Fehler in komplexen

			 Rechensystemen},
  journal = {Informatik Spektrum},
  year = {1998},
  volume = {21},
  pages = {328--336},
  number = {6},
}

@ARTICLE{ElbaumKanduriAndrews07TraceAnomaliesAsPrecursorsOfFieldFailuresAnEmpiricalStudy,
  author = {Sebastian Elbaum and Satya Kanduri and Anneliese Andrews},
  title = {Trace anomalies as precursors of field failures: an empirical study},
  journal = {Empirical Softwoftware Engineering},
  year = {2007},
  volume = {12},
  pages = {447--469},
  number = {5},
  address = {Hingham, MA, USA},
  doi = {10.1007/s10664-007-9042-8},
  issn = {1382-3256},
  publisher = {Kluwer Academic Publishers},
}

@INPROCEEDINGS{ElbaumKarreRothermel03ImprovingWebApplicationTestingWithUserSessionData,
  author = {Sebastian Elbaum and Srikanth Karre and Gregg Rothermel},
  title = {Improving Web Application Testing with User Session Data},
  booktitle = {International Conference on Software Engineering (ICSE'03)},
  year = {2003},
  pages = {49--59},
  publisher = {IEEE},
  doi = {10.1109/ICSE.2003.1201187},
  issn = {0270-5257},
}

@INPROCEEDINGS{FengKolesnikovFoglaLeeGong03AnomalyDetectionUsingCallStackInformation,
  author = {Feng, H.H. and Kolesnikov, O.M. and Fogla, P. and Lee,W. and Gong,
	W.},
  title = {Anomaly Detection Using Call Stack Information},
  booktitle = {Proceedings of the 2003 IEEE Symposium on Security and Privacy},
  year = {2003},
}

@INPROCEEDINGS{GaoReiterXiaodong05BehavioralDistanceForIntrusionDetection,
  author = {Debin Gao and Michael K. Reiter and Dawn Xiaodong

	    		 Song},
  title = {Behavioral Distance for Intrusion Detection},
  booktitle = {RAID},
  year = {2005},
  editor = {Alfonso Valdes and Diego Zamboni},
  volume = {3858},
  series = {Lecture Notes in Computer Science},
  pages = {63--81},
  publisher = {Springer},
  doi = {10.1007/11663812\_4},
  isbn = {3-540-31778-3},
}

@INPROCEEDINGS{GosevaPopstojanovaLiWangAmitSangle06AContributionTowardsSolvingTheWebWorkloadPuzzle,
  author = {Katerina Goseva-Popstojanova and Fengbin Li and Xuan

			 Wang and Amit Sangle},
  title = {A Contribution Towards Solving the Web Workload

			 Puzzle},
  booktitle = {International Conference on Dependable Systems and Networks (DSN'06)},
  year = {2006},
  pages = {505--516},
  publisher = {IEEE Computer Society},
  doi = {10.1109/DSN.2006.2},
  isbn = {0-7695-2607-1},
}

@INPROCEEDINGS{GuoJiangGuofeiChenYoshihira06TrackingProbabilisticCorrelationOfMonitoringDataForFaultDetectionInComplexSystems,
  author = {Zhen Guo and Guofei Jiang and Haifeng Chen and Kenji Yoshihira},
  title = {Tracking Probabilistic Correlation of Monitoring Data for Fault Detection
	in Complex Systems},
  booktitle = {International Conference on Dependable Systems and Networks (DSN'06)},
  year = {2006},
  pages = {259--268},
  publisher = {IEEE Computer Society},
  doi = {10.1109/DSN.2006.70},
  isbn = {0-7695-2607-1},
}

@INPROCEEDINGS{HangalLam02TrackingDownSoftwareBugsUsingAutomaticAnomalyDetection,
  author = {Sudheendra Hangal and Monica S. Lam},
  title = {Tracking down software bugs using automatic anomaly detection},
  booktitle = {ICSE '02: Proceedings of the 24th International Conference on Software
	Engineering},
  year = {2002},
  pages = {291--301},
  address = {New York, NY, USA},
  publisher = {ACM},
  doi = {http://doi.acm.org/10.1145/581339.581377},
  isbn = {1-58113-472-X},
  location = {Orlando, Florida},
}

@ARTICLE{HokeSunStrunkGangerFaloutsos06InteMonContinuousMiningOfSensorDataInLargeScaleSelfInfrastructures,
  author = {Evan Hoke and Jimeng Sun and John D. Strunk and Gregory R. Ganger
	and Christos Faloutsos},
  title = {InteMon: continuous mining of sensor data in large-scale self-infrastructures},
  journal = {SIGOPS Oper. Syst. Rev.},
  year = {2006},
  volume = {40},
  pages = {38--44},
  number = {3},
  doi = {http://doi.acm.org/10.1145/1151374.1151384},
  issn = {0163-5980},
  publisher = {ACM},
}

@INPROCEEDINGS{HoodJi97AutomatedProactiveAnomalyDetection,
  author = {C. S. Hood and C. Ji},
  title = {Automated proactive anomaly detection},
  booktitle = {Proceedings of the fifth IFIP/IEEE international symposium on Integrated
	network management V : integrated management in a virtual world},
  year = {1997},
  pages = {688--699},
  address = {London, UK, UK},
  publisher = {Chapman \& Hall, Ltd.},
  isbn = {0-412-80960-5},
  location = {San Diego, California, United States},
}

@ARTICLE{HsuehTsaiIyer97FaultInjectionTechniquesAndTools,
  author = {Mei-Chen Hsueh and Timothy K. Tsai and Ravishankar K. Iyer},
  title = {Fault Injection Techniques and Tools},
  journal = {IEEE Computer},
  year = {1997},
  volume = {30},
  pages = {75--82},
  number = {4},
  month = apr,
  annote = {A survey over current fault injection techniques and tools. A good
	quote. Interesting are the different types of software fault injection
	techniques and their relations to the program transformational approach
	in describung failure models \cite{Gaertner:1998:SFT}. They have
	the same underlying idea but a different purpose: one is experimental
	(and dynamic) and the other is theoretical (and static). A German
	reference is \cite{Echtle:1998:FMB}.},
}

@ARTICLE{IyerYoungIyer90AutomaticRecognitionOfIntermittentFailuresAnExperimentalStudyOfFieldData,
  author = {R.K. Iyer and L.T. Young and P.V.K. Iyer},
  title = {Automatic Recognition of Intermittent Failures: An Experimental Study
	of Field Data},
  journal = {IEEE Transactions on Computers},
  year = {1990},
  volume = {39},
  pages = {525-537},
  number = {4},
  address = {Los Alamitos, CA, USA},
  doi = {10.1109/12.54845},
  issn = {0018-9340},
  publisher = {IEEE Computer Society},
}

@ARTICLE{Julisch03ClusteringIntrusionDetectionAlarmsToSupportRootCauseAnalysis,
  author = {Klaus Julisch},
  title = {Clustering intrusion detection alarms to support root cause analysis},
  journal = {ACM Transactions on Information System Security},
  year = {2003},
  volume = {6},
  pages = {443--471},
  number = {4},
  doi = {10.1145/950191.950192},
  issn = {1094-9224},
  publisher = {ACM},
}

@INPROCEEDINGS{KirianskyBrueningAmarasinghe03SecureExecutionViaProgramShepherding,
  author = {Kiriansky, V. and Bruening, D. and Amarasinghe, S.},
  title = {Secure execution via program shepherding},
  booktitle = {Proceedings of the 11th USENIX Security Symposium},
  year = {2002},
}

@INPROCEEDINGS{KolarikRudorfer94TimeSeriesForecastingUsingNeuralNetworks,
  author = {Thomas Kolarik and Gottfried Rudorfer},
  title = {Time series forecasting using neural networks},
  booktitle = {Proceedings of the international conference on APL : the language
	and its applications (APL '94)},
  year = {1994},
  pages = {86--94},
  publisher = {ACM},
  doi = {10.1145/190271.190290},
  isbn = {0-89791-675-1},
  location = {Antwerp, Belgium},
}

@INPROCEEDINGS{KruegelTothKirda02ServiceSpecificAnomalyDetectionForNetworkIntrusionDetection,
  author = {Christopher Kr\"{u}gel and Thomas Toth and Engin Kirda},
  title = {Service specific anomaly detection for network intrusion detection},
  year = {2002},
  booktitle = {Proceedings of the Symposium on Applied Computing (SAC'02)},
  pages = {201--208},
  publisher = {ACM},
  doi = {10.1145/508791.508835},
  isbn = {1-58113-445-2},
  location = {Madrid, Spain},
}

@INPROCEEDINGS{LaneBrodly97AnApplicationOfMachineLearningToAnomalyDetection,
  author = {T. Lane and C. E. Brodley},
  title = {An Application of Machine Learning to Anomaly Detection},
  booktitle = {Proceedings of the 20th {NIST}-{NCSC} National Information Systems Security Conference},
  year = {1997},
  pages = {366--380},
  abstract = {The anomaly detection problem has been widely studied in the computer security literature. In this paper we present a machine learning approach to anomaly detection. Our system builds user profiles based on command sequences and compares current input sequences to the profile using a similarity measure. The system must learn to classify current behavior as consistent or anomalous with past behavior using only positive examples of the account's valid user. Our empirical results demonstrate that this is a promising approach to distinguishing the legitimate user from an intruder.},
}

@ARTICLE{LaneBrodley99TemporalSequenceLearningAndDataReductionForAnomalyDetection,
  author = {Terran Lane and Carla E. Brodley},
  title = {Temporal sequence learning and data reduction for anomaly detection},
  journal = {ACM Trans. Inf. Syst. Secur.},
  year = {1999},
  volume = {2},
  pages = {295--331},
  number = {3},
  doi = {10.1145/322510.322526},
  issn = {1094-9224},
  publisher = {ACM},
}

@INPROCEEDINGS{MirgorodskiyMaruyamaMiller06ProblemDiagnosisInLargeScaleComputingEnvironments,
  author = {Alexander V. Mirgorodskiy and Naoya Maruyama and Barton P. Miller},
  title = {Scalable systems software---Problem diagnosis in large-scale computing
	environments},
  booktitle = {SC '06: Proceedings of the 2006 ACM/IEEE conference on Supercomputing},
  year = {2006},
  pages = {88},
  publisher = {ACM},
  doi = {10.1145/1188455.1188548},
  isbn = {0-7695-2700-0},
  location = {Tampa, Florida},
}

@ARTICLE{MutzValuerVigna06AnomalousSystemCallDetection,
  author = {Darren Mutz and Fredrik Valeur and Giovanni Vigna and Christopher
	Kruegel},
  title = {Anomalous system call detection},
  journal = {ACM Trans. Inf. Syst. Secur.},
  year = {2006},
  volume = {9},
  pages = {61--93},
  number = {1},
  doi = {10.1145/1127345.1127348},
  issn = {1094-9224},
  publisher = {ACM},
}

@ARTICLE{RenierisReiss03FaultLocalizationWithNearestNeighborQueries,
  author = {Manos Renieris and Steven P. Reiss},
  title = {Fault Localization With Nearest Neighbor Queries},
  journal = {ase},
  year = {2003},
  volume = {00},
  pages = {30},
  address = {Los Alamitos, CA, USA},
  doi = {10.1109/ASE.2003.1240292},
  issn = {1527-1366},
  publisher = {IEEE Computer Society},
}

@INPROCEEDINGS{ReynoldsKillianWienerMogulShahVahdat06PipDetectingTheUnexpectedInDistributedSystems,
  author = {Patrick Reynolds and Charles Killian and Janet L. Wiener and Jeffrey
	C. Mogul and Mehul A. Shah and Amin Vahdat},
  title = {Pip: detecting the unexpected in distributed systems},
  booktitle = {NSDI'06: Proceedings of the 3rd conference on 3rd Symposium on Networked
	Systems Design \& Implementation},
  year = {2006},
  pages = {9--9},
  address = {Berkeley, CA, USA},
  publisher = {USENIX Association},
  location = {San Jose, CA},
}

@INPROCEEDINGS{ReynoldsWienerMogulAguileraVahdat06WAP5BlackboxPerforamnceDebuggingForWideAreaSystems,
  author = {Patrick Reynolds and Janet L. Wiener and Jeffrey C. Mogul and Marcos
	K. Aguilera and Amin Vahdat},
  title = {WAP5: black-box performance debugging for wide-area systems},
  booktitle = {Proceedings of the 15th international conference on World Wide Web(WWW'05)},
  year = {2006},
  pages = {347--356},
  publisher = {ACM},
  doi = {10.1145/1135777.1135830},
  isbn = {1-59593-323-9},
}

@ARTICLE{RiccaTonella06DetectingAnomalyAndFailureInWebApplications,
  author = {Filippo Ricca and Paolo Tonella},
  title = {Detecting Anomaly and Failure in Web Applications},
  journal = {IEEE MultiMedia},
  year = {2006},
  volume = {13},
  pages = {44-51},
  number = {2},
  address = {Los Alamitos, CA, USA},
  doi = {10.1109/MMUL.2006.26},
  issn = {1070-986X},
  publisher = {IEEE},
}

@INPROCEEDINGS{RuthruffBurnettRothermel05AnEmpiricalStudyOfFaultLocalizationForEndUserProgrammers,
  author = {Joseph R. Ruthruff and Margaret Burnett and Gregg Rothermel},
  title = {An empirical study of fault localization for end-user programmers},
  booktitle = {Proceedings of the 27th international conference on Software engineering
	(ICSE '05)},
  year = {2005},
  pages = {352--361},
  publisher = {ACM},
  doi = {10.1145/1062455.1062523},
  isbn = {1-59593-963-2},
  location = {St. Louis, MO, USA},
}

@INPROCEEDINGS{SalfnerHoffmannMalek05PredictionBasedSoftwareAvailabilityEnhancement,
  author = {Salfner, F. and Malek, M.},
  title = {Proactive Fault Handling for System Availability Enhancement},
  booktitle = {IEEE Proceedings of the DPDNS Workshop in conjunction with IPDPS
	2005},
  year = {2005},
  address = {Denver, Colorado},
  abstract = {Proactive fault handling combines prevention and repair actions with
	failure prediction techniques. We extend the standard availability
	formula by five key measures: (1) precision and (2) recall assess
	failure prediction while failure handling is gauged by (3) prevention
	probability, (4) repair time improvement, and (5) risk of introducing
	additional failures. We give a short survey of actions that are suited
	to be combined with failure prediction and provide a procedure to
	estimate the five key measures. Altogether, this allows to quantify
	the impact of proactive fault handling on system availability and
	may provide valuable input for system design.},
}

@ARTICLE{Sheers96HPopenViewEventCorrelationServices,
  author = {Kenneth R. Sheers},
  title = {{HP OpenView} Event Correlation Services},
  journal = {Hew\-lett-Pack\-ard Journal: technical information from the laboratories
	of Hew\-lett-Pack\-ard Company},
  year = {1996},
  volume = {47},
  pages = {31--42},
  number = {5},
  month = oct,
  abstract = {When a fault occurs in a telecommunications system, it

			 can cause an event storm of several hundred events per

			 second for tens of seconds. HP OpenView Event

			 Correlation Services (ECS) helps operators interpret

			 such storms. It consists of an ECS Designer for the

			 interactive development of correlation rules and an ECS

			 engine for execution of these rules.},
  issn = {0018-1153},
}

@INPROCEEDINGS{SouleSalamatianTaft05CombiningFilteringAndStatisticalMethodsForAnomalyDetection,
  author = {Augustin Soule and Kav\'{e} Salamatian and Nina Taft},
  title = {Combining filtering and statistical methods for anomaly detection},
  booktitle = {Proceedings of the Internet Measurement Conference 2005 (ICM'05)},
  year = {2005},
  pages = {31--31},
  address = {Berkeley, CA, USA},
  publisher = {USENIX Association},
  location = {Berkeley, CA},
  owner = {voorn},
  pdf = {anomalydetection/SouleSalamatianTaft2005CombiningFilteringAndStatisticalMethodsForAnomalyDetection.pdf},
  timestamp = {2008.02.25},
}

@ARTICLE{SteinderSethi04ASurveyOfFaultLocalizationTechniquesInComputerNetworks,
  author = {Ma{\l}gorzata Steinder and Adarshpal S. Sethi},
  title = {A survey of fault localization techniques in computer networks},
  journal = {Science of Computer Programming},
  year = {2004},
  volume = {53},
  pages = {165--194},
  number = {2},
  month = nov,
  doi = {10.1016/j.scico.2004.01.010},
}

@ARTICLE{SteinderSethi04ProbabilisticFaultLocalizationInCommunicationSystemsUsingBeliefNetworks,
  author = {Ma{\l}gorzata Steinder and Adarshpal S. Sethi},
  title = {Probabilistic fault localization in communication systems using belief
	networks},
  journal = {IEEE\slash ACM Transactions on Networking},
  year = {2004},
  volume = {12},
  pages = {809--822},
  number = {5},
  month = oct,
  issn = {1063-6692},
}

@INPROCEEDINGS{SteinderSethi01ThePresentAndFutureOfEventCorrelationANeedForEndToEndServiceFaultLocalization,
  author = {Ma{\l}gorzata Steinder and Adarshpal S. Sethi},
  title = {The present and future of event correlation: A need for end-to-end
	service fault localization},
  booktitle = {Proceedings of IIIS SCI World Multi-Conference on Systemics, Cybernetics
	and Informatics 2001, Vol. XII},
  year = {2001},
  pages = {124-129},
}

@INPROCEEDINGS{TanMaxion06TheEffectsOfAlgorithmicDiversityOnAnomalyDetectorPerformance,
  author = {Kymie M. C. Tan and Roy A. Maxion},
  title = {The Effects of Algorithmic Diversity on Anomaly Detector Performance},
  year = {2005},
  pages = {216--225},
  publisher = {IEEE Computer Society},
  doi = {10.1109/DSN.2005.91},
}

@INPROCEEDINGS{TanMaxion02Why6DefiningTheOperationalLimitsOfStideAnAnomalyBasedIntrusionDetector,
  author = {Kymie M. C. Tan and Roy A. Maxion},
  title = {``Why 6?'' Defining the Operational Limits of Stide, an Anomaly-Based
	Intrusion Detector},
  booktitle = {Proceedings of the 2002 IEEE Symposium on Security and Privacy (SP'02)},
  year = {2002},
  pages = {188},
  publisher = {IEEE Computer Society},
  isbn = {0-7695-1543-6},
}

@MISC{Tiffany02ASurveyOfEventCorrelationTechniquesAndRelatedTopics,
  author = {Michael Tiffany},
  title = {A Survey of Event Correlation Techniques and Related Topics},
  year = {2002},
  url = {citeseer.ist.psu.edu/tiffany02survey.html},
}

@ARTICLE{ValeurVignaKruegelKemmerer04AComprehensiveApproachToIntrusionDetectionAlertCorrelation,
  author = {F. Valeur and G. Vigna and C.Kruegel and R. Kemmerer},
  title = {{A Comprehensive Approach to Intrusion Detection Alert Correlation}},
  journal = {IEEE Transactions on Dependable and Secure Computing},
  year = {2004},
  volume = {1},
  pages = {146--169},
  number = {3},
  month = {July-September},
}

@ARTICLE{VerissimoRaynal00TimeInDistributedSystemModelsAndAlgorithms,
  author = {Paulo Ver\'{\i}ssimo and Michel Raynal},
  title = {Time in Distributed System Models and Algorithms},
  journal = {Lecture Notes in Computer Science, Advances in Distributed Systems},
  year = {2000},
  volume = {1752},
  pages = {1--32},
  editor = {S. Krakowiak and S. Shrivastava},
  publisher = {Springer-Verlag},
}

@INPROCEEDINGS{VignaKemmerer98NetStatANetworkBasedIntrusionDetectionApproach,
  author = {G. Vigna and R. A. Kemmerer},
  title = {NetSTAT: A Network-Based Intrusion Detection Approach},
  booktitle = {Proceedings of the 14th Annual Computer Security Applications Conference
	ACSAC'98},
  year = {1998},
  pages = {25},
  address = {Washington, DC, USA},
  publisher = {IEEE Computer Society},
  isbn = {0-8186-8789-4},
}

@ARTICLE{WangXuPeng07ConceptualDesignOfRemoteMonitoringAndFaultDiagnosisSystems,
  author = {Chengen Wang and Lida Xu and Wuliang Peng},
  title = {Conceptual design of remote monitoring and fault diagnosis systems},
  journal = {Inf. Syst.},
  year = {2007},
  volume = {32},
  pages = {996--1004},
  number = {7},
  abstract = {Condition monitoring and fault diagnosis are of fundamental importance
	for many industrial systems. In the last decade, substantial research
	efforts have been made on the surveillance and diagnosis systems
	for different types of equipment, with the approach of integrating
	information technologies and intelligent computing methods. This
	paper presents the conceptual design of a distributed information
	system of condition monitoring and fault diagnosis for a growing
	number of gas turbine-based power generation systems. Each individual
	information system that monitors a specific gas turbine system, locally
	deployed in a power plant, is linked to another information system,
	deployed at the manufacturer's site, which oversees all the gas turbine
	systems in parallel. The systems are constructed on the basis of
	COM components, which are conceptually separated into three tiers.
	Subsequently, this paper proceeds to present a generic business domain
	model with components encapsulating physical entities of interest.
	Finally, this paper addresses the interactions among components,
	which considerably affect the performance of the system including
	efficiency and effectiveness. It has been identified that both asynchronous
	and synchronous communication mechanisms are required for exchanging
	information for different scenarios. COM+ services are also required
	for supporting object pooling, transaction coordination, and security
	control.},
  address = {Oxford, UK, UK},
  doi = {10.1016/j.is.2006.10.004},
  issn = {0306-4379},
  publisher = {Elsevier Science Ltd.},
}

@INPROCEEDINGS{WangPlattChenZhangWang04AutomaticMisconfigurationTroubleshootingWithPeerPressure,
  author = {Helen J. Wang and John C. Platt and Yu Chen and Ruyun Zhang and Yi-Min
	Wang},
  title = {Automatic misconfiguration troubleshooting with {P}eer{P}ressure},
  booktitle = {Proceedings of the 6th Symposium on Opearting Systems Design \& Implementation
	(OSDI'04)},
  year = {2004},
  pages = {17--17},
  publisher = {USENIX Association},
}

@ARTICLE{WardGlynnRichardson98InternetServicePerformanceFailureDetection,
  author = {Amy Ward and Peter Glynn and Kathy Richardson},
  title = {Internet service performance failure detection},
  journal = {SIGMETRICS Perform. Eval. Rev.},
  year = {1998},
  volume = {26},
  pages = {38--43},
  number = {3},
  doi = {http://doi.acm.org/10.1145/306225.306237},
  issn = {0163-5999},
  publisher = {ACM},
}

@INPROCEEDINGS{WarrenderForrestPearlmutter99DetectingIntrusionsUsingSystemCallsAlternativeDataModels,
  author = {Christina Warrender and Stephanie Forrest and Barak A. Pearlmutter},
  title = {Detecting Intrusions using System Calls: Alternative Data Models},
  booktitle = {{IEEE} Symposium on Security and Privacy},
  year = {1999},
  pages = {133-145},
  location = {Oakland, CA},
}

@INPROCEEDINGS{WilliamsPertetNarasimhan07TiresiasBlackboxFailurePredicationInDistributedSystems,
  author = {Andrew W. Williams and Soila M. Pertet and Priya Narasimhan},
  title = {Tiresias: Black-Box Failure Prediction in Distributed Systems},
  booktitle = {Proceedings of the 21th International Parallel and Distributed Processing
	Symposium},
  year = {2007},
  pages = {1-8},
  month = mar,
  publisher = {IEEE},
  doi = {10.1109/IPDPS.2007.370345},
}

@INPROCEEDINGS{WuShao05NetworkAnomalyDetectionUsingTimeSeriesAnalysis,
  author = {Qingtao Wu and Zhiqing Shao},
  title = {Network Anomaly Detection Using Time Series Analysis},
  booktitle = {Proceedings of the Joint International Conference on Autonomic and
	Autonomous Systems and International Conference on Networking and
	Services (ICAS/ICNS'05)},
  year = {2005},
  address = {Los Alamitos, CA, USA},
  publisher = {IEEE Computer Society},
  doi = {10.1109/ICAS-ICNS.2005.69},
  isbn = {0-7695-2450-8},
}

@INPROCEEDINGS{XuDuChapin04ContextSensitiveAnomalyMonitoringOfProcessControlFlowToDetectMimicryAttacksAndImpossiblePaths,
  author = {Haizhi Xu and Wenliang Du and Steve J. Chapin},
  title = {Context Sensitive Anomaly Monitoring of Process Control Flow to Detect
	Mimicry Attacks and Impossible Paths},
  year = {2004},
}

@INPROCEEDINGS{YuanLaoWenLiZhangWangMa06AutomatedKnownProblemDiagnosisWithEventTraces,
  author = {Chun Yuan and Ni Lao and Ji-Rong Wen and Jiwei Li and Zheng Zhang
	and Yi-Min Wang and Wei-Ying Ma},
  title = {Automated Known Problem Diagnosis with Event Traces},
  booktitle = {EuroSys 2006},
  year = {2006},
}

@TECHREPORT{ZhandCherkasovaMatthewsGreeneSmirni07RCapriccioACapacityPlanningAndAnomalyDetectionToolForEnterpriseServicesWithLiveWorkloads,
  author = {Qi Zhang and Lucy Cherkasova and Guy Matthews and Wayne Greene and
	Evgenia Smirni},
  title = {R-Capriccio: A Capacity Planning and Anomaly Detection Tool for Enterprise
	Services with Live Workloads},
  institution = {Enterprise Systems and Software Laboratory, HP Laboratories Palo
	Alto},
  year = {2007},
  number = {HPL-2007-87},
  abstract = {As the complexity of IT systems increases, performance management
	and capacity planning become the largest and most difficult expenses
	to control. New methodologies and modeling techniques that explain
	large-system behavior and help predict their future performance are
	now needed to effectively tackle the emerging performance issues.
	With the multi-tier architecture paradigm becoming an industry standard
	for developing scalable client-server applications, it is important
	to design effective and accurate performance prediction models of
	multi-tier applications under an enterprise production environment
	and a real workload mix. To accurately answer performance questions
	for an existing production system with a real workload mix, we design
	and implement a new capacity planning and anomaly detection tool,
	called RCapriccio, that is based on the following three components:
	i) a Workload Profiler that exploits locality in existing enterprise
	web workloads and extracts a small set of most popular, core client
	transactions responsible for the majority of client requests in the
	system; ii) a Regression-based Solver that is used for deriving the
	CPU demand of each core transaction on a given hardware; and iii)
	an Analytical Model that is based on a network of queues that models
	a multitier system. To validate R-Capriccio, we conduct a detailed
	case study using the access logs from two heterogeneous production
	servers that represent customized client accesses to a popular and
	actively used HP Open View Service Desk application.},
  url = {http://www.hpl.hp.com/techreports/2007/HPL-2007-87.pdf},
}

@article{StewartKellyZhang07ExploitingNonstationarityForPerformancePrediction,
 author = {Christopher Stewart and Terence Kelly and Alex Zhang},
 title = {Exploiting nonstationarity for performance prediction},
 journal = {SIGOPS Oper. Syst. Rev.},
 volume = {41},
 number = {3},
 year = {2007},
 issn = {0163-5980},
 pages = {31--44},
 doi = {10.1145/1272998.1273002},
 publisher = {ACM},
 }



@inproceedings{Kelly05DetectingPerformanceAnomaliesInGlobalApplications,
 author = {Terence Kelly},
 title = {Detecting performance anomalies in global applications},
 booktitle = {WORLDS'05: Proceedings of the 2nd conference on Real, Large Distributed Systems},
 year = {2005},
 pages = {8--8},
 location = {San Francisco, CA},
 publisher = {USENIX Association},
 address = {Berkeley, CA, USA},
 }

@INPROCEEDINGS{ZhangCohenGoldszmidtSymonsFox05EnsemblesOfModelsForAutomatedDiagnosisOfSystemPerformanceProblems,
  author = {Steve Zhang and Ira Cohen and Mois{\'e}s Goldszmidt and Julie Symons
	and Armando Fox},
  title = {Ensembles of Models for Automated Diagnosis of System Performance
	Problems},
  booktitle = {Proceedings of the 2005 International Conference on Dependable Systems
	and Networks (DSN'05)},
  year = {2005},
  pages = {644--653},
  publisher = {IEEE Computer Society},
  doi = {10.1109/DSN.2005.44},
  isbn = {0-7695-2282-3},
}

@INPROCEEDINGS{ZhangGuptaGupta06LocatingFaultsThroughAutomatedPredicateSwitching,
  author = {X. Zhang and N. Gupta and R. Gupta},
  title = {Locating Faults Through Automated Predicate Switching},
  booktitle = {Proceedings of the 28th International Conference on Software Engineering
	(ICSE '06)},
  year = {2006},
  month = {may},
  publisher = {IEEE/ACM},
  location = {Shanghai, China},
}

@ARTICLE{Swets88MeasuringTheAccuracyOfDiagnosticSystems,
  author = {{Swets}, J.~A.},
  title = {{Measuring the Accuracy of Diagnostic Systems}},
  journal = {Science},
  year = {1988},
  volume = {240},
  pages = {1285--1293},
  number = {4856},
  month = jun,
  doi = {10.1126/science.3287615},
}

@BOOK{PaladeBocanialaJain06ComputationalIntelligenceInFaultDiagnosis,
  title = {Computational Intelligence in Fault Diagnosis},
  publisher = {Springer},
  year = {2006},
  editor = {Palade, Vasile and Bocaniala, Cosmin Danut and Jain, Lakhmi C.},
  series = {Advanced Information and Knowledge Processing},
  booktitle = {Computational Intelligence in Fault Diagnosis},
  isbn = {978-1-184628-343-7},
  pages = {362},
}

***********************************
* Masking vs Non-masking FT
**********************************

@inproceedings{Randell75SystemStructureForSoftwareFaultTolerance,
 author = {B. Randell},
 title = {System structure for software fault tolerance},
 booktitle = {Proceedings of the international conference on Reliable software},
 year = {1975},
 pages = {437--449},
 location = {Los Angeles, California},
 }

@Article{Mariani03AFaultTaxonomyForComponentBasedSoftware,
  title =	"A Fault Taxonomy for Component-Based Software",
  author =	"Leonardo Mariani",
  journal =	"Electr. Notes Theor. Comput. Sci",
  year = 	"2003",
  number =	"6",
  volume =	"82",
}

@article{DuraesMadeira06EmulationOfSoftwareFaultsAFieldDataStudyAndAPracticalApproach,
author = {Jo\~{a}o A. Dur\~{a}es and Henrique S. Madeira},
title = {Emulation of Software Faults: A Field Data Study and a Practical Approach},
journal = {IEEE Transactions on Software Engineering},
volume = {32},
number = {11},
year = {2006},
issn = {0098-5589},
pages = {849-867},
doi = {10.1109/TSE.2006.113},
publisher = {IEEE Computer Society},
address = {Los Alamitos, CA, USA},
}

@article{MoraesBarbosaDuraesMendesMartinsMadeira06InjectionOfFaultsAtComponentInterfacesAndInsideTheComponentCodeAreTheyEquivalent,
author = {R. Moraes and R. Barbosa and J. DurÃ£es and N. Mendes and E. Martins and H. Madeira},
title = {Injection of faults at component interfaces and inside the component code: are they equivalent?},
journal = {Proceedings of the Sixth European Dependable Computing Conference (EDCC'06)},
year = {2006},
isbn = {0-7695-2648-9},
pages = {53-64},
doi = {10.1109/EDCC.2006.16},
publisher = {IEEE Computer Society},
address = {Los Alamitos, CA, USA},
}

@article{MartinsRubiraLeme02JacaAReflectiveFaultInjectionToolBasedOnPatterns,
author = {Eliane Martins and Cecilia M.F. Rubira and Nelson G.M. Leme},
title = {Jaca: A Reflective Fault Injection Tool Based on Patterns},
journal = {dsn},
volume = {00},
year = {2002},
isbn = {0-7695-1597-5},
pages = {483},
doi = {10.1109/DSN.2002.1028934},
publisher = {IEEE Computer Society},
address = {Los Alamitos, CA, USA},
}

MoraesMartins03JacaASoftwareFaultInjectionTool.pdf

@inproceedings{ArthoBiereHoniden06EnforcerEfficientFailureInjection,
  author    = {Cyrille Artho and
               Armin Biere and
               Shinichi Honiden},
  title     = {Enforcer - Efficient Failure Injection.},
  booktitle = {FM},
  year      = {2006},
  pages     = {412-427},
  doi        = {10.1007/11813040_28},
  crossref  = {MisraNipkowSekerinski06},
}

@proceedings{MisraNipkowSekerinski06,
  editor    = {Jayadev Misra and
               Tobias Nipkow and
               Emil Sekerinski},
  booktitle     = {Proceedings of the 14th International Symposium on
               Formal Methods (FM'2006)},
  publisher = {Springer},
  series    = {Lecture Notes in Computer Science},
  volume    = {4085},
  year      = {2006},
  isbn      = {3-540-37215-6},
}


@InProceedings{Maxion90AnomalyDetectionForDiagnosis,
  author =	"Roy A. Maxion",
  title =	"Anomaly Detection for Diagnosis",
  pages =	"20--27",
  ISBN = 	"0-8186-2051-X",
  editor =	"Brian Randell",
  booktitle =	"Proceedings of the 20th International Symposium on
		 Fault-Tolerant Computing ({FTCS} '90)",
  month =	jun,
  year = 	"1990",
  publisher =	"IEEE",
  doi = {10.1109/FTCS.1990.89362}
}

@InProceedings{HuangKintalaKolettisFulton95SoftwareRejuvenation,
  author =	"Huang, Y. and Kintala, C. and Kolettis, N. and Fulton, N.",
  title =	"Software Rejuvenation: Analysis, Module and Applications",
  booktitle =	"Proceedings of the 25th Symposium on Fault Tolerant Computing, FTCS 25",
  year = 	"1995",
  publisher =	"IEEE",
}



@inproceedings{MaxionOlszewski93DetectionAndDiscriminationOfInjectedNetworkFaults,
  author =	"Roy A. Maxion and Robert T. Olszewski",
  title =	"Detection and Discrimination of Injected Network Faults",
  pages =	"198--207",
  booktitle = "Digest of Papers of the 23rd Internation Symposium on Fault-Tolerant Computing",
  year = 	"1993",
  publisher =	"IEEE",
}



@Book{LeeAnderson90FaultTolerancePrinciplesAndPractice,
  author =	"Peter A. Lee and Thomas Anderson",
  title =	"Fault Tolerance : Principles and Practice",
  series =	"Dependable computing and fault-tolerant systems",
  publisher ="Springer-Verlag",
  address =	"Berlin ; New York",
  year = 	"1990",
  edition = {2nd},
}


@Article{BarborakMalekDahbura93TheConsensusProblemInFaultTolerantComputing,
  author =	"M. Barborak and M. Malek and A. Dahbura",
  journal =	"{ACM} Computing Surveys",
  keywords =	"consensus, byzantine agreement, distributed computing,
		 fault-tolerance",
  number =	"2",
  pages =	"171--220",
  title =	"The Consensus Problem in Fault-Tolerant Computing",
  URL =  	"http://www.acm.org/pubs/articles/journals/surveys/1993-25-2/p171-barborak/p171-barborak.pdf",
  volume =	"25",
  year = 	"1993",
}

@article{1113843,
 author = {George A. Reis and Jonathan Chang and Neil Vachharajani and Ram Rangan and David I. August and Shubhendu S. Mukherjee},
 title = {Software-controlled fault tolerance},
 journal = {ACM Trans. Archit. Code Optim.},
 volume = {2},
 number = {4},
 year = {2005},
 issn = {1544-3566},
 pages = {366--396},
 doi = {10.1145/1113841.1113843},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }

@inproceedings{DBLP:conf/ifip/AvizienisLR04,
  author    = {Algirdas Avizienis and
               Jean-Claude Laprie and
               Brian Randell},
  title     = {Dependability and its threats - A taxonomy.},
  booktitle = {IFIP Congress Topical Sessions},
  year      = {2004},
  pages     = {91-120},
  crossref  = {DBLP:conf/ifip/2004bis},
}

@proceedings{IFIP04,
  editor    = {Ren{\'e} Jacquart},
  booktitle = {Building the Information Society, IFIP 18th World Computer
               Congress, Topical Sessions},
  booktitle = {IFIP Congress Topical Sessions},
  publisher = {Kluwer},
  year      = {2004},
  month = {aug}, 
  isbn      = {1-4020-8156-1},
}



@Article{Randell00FacingUpFaults,
  author =	{Brian Randell},
  title =	"{Turing Memorial Lecture}: Facing Up to Faults",
  journal =	"The Computer Journal",
  volume =	"43",
  number =	"2",
  pages =	"95--106",
  year = 	"2000",
  URL =  	"http://www3.oup.co.uk/computer_journal/hdb/Volume_43/Issue_02/430095.pdf",
  annote =	"A wise and cunning look back at the central problems
		 in fault tolerance from the viewpoint of one of the big
		 men. Mentions Babbage's concern about correct
		 mathematical navigation tables (see also
		 \cite{Bowen:1993:SCS}) and his first ideas of n version
		 programming. Looks on the necessity of fault-tolerant
		 computing (``the more dependable computing systems
		 become, the more dependence is placed on them'').
		 Recalls concepts from \cite{Laprie92DependabilityBasicConceptsAndTerminology} and
		 explicitly notes that the quality of fault-tolerance
		 depends heavily on the quality of the fault assumption
		 (p.100). Quote: ``Yet all too often, inadequate
		 attention i paid to identifying and justifying a set of
		 fault assumptions''. Notes the problems with feature
		 interaction and non-interference when it comes to
		 compositionality. Quote: ``All fault tolerance involves
		 the use of redundancy---of representation and/or
		 activity---whose consistency can be checked.'' Notes
		 that notions of diversity are not very well understood
		 and that ad hoc standards in operating systems are a
		 problem when it comes to fault tolerance through system
		 diversity.",
}

@Article{AroraGouda93ClosureAndConvergenceAFoundationOfFaultTolerantComputing,
  title =   "Closure and Convergence: {A} Foundation of
         Fault-Tolerant Computing",
  author =  "Anish Arora and Mohamed G. Gouda",
  journal = "IEEE Transactions on Software Engineering",
  pages =   "1015--1027",
  month =   nov,
  year =    "1993",
  doi = "10.1109/32.256850",
  abstract = { The authors formally define what it means for a system to tolerate a class of faults. The definition consists of two conditions. The first is that if a fault occurs when the system state is within the set of legal states, the resulting state is within some larger set and, if faults continue to occur, the system state remains within that larger set (closure). The second is that if faults stop occurring, the system eventually reaches a state within the legal set (convergence). The applicability of the definition for specifying and verifying the fault-tolerance properties of a variety of digital and computer systems is demonstrated. Using the definition, the authors obtain a simple classification of fault-tolerant systems. Methods for the systematic design of such systems are discussed.},
  volume =  "19",
  number =  "11",
}

@incollection{VerissimoNevesCorreia03intrusionTolerantArchitecturesConceptsAndDesign,
    author = {P. E. Ver\'{\i}ssimo and N. F. Neves and M. P. Correia},
    title = {Intrusion-Tolerant Architectures: Concepts and Design},
    crossref ={LemosGacekRomanovsky03ArchitectingDependableSystems}
}

@article{AroraKulkarni98DesigningMaskingFaultToleranceViaNonmaskingFaultTolerance,
 author = {Anish Arora and Sandeep S. Kulkarni},
 title = {Designing Masking Fault-Tolerance via Nonmasking Fault-Tolerance},
 journal = {IEEE Trans. Softw. Eng.},
 volume = {24},
 number = {6},
 year = {1998},
 issn = {0098-5589},
 pages = {435--450},
 doi = {10.1109/32.689401},
 publisher = {IEEE Press},
 address = {Piscataway, NJ, USA},
 annote = {They present formal definitions for fault tolerance (non-masking and masking) and two level approach to achieve masking fault tolerance with non-masking fault tolerance. There intuitive definition of nonmasking fault-tolerance uses the expression ``faults stop occurencing''. I thing this expression in combination with common definitions of faults. Also in the remaining parts of the paper, no distinction is made between fault, error, and failure. For me it is Masking and Nonmasking is related to failures an a distinction between faults and failures is essential.}
 }



@book{Laprie92DependabilityBasicConceptsAndTerminology,
 editor = {J.-C. Laprie and A. Avi\v{z}ienis and H. Kopetz},
 title = {Dependability: Basic Concepts and Terminology},
 year = {1992},
 isbn = {0387822968},
 pages = {265},
 publisher = {Springer-Verlag},
 series = {Dependable Computing and Fault Tolerance},
 volume = {5}
 }

@inproceedings{Beaudry77PerformanceRelatedRelaibilityMeasuresForComputingSystems,
 author = {M. Danielle Beaudry},
 title = {Performance Related Reliability Measures For Computing Systems},
 booktitle = {Proceedings of the Sevens International Symposium on Fault-Tolerant Computing (FTCS '77) (Reprint in Proceedings of FTCS-25 Volume III, 1996)},
 year = {1977},
 pages = {16--21},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
 }

@inproceedings{Parnas76ResponseToUndesiredEventsInSoftwareSystems,
 author       = {D. L. Parnas and H. W\"{u}rges},
 title        = {Response to undesired events in software systems},
 booktitle    = {ICSE '76: Proceedings of the 2nd international conference on software engineering},
 year         = {1976},
 pages        = {437--446},
 location     = {San Francisco, California, United States},
 publisher    = {IEEE Computer Society Press},
 address      = {Los Alamitos, CA, USA},
}

@Article{ArlatKanounLaprie90DependabilityModelingAndEvaluationOfSoftwareFaultTolerantSystems,
  author =	"J. Arlat and K. Kanoun and J.-C. Laprie",
  title =	"Dependability Modeling and Evaluation of Software
		 Fault-Tolerant Systems",
  journal =	"IEEE Transactions on Computers",
  volume =	"39",
  number =	"4",
  pages =	"504--513",
  month =	apr,
  year = 	"1990",
  keywords =	"Rreg, dependable distributed computing, modeling
		 techniques, reliability modeling,",
  abstract =	"Models that describe reliability and safety in
		 software-fault tolerant architectures, including
		 recovery blocks and N-version programming. The studies
		 summarized here consider both independent and related
		 faults and methods for combining the approaches to
		 handle multiple faults. The results of the modeling
		 indicate that related faults between the variants in
		 multiversion architectures have a significant impact on
		 safety, while the nesting of recovery-based
		 architectures shows less improvement in reliability
		 than other approaches. Another approach analyzed was
		 the discarding of a variant that frequently disagrees
		 with the others in a multiversion architecture; the
		 study indicated that this reduction in functionality is
		 always beneficial with respect to safety, and to
		 reliability in the case where independent faults
		 dominate.",
  doi = "10.1109/12.54843 ",
  
}

@article{ChandraToueg96UnreliableFailureDetectorsForReliableDistributedSystems,
 author = {Tushar Deepak Chandra and Sam Toueg},
 title = {Unreliable failure detectors for reliable distributed systems},
 journal = {J. ACM},
 volume = {43},
 number = {2},
 year = {1996},
 issn = {0004-5411},
 pages = {225--267},
 doi = {10.1145/226643.226647},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }

@Article{CristianAghiliStrongDolev95AtomicBroadcastFromSimpleMessageDiffusionToByzantineAgreement,
  title =	"Atomic Broadcast: From Simple Message Diffusion to
		 Byzantine Agreement",
  author =	"Flaviu Cristian and Houtan Aghili and H. Raymond
		 Strong and Danny Dolev",
  journal =	"Inf. Comput",
  year = 	"1995",
  month =	apr,
  number =	"1",
  volume =	"118",
  bibdate =	"2003-11-20",
  bibsource =	"http://theory.lcs.mit.edu/~iandc/ic95.html",
  pages =	"158--179",
  annote = "revisited version of the 1985 paper. The term failure is now used instead of the term fault."
}

@book{AndersonLee81FaultTolerancePrinciplesAndPractice,
 editor = {T. Anderson, and P. Lee},
 title = {Fault-Tolerance: Principles and Practice},
 year = {1981},
 publisher = {Prentice-Hall Int. Englewood Cliffs, NJ.},
 }

%Timo owns this book
@Book{Jalote94FaultToleranceInDistributedSystems,
  author =       {Pankaj Jalote},
  title =        {Fault tolerance in distributed systems},
  publisher =    {Prentice-Hall},
  year =         1994,
  annote =       {definition of terms reliability and availability according to Trivedi}
}

@TechReport{CowanDelcambraLeMeurLiuMaireMcNameeWalpole98AdaptationSpaceSurvivingNonMaskableFailures,
  type =    "Technical Report",
  number =  "CSE-98-013",
  institution =  "Oregon Graduate Institute of Science and Technology",
  title =   "Adaptation Space: Surviving Non-maskable Failures",
  month =   may # " 3,",
  year =    "1998",
  bibdate = "August 12, 98",
  URL =     "ftp://cse.ogi.edu/pub/tech-reports/1998/98-013.ps.gz",
  author =  "Crispin Cowan and Lois Delcambre and Anne-Francoise
         LeMeur and Ling Liu and David Maier and Dylan McNamee
         and Michael Miller and Calton Pu and Perry Wagle and
         Jonathan Walpole",
  abstract =    "Some failures cannot be masked by redundancies,
         because an unanticipated situation occurred, because
         fault-tolerance measures were not adequate, or because
         there was a security breach (which is not amenable to
         replication). Applications that wish to continue to
         offer some service despite non-maskable failure must
         adapt to the loss of resources. When numerous
         combinations of non-maskable failure modes are
         considered, the set of possible adaptations becomes
         complex. This paper presents adaptation spaces, a
         formalism for navigating among combinations of
         adaptations. An adaptation space describes a collection
         of possible adaptations of a software component or
         system, and provides a uniform way of viewing a group
         of alternative software adaptations. Adaptation spaces
         describe the different means for monitoring the
         conditions that different adaptations depend on, and
         the particular configurations through which an adaptive
         application navigate. Our goal is to use adaptation
         spaces to provide survivable services to applications
         despite non-maskable failures such as malicious
         attacks. We present the basic concepts concerning
         adaptation spaces, with examples. We then present a
         formal model for reasoning about and selecting
         alternative adaptations, allowing developers of
         survivable application to automate their system's
         adaptive behavior.",
}






***********************************
* fault tolerance and intrusion tolerance
***********************************

@Article{WensleyLamportGoldbergGreenLevittMelliarSmithShostakWeinstock78SIFTDesignAndAnalysisOfAFaultTolerantComputerForAircraftControl,
	author = {J. H. Wensley and L. Lamport and J. Goldberg and M. W. Green and K. N. Levitt and P. M. Melliar-Smith and R. E. Shostak and C. B. Weinstock},
	title = {{SIFT}: Design and Analysis of a Fault-Tolerant Computer for Aircraft Control},
	journal = {Proceedings of the IEEE},
	volume = {66},
	number = {10},
	month = oct,
	year = {1978},
	pages = {1240--1255},
}

@article{Cristian82ExceptionHandlingAndSoftwareFaultTolerance,
  author    = {Flaviu Cristian},
  title     = {Exception Handling and Software Fault Tolerance},
  journal   = {IEEE Transactions on Computers},
  volume    = {31},
  number    = {6},
  year      = {1982},
  pages     = {531--540}
}

@inproceedings{DeswartePowell04IntrusionToleranceForInternetApplications,
  AUTHOR    = "Deswarte, Y. and  Powell, D. ",
  TITLE     = "{Intrusion tolerance for Internet applications}",
  YEAR      = 2004,
  MONTH     = "aug--sep",
  BOOKTITLE = {Proceedings of the Third International Symposium on Network Computing and Applications (NCA 2004)},
  PUBLISHER = {IEEE},
  DOI       = "10.1109/NCA.2004.1347758",
  PAGES     = {35--36},
  ABSTRACT  ="The Internet has become essential to most enterprises and many private individuals. However, both the network and computer systems connected to it are still too vulnerable and attacks are becoming evermore frequent. To face this situation, traditional security techniques are insufficient and fault tolerance techniques are becoming increasingly cost-effective. Nevertheless, intrusions are very special faults, and this has to be taken into account when selecting the fault tolerance techniques."
}

@inproceedings{DeswarteKanounLaprie98DiversityAgainstAccidentalAndDeliberateFaults,
  AUTHOR    = "Deswarte, Y. and  Kanoun, K. and  Laprie, J.-C.",
  TITLE     = "{Diversity against accidental and deliberate faults}",
  YEAR      = 1998,
  MONTH     = "jul--nov",
  BOOKTITLE = {Proceedings of the conference on Computer Security, Dependability and Assurance: From Needs to Solutions},
  PUBLISHER = {IEEE},
  DOI       = "10.1109/CSDA.1998.798364",
  PAGES     = {171--181},
  ABSTRACT  ="The paper is aimed at examining the relationship between the three topics of the workshops that gave rise to this book: security, fault tolerance, and software assurance. Those three topics can be viewed as different facets of dependability. The paper focuses on diversity, as a desirable approach for addressing the classes of faults that underlay all these topics, i.e., design faults and intrusion faults."
}



@inproceedings{SaidaneDeswarteNicomette03AnIntrusionTolerantArchitectureForDynamicContentInternetServers,
 author = {Ayda Saidane and Yves Deswarte and Vincent Nicomette},
 title = {An intrusion tolerant architecture for dynamic content internet servers},
 booktitle = {SSRS '03: Proceedings of the 2003 ACM workshop on Survivable and self-regenerative systems},
 year = {2003},
 isbn = {1-58113-784-2},
 pages = {110--114},
 location = {Fairfax, VA},
 doi = {10.1145/1036921.1036934},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }


***********************************
* fault detection
***********************************
 @inproceedings{IdeKashima04EigenspaceBasedAnomalyDetectionInComputerSystems,
 author = {Tsuyoshi Id\'e and Hisashi Kashima},
 title = {Eigenspace-based anomaly detection in computer systems},
 booktitle = {Proceedings of the international conference on Knowledge discovery and data mining (KDD '04)},
 year = {2004},
 isbn = {1-58113-888-9},
 pages = {440--449},
 location = {Seattle, WA, USA},
 doi = {10.1145/1014052.1014102},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }


*********************************
* Fault Injection
*********************************

@inproceedings{GuethoffSieh95CombiningSoftwareImplementedAndSimulationBasedFaultInjectionIntoASingleFaultInjectionMethod,
 author = {J. G\"uthoff and V. Sieh},
 title = {Combining Software-Implemented and Simulation-Based Fault Injection into a Single Fault Injection Method},
 booktitle = {Proceedings of the Twenty-Fifth International Symposium on Fault-Tolerant Computing (FTCS '95)},
 year = {1995},
 pages = {196--206},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
 }

*********************************
* classification of faults (technical)
*********************************


*********************************
* classification of faults (from market research view)
*********************************

********************************
* distributed fault tolerance
********************************

@Book{Echt90Fehlertoleranzverfahren,
  author =	"K. Echtle",
  publisher = "Springer-Verlag",
  series =	"Studienreihe Informatik",
  title =	"Fehlertoleranzverfahren",
  year = 	"1990",
}

@inproceedings{KuhlReddy80DistributedFaultToleranceForLargeMultiprocessorSystems,
 author = {J. G. Kuhl and S. M. Reddy},
 title = {Distributed fault-tolerance for large multiprocessor systems},
 booktitle = {ISCA '80: Proceedings of the 7th annual symposium on Computer Architecture},
 year = {1980},
 pages = {23--30},
 location = {La Baule, United States},
 doi = {10.1145/800053.801905},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }

*********************************
* error propagation
*********************************


@inproceedings{SomaniTrivedi97ACacheErrorPropagationModel,
 author = {Somani, A.K. and Trivedi, K.S.},
 title = {A Cache Error Propagation Model},
 booktitle = {Proceedings of the Pacific Rim International Symposium on Fault-Tolerant Systems},
 year = {1997},
 pages = {15--21},
 location = { Taipei, Taiwan},
 doi = {10.1109/PRFTS.1997.640119},
 publisher = {IEEE}
 }

@inproceedings{JohanssonSuri05ErrorPropagationProfilingOfOperatingSystems,
 author = {Johansson, A. and Suri, N.},
 title = {Error propagation profiling of operating systems},
 booktitle = {Proceedings of the International Conference on Dependable Systems and Networks DSN 2005},
 year = {2005},
 pages = {86--95},
 doi = {10.1109/DSN.2005.45},
 publisher = {IEEE}
 }



*********************************
* Missing
*********************************
@InProceedings{AvreskyArlatLaprieCrouzet92FaultInjectionForTheFormalTestingOfFaultTolerance,
  author =	"D. Avresky and J. Arlat and J.-C. Laprie and Y.
		 Crouzet",
  title =	"Fault Injection for the Formal Testing of Fault
		 Tolerance",
  pages =	"345--355",
  ISBN = 	"0-8186-2875-8",
  editor =	"Dhiraj K. Pradhan",
  booktitle =	"Proceedings of the 22nd Annual International Symposium
		 on Fault-Tolerant Computing ({FTCS} '92)",
  address =	"Boston, MA",
  month =	jul,
  year = 	"1992",
  publisher =	"IEEE Computer Society Press",
}


******************************
* SE-Research
******************************

@inproceedings{Shaw03WritingGoodSoftwareEngineeringResearchPapersMinitutorial,
 author = {Mary Shaw},
 title = {Writing good software engineering research papers: minitutorial},
 booktitle = {ICSE '03: Proceedings of the 25th International Conference on Software Engineering},
 year = {2003},
 isbn = {0-7695-1877-X},
 pages = {726--736},
 location = {Portland, Oregon},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
 }

    

@article{GrahamKesslerMcKusick82GprofACallGraphExecutionProfiler,
    author = "Susan L. Graham and Peter B. Kessler and Marshall K. McKusick",
    title = "gprof: a Call Graph Execution Profiler",
    journal = "{SIGPLAN} {N}otes",
    pages = "120-126",
    year = "1982",
	publisher = {ACM},
	volume = {17},
	number = {6},
	doi = {10.1145/872726.806987},
    }
@TechReport{Basili92SoftwareModelingAndMeasurementTheGoalQuestionMetricParadigm,
  title =	"Software Modeling and Measurement: The 		 Goal/Question/Metric Paradigm",
  author =	"Victor R. Basili",
  year = 	"1992",
  month =	sep,
  institution = {University of Maryland (College Park, MD)},
  number = {CS-TR-2956},
}

@InCollection{BasiliCaldieraRombach94GoalQuestionMetricParadigm,
  author =	"Victor R. Basili and Gianluigi Caldiera and H. Dieter
		 Rombach",
  booktitle =	"Encyclopedia of Software Engineering",
  title =	"{G}oal {Q}uestion {M}etric {P}aradigm",
  editor =	"John J. Marciniak",
  publisher =	"John Wiley \& Sons",
  year = 	"1994",
  pages =	"528--532",
  volume =	"1",
}

@inproceedings{GieseckeBornholdHasselbring07MiddlewareInducedArchitecturalStyleModellingForArchitectureExploration,
       booktitle = {Sixth Working IEEE/IFIP Conference on Software Architecture (WICSA 2007)},
           title = {Middleware-induced Architectural Style Modelling for Architecture Exploration},
          author = {Simon Giesecke and Johannes Bornhold and Wilhelm Hasselbring},
       publisher = {IEEE Computer Society Press},
            year = {2007},
           pages = {21--24},
         journal = {Working IEEE/IFIP Conference on Software},
            isbn = {978-0-7695-2744-4}
}


%Reactor pattern
@book{Rising01DesignPatternsInCommunicationsSoftware,
 editor = {Linda Rising},
 title = {Design patterns in communications software},
 year = {2001},
 isbn = {0-521-79040-9},
 publisher = {Cambridge University Press},
 address = {New York, NY, USA},
 }

 @inproceedings{Bell99TheConceptOfDynamicAnalysis,
 author = {Thoms Bell},
 title = {The concept of dynamic analysis},
 booktitle = {ESEC/FSE-7: Proceedings of the 7th European software engineering conference},
 year = {1999},
 isbn = {3-540-66538-2},
 pages = {216--234},
 publisher = {Springer-Verlag},
 address = {London, UK},
 }

@inproceedings{McGavinWrightMarshall06VisualisationsOfExecutionTracesAnInteractivePluginBasedVisualisationTool,
 author = {Mike McGavin and Tim Wright and Stuart Marshall},
 title = {Visualisations of execution traces (VET): an interactive plugin-based visualisation tool},
 booktitle = {Proceedings of the 7th Australasian User interface conference (AUIC'06)},
 year = {2006},
 isbn = {1-920682-32-5},
 pages = {153--160},
 publisher = {Australian Computer Society, Inc.},
 }

@Manual{RDevelopmentCoreTeam07RALanguageAndEnvironmentForStatisticalComputing,
   title = {R: A Language and Environment for Statistical Computing},
   author = {{R Development Core Team}},
   organization = {R Foundation for Statistical Computing},
   address = {Vienna, Austria},
   year = {2007},
   note = {{ISBN} 3-900051-07-0},
   url = {http://www.R-project.org},
}

@article{SystaKoskimiesMueller01ShimbaAnEnvironmentForReverseEngineeringJavaSoftwareSystems,
 author = {Tarja Syst\"{a} and Kai Koskimies and Hausi M\"{u}ller},
 title = {Shimba: An environment for reverse engineering Java software systems},
 journal = {Softw. Pract. Exper.},
 volume = {31},
 number = {4},
 year = {2001},
 issn = {0038-0644},
 pages = {371--394},
 doi = {10.1002/spe.386},
 publisher = {John Wiley \& Sons, Inc.},
 }

@inproceedings{,
 author = {Robert J. Walker and Gail C. Murphy and Bjorn Freeman-Benson and Darin Wright and Darin Swanson and Jeremy Isaak},
 title = {Visualizing dynamic software system information through high-level models},
 booktitle = {OOPSLA '98: Proceedings of the 13th ACM SIGPLAN conference on Object-oriented programming, systems, languages, and applications},
 year = {1998},
 isbn = {1-58113-005-8},
 pages = {271--283},
 location = {Vancouver, British Columbia, Canada},
 doi = {http://doi.acm.org/10.1145/286936.286966},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }

@inproceedings{JerdingStaskoBall97VisualizingInteractionsInProgramExecutions,
 author = {Dean F. Jerding and John T. Stasko and Thomas Ball},
 title = {Visualizing interactions in program executions},
 booktitle = {Proceedings of the 19th international conference on Software engineering ICSE'97},
 year = {1997},
 isbn = {0-89791-914-9},
 pages = {360--370},
 doi = {10.1145/253228.253356},
 publisher = {ACM Press},
 }

@book{SinghStearnsJohnson02DesigningEnterpriseApplicationsWithTheJ2EEPlatform,
 author = {Inderjeet Singh and Beth Stearns and Mark Johnson},
 title = {Designing enterprise applications with the J2EE platform},
 year = {2002},
 isbn = {0-201-78790-3},
 publisher = {Addison-Wesley Longman Publishing Co., Inc.},
 address = {Boston, MA, USA},
 }

@book{EhrigMahrCorneliusGrosseRhodeZeitz01MathematischStrukturelleGrundlagenDerInformatik,
author = {Hartmut Ehrig and Bernd Mahr and Martin Große-Rhode and Felix Cornelius and Philip Zeits},
title = {{M}athematisch {S}trukturelle {G}rundlagen der {I}nformatik},
isbn = {3-540-41923-3},
year = {2001},
edition = {2},
publisher = {Springer Verlag}

}

@inproceedings{Allen70ControlFlowAnalysis,
 author = {Frances E. Allen},
 title = {Control flow analysis},
 booktitle = {Proceedings of a symposium on Compiler optimization},
 year = {1970},
 pages = {1--19},
 location = {Urbana-Champaign, Illinois},
 doi = {10.1145/800028.808479}},
 }

@INCOLLECTION{LamportLynch90DistributedComputingModelsAndMethods,
  chapter = {18},
  pages = {1157--1199},
  title = {Distributed Computing: Models and Methods},
  publisher = {MIT Press},
  year = {1990},
  editor = {Jan van Leeuwen},
  author = {Leslie Lamport and Nancy Lynch},
  volume = {B},
 booktitle = {Handbook of Theoretical Computer Science: Formal Models and Semantics},
isbn = {0-444-88074-7}
}

@Misc{IEEE02,
  key =	  "IEEE Std 610.12-1990(R2002)",
  author =       "{IEEE Standards Board}",
  title =	"{IEEE} Standard Glossary of Software Engineering Terminology---{IEEE} Std 610.12-1990",
  year =	 "2002",
  annotation =   "ISBN 1-55937-067-X",
  address =      "New York, NY, USA",
}

@BOOK{Lieberherr96AdaptiveObjectOrientedSoftwareTheDemeterMethodWithPropagationPatterns,
AUTHOR = "Karl J. Lieberherr",
TITLE = "Adaptive Object-Oriented Software:
The Demeter Method with Propagation Patterns",
PUBLISHER = "PWS Publishing Company, Boston",
YEAR = "1996",
NOTE = "ISBN 0-534-94602-X"
}

*********************************
* maintainability
*********************************

@inproceedings{MariEila04TheImpactOfMaintainabilityOnComponentBasedSoftwareSystems,
 author = {Matinlassi Mari and Niemelä Eila},
 title = {The Impact of Maintainability on Component-based Software Systems},
 booktitle = {EUROMICRO '03: Proceedings of the 29th Conference on EUROMICRO},
 year = {2003},
 isbn = {0-7695-1996-2},
 pages = {25},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
 }

*******************************
* Enterprise Application Integration
*******************************

@article{SutherlandHeuvel02EnterpriseApplicationIntegrationAndComplexAdaptiveSystems,
 author = {Jeff Sutherland and Willem-Jan van den Heuvel},
 title = {Enterprise application integration and complex adaptive systems},
 journal = {Commun. ACM},
 volume = {45},
 number = {10},
 year = {2002},
 issn = {0001-0782},
 pages = {59--64},
 doi = {10.1145/570907.570932},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }

*********************************
* AI
*********************************

% citeceer 400+ (2005)
@article{Brooks91IntelligenceWithoutRepresentation,
 author = {Rodney A. Brooks},
 title = {Intelligence without representation},
 journal = {Artificial Intelligence},
 volume = {47},
 number = {1-3},
 year = {1991},
 issn = {0004-3702},
 pages = {139--159},
 doi = {10.1016/0004-3702(91)90053-M},
 publisher = {Elsevier Science Publishers Ltd.},
 address = {Essex, UK},
 }

*********************************
* Formal Methods
***********************************

@article{ClarkeWing96FormalMethodsStateOfTheArtAndFutureDirections,
 author = {Edmund M. Clarke and Jeannette M. Wing},
 title = {Formal methods: state of the art and future directions},
 journal = {ACM Computing  Surveys},
 volume = {28},
 number = {4},
 year = {1996},
 issn = {0360-0300},
 pages = {626--643},
 doi = {10.1145/242223.242257},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }

*********************************
* Monitoring
*********************************

@TechReport{Li03MonitoringOfComponentBasedSystems,
  author =       "Jun Li",
  title =	"Monitoring of Component-Based Systems",
  institution =  "Hewlett Packard Laboratories",
  number =       "HPL-2002-25R1",
  year =	 "2003",
  month =	jun # "~06",
  URL =	  "http://www.hpl.hp.com/techreports/2002/HPL-2002-25R1.pdf",
  keywords =     "runtime monitoring; component-based systems;
		 distributed and multithreaded systems; instrumentation;
		 causal tracing; CORBA",
  pages =	"26",
  abstract =     "The current state-of-the-art techniques are not
		 sufficient to debug, understand and characterize
		 multithreaded and distributed systems. In this report,
		 we present a software monitoring framework for
		 distributed and multithreaded systems which are built
		 upon component technology, as the attempt to explore
		 software development tools to address this need. Our
		 monitoring framework captures multidimensional system
		 behaviors-application semantics, timing latency and
		 shared resource usage. We adopt the approach of
		 compiler-assisted auto-generation of instrumentation
		 probes into the stub and the skeleton. With our
		 system-wide causal tracing techniques, global
		 propagation of resource consumption and timing is
		 captured from locally recorded monitoring data.
		 Furthermore, the monitoring framework allows users to
		 select different types of system behaviors and
		 different subsets of candidate components for
		 monitoring. As the result, not only the amount of
		 monitoring data can be reduced, but also the monitoring
		 associated interference can be eliminated or mitigated.
		 System behavior characterization tools are also
		 developed to support this monitoring framework,
		 including reconstruction and visualization of dynamic
		 system call graphs, and characterization of end-to-end
		 timing latency for function invocation.",
}

@inproceedings{Lamsweerde00RequirementsEngineeringInTheYear00AResearchPerspective,
 author = {Axel van Lamsweerde},
 title = {Requirements engineering in the year 00: a research perspective},
 booktitle = {ICSE '00: Proceedings of the 22nd international conference on Software engineering},
 year = {2000},
 isbn = {1-58113-206-9},
 pages = {5--19},
 location = {Limerick, Ireland},
 doi = {10.1145/337180.337184},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }

@inproceedings{NusbeibehEasterbrook00RequirementsEngineeringARoadmap,
 author = {Bashar Nuseibeh and Steve Easterbrook},
 title = {Requirements engineering: a roadmap},
 booktitle = {ICSE '00: Proceedings of the Conference on The Future of Software Engineering},
 year = {2000},
 isbn = {1-58113-253-0},
 pages = {35--46},
 location = {Limerick, Ireland},
 doi = {10.1145/336512.336523},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }

@article{ZaveJackson97FourDarkCornersOfRequirementsEngineering,
 author = {Pamela Zave and Michael Jackson},
 title = {Four dark corners of requirements engineering},
 journal = {ACM Trans. Softw. Eng. Methodol.},
 volume = {6},
 number = {1},
 year = {1997},
 issn = {1049-331X},
 pages = {1--30},
 doi = {10.1145/237432.237434},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }

@InProceedings{KruegerMathew04SystematicDevelopmentAndExplorationOfServiceOrientedSoftwareArchitectures,
  author =	 {I.H. Kr\"{u}ger and R. Mathew},
  title =	 {Systematic Development and Exploration of Service-Oriented Software Architectures},
  booktitle ={Proceedings of the Fourth Working IEEE/IFIP Conference on Software Architecture                  (WICSA'04)},
  year =	 2004,
  isbn =	 {0-7695-2172-X},
  pages =	 {177-187},
  publisher =	 {IEEE Computer Society Press},
  doi =		 {10.1109/WICSA.2004.1310701},
  abstract =	 {The notion of service is becoming increasingly
                  popular as a means for implementing large-scale
                  distributed, reactive systems. Systematic
                  development approaches and modeling notations for
                  services are still largely missing from the
                  literature. We introduce an architecture definition
                  language for service-oriented software
                  architectures. It provides modeling elements for
                  interaction patterns defining services, as well as
                  for mapping sets of services to target component
                  configurations. We also present a comprehensive
                  software development process that considers services
                  as first class modeling elements. By decoupling the
                  modeling of services from their implementation on
                  target component configurations this process enables
                  exploration of multiple architectures implementing
                  the same set of services. We substantiate our view
                  of services as cross-cutting architectural aspects
                  by providing a mapping from services to aspects in
                  AspectJ. We illustrate applicability of our approach
                  by modeling service-oriented architectures for
                  portions of the Center TRACON automation system as a
                  running example.}
}

@inproceedings{Apple65EvaluationAndPerformanceOfComputersTheProgramMonitorADeviceForProgramPerformanceMeasurement,
 author = {C. T. Apple},
 title = {Evaluation and performance of computers: the program monitor -- a device for program performance measurement},
 booktitle = {Proceedings of the 1965 20th national conference},
 year = {1965},
 pages = {66--75},
 location = {Cleveland, Ohio, United States},
 doi = {10.1145/800197.806034},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 annote = {Preformance monitoring is applied since a long time. For instance  \citet{Apple65EvaluationAndPerformanceOfComputersTheProgramMonitorADeviceForProgramPerformance} prensent an hardware device to monitor system performance.}
 }

@inproceedings{KumarMisurdaChildersSoffa04InstrumentationInSoftwareDynamicTranslatorsForSelfManagedSystems,
 author = {Naveen Kumar and Jonathan Misurda and Bruce R. Childers and Mary Lou Soffa},
 title = {Instrumentation in software dynamic translators for self-managed systems},
 booktitle = {WOSS '04: Proceedings of the 1st ACM SIGSOFT workshop on Self-managed systems},
 year = {2004},
 isbn = {1-58113-989-6},
 pages = {90--94},
 location = {Newport Beach, California},
 doi = {10.1145/1075405.1075423},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }

*******************************
* Exceptions
*******************************

DBLP (1975):

@InProceedings{Goodenough75StructuredExceptionHandling,
  title =	"Structured Exception Handling",
  author =	"John B. Goodenough",
  year = 	"1975",
  booktitle =	"POPL",
  pages =	"204--224",
}

*******************************
* Agents
*******************************

@Article{Nwana96SoftwareAgentsAnOverview,
author = "Hyacinth S. Nwana",
title = "Software Agents: An Overview",
journal = "Knowledge Engineering Review",
volume = "11",
number = "3",
pages = "205--244",
keywords = "agents, honours reading",
year = "1996",

}

*******************************
* Metrics
*******************************
%seems not to have passed the review of Metrics'04
@inproceedings{KanerBond04SoftwareEngineeringMetricsWhatDoTheyMeasoureAndHowDoWeKnow,
  title =	"Software Engineering Metrics: What Do They Measure and How Do We Know?",
  author =	"Cem Kaner and Walter P. Bond",
  year = 	"2004",
  pages =	"1--12",
  booktitle = "International Software Metrics Symposium (Metrics '04)",
  url = "http://www.kaner.com/pdfs/metrics2004.pdf"
}


@book{MontgomeryRunger03AppliedStatisticsAndProbabilityForEngineers,
  author =	"Douglas C. Montgomery and George C. Runger",
  title =	"Applied Statistics and Probability for Engineers",
  publisher =	"John Wiley \& Sons, Inc.",
  edition = "3rd",
  year = 	"2003",
  isbn = "0-471-20454-4"
}

@Article{Parzen62OnTheEstimationOfAProbabilityDensityFunction,
  author =	"E. Parzen",
  title =	"On the estimation of a probability density function
		 and mode",
  journal =	"Annals of Mathematical Statistics",
  volume =	"33",
  pages =	"1065--1076",
  year = 	"1962",
  keywords = "probability density function",

}

@Book{Silverman86DensityEstimationForStatisticsAndDataAnalysis,
  author =	"B. W. Silverman",
  year = 	"1986",
  title =	"Density Estimation for Statistics and Data Analysis",
  publisher =	"Chapman and Hall",
  address =	"New York",
  keywords = "probability density function",
}

@InProceedings{Herzog00FormalMethodsForPerformanceEvaluation,
  title =	"Formal Methods for Performance Evaluation",
  author =	"Ulrich Herzog",
  publisher =	"Springer",
  year = 	"2000",
  volume =	"2090",
  booktitle =	"Euro Summer School on Trends in Computer Science",
  editor =	"Ed Brinksma and Holger Hermanns and Joost-Pieter Katoen",
  ISBN = 	"3-540-42479-2",
  pages =	"1--37",
  series =	"Lecture Notes in Computer Science",
}



@inproceedings{RossWitteveen05DiagnosisOfPlansAndAgents,
	author	= {N. Roos and C. Witteveen},
	title	= {Diagnosis of plans and agents},
	booktitle	= {Proceedings of the 4th International Central and Eastern European Conference on Multi-Agent Systems (CEEMAS)},
	year	= {2005},
	editor	= {Michael Pechoucek and Paolo Petta and László Zsolt Varga},
	volume	= {3690},
	series	= {Lecture Notes in Computer Science},
	pages	= {357--366},
	url	= {http://www.st.ewi.tudelft.nl/~renze/pubs/RoosWitteveen_CEEMAS2005.pdf},
	project	= {CABS},
	group	= {ALG},
}

@article{MunozGarciaMorenoRebolloPascualAcosta90OutliersAFormalApproach,
     title = {Outliers: A Formal Approach},
     author = {Munoz-Garcia, J. and Moreno-Rebollo, J. L. and Pascual-Acosta, A.},
     journal = {International Statistical Review / Revue Internationale de Statistique},
     volume = {58},
     number = {3},
     pages = {215--226},
     ISSN = {03067734},
     publisher = {International Statistical Institute (ISI)},
     year = {1990},
}

@Article{Grubbs69ProceduresForDetectingOutlyingObservationsInSamples,
  author =	"Frank E. Grubbs",
  year = 	"1956",
  title =	"Procedures for detecting outlying observations in
		 samples",
  publisher = {American Statistical Association and American Society for Quality},
  journal =	"Technometrics",
  volume =	"11",
  pages =	"1--21",
}



%IBIT/Wechloy 4 mat 715 AS 7267
@book{Hawkins80IdentificationOfOutliers,
	address = {London, UK},
	author = {Hawkins, D. M.},
	isbn = {0-412-21900-X},
	series = {Monographs on applied probability and statistics},
	keywords = {anomaly},
	publisher = {Chapman and Hall},
	title = {Identification of Outliers},
	year = {1980}
}

********************************
* MISSING
********************************\

Prior probability and uncertainty
Kashyap, R.
Information Theory, IEEE Transactions on
Volume 17, Issue 6, Nov 1971 Page(s): 641 - 650
Digital Object Identifier  
Summary: Consider a stochastic system with outputYwhose probability density(pY mid Lambda)is a known function of the parameterLambdawhose true value is unknown. Our aim is to assign a prior probability densityb(Lambda)

@article{24416,
 author = {S. Purushothaman and P. A. Subrahmanyam},
 title = {Reasoning about probabilistic behavior in concurrent systems},
 journal = {IEEE Transactions Software Engineering},
 volume = {13},
 number = {6},
 year = {1987},
 issn = {0098-5589},
 pages = {740--745},
 publisher = {IEEE Press},
 address = {Piscataway, NJ, USA},
 }

@Article{Dolev86OnThePossibilityAndImpossibilityOfAchievingClockSynchronization,
  author =	"D. Dolev and J. Y. Halpern and H. R. Strong",
  title =	"On the Possibility and Impossibility of Achieving
		 Clock Synchronization",
  journal =	"Journal of Computer and Systems Sciences",
  volume =	"32",
  number =	"2",
  pages =	"230--250",
  year = 	"1986",
  keywords =	"clock synchronization",
}



@article{Rosenblatt56RemarksOnSomeNonparametricEstimatesOfADensityFunction,
  ISSN = {0003-4851},
  abstract = {This note discusses some aspects of the estimation of the density function of a univariate probability distribution. All estimates of the density function satisfying relatively mild conditions are shown to be biased. The asymptotic mean square error of a particular class of estimates is evaluated.},
  author = {Rosenblatt, Murray},
  journal = {The Annals of Mathematical Statistics},
  month = {sep},
  number = {3},
  pages = {832--837},
  publisher = {Institute of Mathematical Statistics},
  title = {Remarks on Some Nonparametric Estimates of a Density Function},
  volume = {27},
  year = {1956},
}

@inproceedings{RoddickHornsbySpiliopoulou01YABTSSTDNRYetAnotherBiblographyOfTemporalSpatialAndSpatioTemporalDataMiningResearch,
Author = {Roddick, J. F. and Hornsby, K. and Spiliopoulou, M.},
Title = {YABTSSTDMR - Yet Another Bibliography of Temporal, Spatial and Spatio-Temporal Data Mining Research},
BookTitle = {SIGKDD Temporal Data Mining Workshop},
Editor = {Unnikrishnan, K.P. and Uthurusamy, R.},
Address= {San Francisco, CA},
Publisher = {ACM},
Pages = {167-175},
Year = {2001} }

@incollection{Markov1971ExtensionOfTheLimitTheoremsOfProbabilityTheoryToASumOfVariablesConnectedInAChain,
	address = {New York City},
	author = {Markov, A. },
	booktitle = {Dynamic Probabilistic Systems (Volume I: Markov Models)},
	chapter = {Appendix B},
	editor = {Howard, R. },
	pages = {552--577},
	publisher = {John Wiley \& Sons, Inc.},
	title = {Extension of the Limit Theorems of Probability Theory to a Sum of Variables Connected in a Chain},
	year = {1971}
}

@article{ReissRenieris00EncodingProgramExecutions,
author = {Steven P. Reiss and Manos Renieris},
title = {Encoding Program Executions},
journal = {icse},
volume = {00},
year = {2001},
isbn = {0-7695-1050-7},
pages = {0221},
doi = {10.1109/ICSE.2001.919096},
publisher = {IEEE Computer Society},
address = {Los Alamitos, CA, USA},
}

%loop and recursion
@article{Johnson75FindingAllTheElementaryCircuitsOfADirectedGraph,
author = {Donald B. Johnson},
collaboration = {},
title = {Finding All the Elementary Circuits of a Directed Graph},
publisher = {SIAM},
year = {1975},
journal = {SIAM Journal on Computing},
volume = {4},
number = {1},
pages = {77-84},
keywords = {algorithm; circuit; cycle; enumeration; digraph; graph},
doi = {10.1137/0204007}
}

@article{AuslanderStrong78SystematicRecursionRemoval,
 author = {M. A. Auslander and H. R. Strong},
 title = {Systematic recursion removal},
 journal = {Commun. ACM},
 volume = {21},
 number = {2},
 year = {1978},
 issn = {0001-0782},
 pages = {127--134},
 doi = {10.1145/359340.359344},
 publisher = {ACM},
 address = {New York, NY, USA},
 abstract = {The recursion removal algorithm presented by Strong and Walker is amplified and applied to a relatively complex PL/I program. The aim is to demonstrate systematic recursion-removal techniques on something more complex than Knuth's ``sturdy toddler'' and to obtain measurements of the cost of procedure linkage in PL/I and the savings achievable via procedure integration in the presence of recursion. First, the paper describes the recursion-removal process and the example on which it will be illustrated. Recursion removal is then applied to the two major parts of this example and the final result of the process is displayed. Our performance comparison results are presented, and our conclusions are briefly discussed}
 }

@article{AalstWeijters04ProcessMiningAResearchAgenda,
 author = {van der Aalst, W.M.P. and Weijters, A.J.M.M.},
 title = {Process mining: A Research Agenda},
 journal = {Computers in Industry},
 volume = {53},
 number = {3},
 year = {2004},
 pages = {231--244},
 doi = {10.1016/j.compind.2003.10.001},
 publisher = {Elsevier B.V.},
 abstract = {Enterprise information systems support and control operational business processes ranging from simple internal back-office processes to complex interorganizational processes. Technologies such as workflow management (WFM), enterprise application integration (EAI), enterprise resource planning (ERP), and web services (WS) typically focus on the realization of IT support rather than monitoring the operational business processes. Process mining aims at extracting information from event logs to capture the business process as it is being executed. In this paper, we put the topic of process mining into context, discuss the main issues around process mining, and finally we introduce the papers in this special issue.}
 }

@article{JainMurtyFlynn99DataClusteringAReview,
 author = {A. K. Jain and M. N. Murty and P. J. Flynn},
 title = {Data clustering: a review},
 journal = {ACM Computing Surveys},
 volume = {31},
 number = {3},
 year = {1999},
 issn = {0360-0300},
 pages = {264--323},
 doi = {10.1145/331499.331504},
 publisher = {ACM},
 }


@inproceedings{BischofbergerKuehlLoeffler04SotographAPragmaticApproachToSourceCodeArchitectureConformanceChecking,
  author    = {Walter R. Bischofberger and
               Jan K{\"u}hl and
               Silvio L{\"o}ffler},
  title     = {Sotograph - A Pragmatic Approach to Source Code Architecture                Conformance Checking},
  booktitle = {First European Workshop on Software Architecture},
  series = {Lecture Notes in Computer Science},
  year      = {2004},
  volume    = {3047},
  isbn      = {3-540-22000-3},
  pages     = {1-9},
  publisher = {Springer},
 editor    = {Fl{\'a}vio Oquendo and
               Brian Warboys and
               Ronald Morrison},
}

@inproceedings{StreekmannHoornRohrHasselbring08PrioritisingDependencyCategoriesForSoftwareMigration,
author = {Niels Streekmann and Andr\'{e} van Hoorn and Matthias Rohr and Wilhelm Hasselbring},
title = {Prioritising Dependency Categories for Software Migration},
year = {2008},
booktitle =  {10. GI Workshop Software-Reengineering (GI WSR'08)},
note = {submitted},
}

@Book{KaufmanRousseeuw90FindingGroupsInDataAnIntroductionToClusterAnalysis,
  author =	"Leonard Kaufman and Peter J. Rousseeuw",
  title =	"Finding Groups in Data: An Introduction to Cluster Analysis",
  publisher =	"John Wiley \& Sons",
  month =	mar,
  year = 	"1990",
  ISBN = 	"0-471-87876-6",
}

@Book{HanKamber01DataMiningConceptsAndTechniques,
  author =	"Jiawei Han and Micheline Kamber",
  title =	"Data Mining: Concepts and Techniques",
  publisher =	"Morgan Kaufmann Publishers",
  year = 	"2001",
  ISBN = 	"1-55860-489-8",
}

@BOOK{TanSteinbachKumar2006IntroductionToDataMining,
  title = {Introduction to Data Mining},
  publisher = {Addison-Wesley},
  year = {2006},
  author = {Pang-Ning Tan and Michael Steinbach and Vipin Kumar},
} 
% some worms spread around in minutes -- developing, distributing, and deploying rules for signature-based intrusion detection systems usually takes much more time 
@misc{Farshchi03StatisticalBasedIntrusionDetection,
author = {Jamil Farshchi},
year = 2003,
month = apr,
title = {Statstical-Based Intrusion Detection},
url = {http://www.securityfocus.com/infocus/1686},
note = {Available online, Last access 23.05.2008}
}


@article{StanifordHoaglandMcAlerney2002PracticalAutomatedDetectionOfStealthyPortscans,
  author    = {Stuart Staniford and  James A. Hoagland and Joseph M. McAlerney},
  title     = {Practical Automated Detection of Stealthy Portscans},
  journal   = {Journal of Computer Security},
  volume    = {10},
  year      = {2002},
  pages     = {105--136},
}

@techreport{Axelsson2000IntrusionDetectionSystemsASurveyAndTaxonomy,
  author = "Stefan Axelsson",
  title = "Intrusion Detection Systems: A Survey and Taxonomy",
  institution = "Chalmers University",
  number = "99-15",
  month = mar,
  year = {2000},
}


@techreport{AndersonLuntJavitsTamaruValdes95DetectingUnusualProgramBehaviorUsingTheStatisticalComponentsOfNIDES,
    AUTHOR = {Debra Anderson and Teresa F. Lunt and Harold Javits and Ann Tamaru and Alfonso Valdes},
    TITLE = {Detecting Unusual Program Behavior Using the Statistical Components of {NIDES}},
    YEAR = {1995},
	number = {SRI-CSL-95-06},
    MONTH = {may},
	publisher = {SRI International},
    URL = {http://www.csl.sri.com/papers/5sri/}
}


@article{Burgess06ProbabilisticAnomalyDetectionInDistributedComputerNetworks,
 author = {Mark Burgess},
 title = {Probabilistic anomaly detection in distributed computer networks},
 journal = {Science of Computer Programming},
 volume = {60},
 number = {1},
 year = {2006},
 issn = {0167-6423},
 pages = {1--26},
 doi = {10.1016/j.scico.2005.06.001},
 publisher = {Elsevier},
 }

@inproceedings{KruegelMutzRobertsonValeur2003BayesianEventClassificationForIntrusionDetection,
 author = {Christopher Kruegel and Darren Mutz and William Robertson and Fredrik Valeur},
 title = {Bayesian Event Classification for Intrusion Detection},
 booktitle = {Proceedings of the 19th Computer Security Applications Conference (ACSAC'03)},
 year = {2003},
 isbn = {0-7695-2041-3},
 pages = {14},
 publisher = {IEEE},
 }


@phdthesis{Lane00MachineLearningTechniquesForTheComputerSecurityDomainOfAnomalyDetection,
 author = {Terran D. Lane},
 school = {Purdue University},
 title = {Machine learning techniques for the computer security domain of anomaly detection},
 year = {2000},
 isbn = {0-493-29133-4},
 order_no = {AAI3018234}},
 }


% In this anomaly detection approach, unix system calls are the feature for building normal behavior profiles for unix processes
@inproceedings{ForrestHofmeyrSomayajiLongstaff96ASenseOfSelfForUnixProcesses,
author = {Stephanie Forrest and Steven A. Hofmeyr and Anil Somayaji and Thomas A. Longstaff},
title = {A Sense of Self for Unix Processes},
booktitle = {Proceedings of the Symposium on Security and Privacy},
year = {1996},
pages = {0120},
doi = {10.1109/SECPRI.1996.502675},
publisher = {IEEE},
}

%firewalls reduce exposure but do not eliminate vulnerabilities. Firewalls alone 
"do not adequately secure" computer systems. 
% the approach is on the software application layer in contrast to approaches at system- and network layer.
@inproceedings{GhoshWankenCharron98DetectingAnomalousAndUnknownIntrusionsAgainstPrograms,
  author = {Anup K. Ghosh and James Wanken and Frank Charron},
  title = "Detecting anomalous and unknown intrusions against programs",
  booktitle = "Proceedings of the Computer Security Applications Conference (ACSAC'98)",
  year = "1998",
  month = dec,
  url = "citeseer.ist.psu.edu/article/ghosh98detecting.html",

}

% Journal artical about the idea presented in the papers that have been presented before
@Article{MutzValeurKruegelVigna06AnomalousSystemCallDetection,
  author = {Darren Mutz and Fredrik Valeur and Christopher Kruegel and Giovanni Vigna},
  title = {{Anomalous System Call Detection}},
  journal = {Transactions on Information and System Security},
  year = 	 2006,
  volume =	 {9},
  number =	 {1},
  pages =	 {61--93},
  month =	feb,
  publisher = {ACM}
}
@article{Neumann06RisksRelatingToSystemComposition,
 author = {Peter G. Neumann},
 title = {Risks relating to system compositions},
 journal = {Commun. ACM},
 volume = {49},
 number = {7},
 year = {2006},
 issn = {0001-0782},
 pages = {120},
 doi = {10.1145/1139922.1139960},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }
@MISC{JMeter,
  author = {{Apache Software Foundation}},
  title = {{JMeter}},
  howpublished = {\url{http://jakarta.apache.org/jmeter/}},
}
@MISC{iBatis2007,
  author = {{Apache Software Foundation}},
  title = {{iBATIS} Data Mapper Framework -- Homepage},
  year = {2007},
  note = {\url{http://ibatis.apache.org/}},
}
@BOOK{ArlowNeustadt05UML2,
  title = {{UML 2 and the Unified Process: Practical Object-Oriented Analysis
	and Design (2nd Edition)}},
  publisher = {Addison-Wesley},
  year = {2005},
  author = {Jim Arlow and Ila Neustadt}
}
@INPROCEEDINGS{BalloccaPolitiRuffoRusso2002BenchmarkingASiteWithRealisticWorkload,
  author = {Giovanni Ballocca and Roberto Politi and Giancarlo Ruffo and Vitaliano Russo},
  title = {Benchmarking a Site with Realistic Workload},
  booktitle = {Proceedings of the 5th IEEE International Workshop on Workload Characterization (WWC-5)},
  year = {2002},
  pages = {14--22},
  publisher = {IEEE},
  abstract = {The rapid growing of Web users number, and the
	consequent importance of Capacity Planning, have
	leaded to the development of Web benchmarking tools
	largely available in the market. One of the most common
	critics to this approach, as that synthetic workload
	produced by web stressing tools is far to be realistic.
	This paper deals with a benchmarking methodology
	based on a workload characterization generated
	from the log files. Customer Behavior Model Graph
	(CBMG) has been proposed in 1131 as a workload characterization
	of an e-Commerce site. Ifere we discuss
	how CBMG methodology has a wider field of application
	and how to use this model to eficiently improve a
	fully integrated Web Stressing Tool. We also evaluate
	the differences between OUT approach and other models
	based on different characterizations.},
  review = {(by Andre van Hoorn) Context: synthetic workload supposed to be far from being realistic
	Goal: Generate REALISTIC WORKLOAD
	-As generate CBMGs from web logs
	- generate scripts from CBMGs (but not with the "best solution" (dynamic
	changing scripts))
	- results: when stressing tool uses CBMG-scripts instead of Random
	wcripts,
	 GENERATED TRAFFIC obtains HIGHER AVERAGE RESPONSE TIMES
	This paper: - benchmarking methodology based on a WORKLOAD CHARACTERIZATION
	GENERATED from WEB LOG FILES
	- discussed how CBMG methodology has wider field of application and
	how to USE THIS MODEL
	 to efficiently IMPROVE a FULLY INTEGRATED WEB STRESSING TOOL.
	- propose an INTEGRATION between EXISTING BENCHMARKING TOOLS and the
	CBMG workload characterization
	 model, in order to TEST the web site in a MORE REALISTIC scenario
	than using random navigational patterns.
	- The main scope of this paper is to show how an actual STRESSING
	TOOL can be EXTENDED to GENERATE a REALISTIC WORKLOAD.
	The resulting system would have two important features:
	- user-friendly: TRAFFIC GENERATION from adopted workload characterization
	is an AUTOMATIC process.
	- characterization process starts from the web log files, i.e., generated
	traffic is strongly based on the particular SITE TOPOLOGY
	- Compare prototype derived from openSTA with basic version of openSTA
	
	3. Workload Characterization using CBMG
	- propose to use a WORKLOAD CHARACTERIZATION extracted from past traffic
	data saved at the server side. 
	 This characterization can be used to AUTOMATICALLY GENERATE REALISITC
	WORKLOAD, taking into account basic components of NAVIGATIONAL PATTERNS (i.e., average number of
	sessions per day, average user think times, most accessed resources, and so on), as well as different
	kinds of users. 
	
	 CBMG [13] can be applied to give such parameters as input to a stressing
	tool.
	- It is our opinion that such a model (CBMG) has a wider field of
	application, and that can also be used TO GENERATE REALISTIC WORKLOAD for every kind of sites.
	- Four different processes are involved in the building phase of the
	workload characterization (as in [Menasce1999]?):
	 1. Merging and filtering web logs: merge log files, remove entries
	not influencing sessions
	 2. Getting sessions: session characterized by sequence of requests
	from same ip-address
	 3. Transforming sessions: for each session S create point X_S (C_S,
	W_s) [both n x n matrices]
	- C_S transition count between states
	- W_S client side think times 
	 4. CMBGs clustering: from all X_S points number of CBMGs generated
	by means of "K-means clustering algorithm"
	4. Stressing Framework
	- A WEB STRESSING TOOL is a BENCHMARKING SUITE. In this Section, we
	describe the ARCHITECTURE OF A GENERIC STRESSING TOOL: we are taking into account the large part of available web stressing
	tools.
	 A stressing tool, at least, is made of 2 MODULES: a SCRIPT RECORDER
	and a LOAD GENERATOR.
	
	 - SCRIPT RECORDER:
	 captures http browser SESSION and saves it as SEQUENCE OF PAIR (object
	requests, think time)
	 Traces requests and think times are CONVERTED to a sequence of a
	(propriatery) SCRIPTING LANGUAGE
	 SCRIPT used during load test.
	
	 - LOAD GENERATOR:
	 Generates SYNTHETIC LOAD according to recorded script
	
	- STRESSING CLIENT
	 load generator that runs a test. 
	 executes one or more scripts by means of each VIRTUAL USER (VU)
	 send measuring results to MASTER STRESSING CLIENT
	
	5. Generation of realistic web server workload
	- Describes how scripts for each cluster can be generated
	- Of course, the PRESENTED IMPLEMENTATION is NOT THE BEST ONE: it
	has to he considered as a prototype
	 for testing the basic idea. The BEST IMPLEMENTATION should permit
	to CREATE a DIFFERENT SCRIPT FOR EACH SESSION.
	 In this perspective, CBMG should be used as an automatic generator
	of new scripts.
	
	5.3 stressing prototype:
	- used OpenSTA
	- implemented package called CBMGmaker to AUTOMATICALLY CREATE CBMG
	from log (collection of perl scripts)
	- implemented group of modules merger.pl, log2req.pl, req2session.pl,
	clu4cbmg.pl according to CBMG process
		
	6 results
	- used web site of scientific conference (four CMBG states)
	- generated CMBGs for 4 types of users (SYNTHETIC SESSIONS)
	- generated script for RANDOM USER
	- collected data:
	 - #users vs. elapsed time, 
	 - HTTP reponse time vs. elapsed time
	 - CPU used vs. elapsed time},
}
@INPROCEEDINGS{BarfordCrovella98GeneratingRepresentativeWebWorkloadsForNetworkAndServerPerformanceEvaluation,
  author = {Paul Barford and Mark Crovella},
  title = {Generating Representative Web Workloads for Network and Server Performance
	Evaluation},
  booktitle = {Proceedings of the ACM SIGMETRICS},
  year = {1998},
  pages = {151--160},
  publisher = {ACM},
  abstract = {One role for workload generation is as a means for understanding
	how servers and networks respond to variation
	in load. This enables management and capacity
	planning based on current and projected usage. This
	paper applies a number of observations of Web serve1
	usage to create a realistic Web workload generation tool
	which mimics a set of real users accessing a server. The
	tool, called SURGE (Scalable URL Reference Generator)
	generates references matching empirical measurements
	of 1) server file size distribution; 2) request size distribution;
	3) relative file popularity; 4) embedded file references;
	5) temporal locality of reference; and 6) idle pcriods
	of individual users. This paper reviews the essential
	elements required in the generation of a representative
	Web workload. It also addresses the technical challenges
	to satisfying this large set of simultaneous constraints
	on the properties of the reference stream, the solutions
	we adopted, and their associated accuracy. Finally, we
	present evidence that SURGE exercises servers in a manner
	significantly different from other Web server benchmarks.},
  doi = {10.1145/277851.277897},
  isbn = {0-89791-982-3},
  location = {Madison, Wisconsin, United States},
  review = {Describe methods they developed for generating ANALITICALLY-BASED
	WEB REFERENCE STREAMS
	Developed SURGE (Scalable URL Reference Generator)
	Considers no sessions. Mostly considers transfer of "web objects"
	1. Introduction
	Two approaches for workload generation can be used:
	- trace based
	 prerecorded records of past workloads
	- analytical
	 starts with mathematical models for workload characteristics
	aborted since techniques used seem to be "old"},
}
@INCOLLECTION{Dijkstra65CooperatingSequentialProcesses,
  author = {E. W. Dijkstra},
  title = {Cooperating sequential processes},
  booktitle = {Programming Languages},
  publisher = {Academic Press},
  year = {1965},
  editor = {F. Genuys},
  keywords = {threads, CSP, control flow,},  
}
@MISC{FieldingGettysMogulFrystykMasinterLeachBernersLee99RFCHTTP,
  author = {R. Fielding and J. Gettys and J. Mogul and H. Frystyk and L. Masinter
	and P. Leach and T. Berners-Lee},
  title = {Request for Comment ({RFC}) 2616: {H}ypertext {T}ransfer {P}rotocol
	-- {HTTP}},
  year = {1999},
  text = {R. Fielding, J. Gettys, J. Mogul, H. Frystyk, L. Masinter, P. Leach,
	and T. Berners-Lee, Hypertext Transfer Protocol -- HTTP 1.1. RFC
	2616, June 1999.},
}
@MISC{vanHoorn2007Markov4JMeterHomepage,
  author = {Andr\'e van Hoorn},
  title = {{Markov4JMeter}},
  howpublished = {\url{http://markov4jmeter.sourceforge.net/}},
}
@MISC{vanHoorn07WorkloadSensitiveTimingBehaviorAnomalyDetectionInLargeSoftwareSystems,
  author = {Andr\'e van Hoorn},
  title = {Workload-sensitive Timing Behavior Anomaly Detection in Large Software
	Systems},
  month = sep,
  year = {2007},
  note = {Master's thesis (Diplomarbeit), Department of Computing Science,
	University of Oldenburg, Germany},
  abstract = {Anomaly detection is used for failure detection and diagnosis in large
	software systems to reduce repair time, thus increasing availability.
	A common approach is building a model of a system's normal behavior
	in terms of monitored parameters, and comparing this model with a
	dynamically generated model of the respective current behavior. Deviations
	are considered anomalies, indicating failures. Most anomaly detection
	approaches do not explicitly consider varying workload.
	
	Assuming that varying workload leads to varying response times of
	services provided by internal software components, our hypothesis
	is as follows: a novel workload-sensitive anomaly detection is realizable,
	using statistics of workload-dependent service response times as
	a model of the normal behavior.
	
	The goals of this work are divided into three parts. First, an application-generic
	technique will be developed to model and generate realistic workload
	based on an analytical workload model notation to be specified. Applying
	this technique to a sample application in a case study, the relation
	between workload intensity and response times will be statistically
	analyzed. Based on this, a workload-sensitive anomaly detection prototype
	will be implemented.},
}
@ARTICLE{KallepalliTian01MeasuringAndModelingUsageAndReliabilityForStatisticalWebTesting,
  author = {Chaitanya Kallepalli and Jeff Tian},
  title = {Measuring and Modeling Usage and Reliability for Statistical Web
	Testing},
  journal = {IEEE Transactions on Software Engineering},
  year = {2001},
  volume = {27},
  pages = {1023--1036},
  number = {11},
  address = {Piscataway, NJ, USA},
  doi = {http://dx.doi.org/10.1109/32.965342},
  issn = {0098-5589},
  publisher = {IEEE Press},
}
@ARTICLE{KrishnamurthyRoliaMajumdar06ASyntheticWorkloadGenerationTechniqueForStressTestingSessionBasedSystems,
  author = {Diwakar Krishnamurthy and Jerome A. Rolia and Shikharesh Majumdar},
  title = {A Synthetic Workload Generation Technique for Stress Testing Session-Based
	Systems},
  journal = {IEEE Transactions on Software Engineering},
  year = {2006},
  volume = {32},
  pages = {868--882},
  number = {11},
  bibdate = {2007-01-04},
  bibsource = {DBLP, http://dblp.uni-trier.de/db/journals/tse/tse32.html#KrishnamurthyRM06},
  url = {10.1109/TSE.2006.106}
}
@INPROCEEDINGS{LiTian03TestingTheSuitabilityOfMarkovChainsAsWebUsageModels,
  author = {Zhao Li and Jeff Tian},
  title = {Testing the Suitability of Markov Chains as Web Usage Models},
  booktitle = {Proceedings of the 27th International Conference on Computer Software
	and Applications (COMPSAC '03)},
  year = {2003},
  pages = {356--361},
  publisher = {IEEE},
  isbn = {0-7695-2020-0},
}
@INPROCEEDINGS{MatevskaHasselbring07AScenarioBasedApproachToIncreasingServiceAvailabilityAtRuntimeReconfigurationOfComponentBasedSystems,
  author = {Jasminka Matevska and Wilhelm Hasselbring},
  title = {A Scenario-based Approach to Increasing Service Availability at Runtime
	Reconfiguration of Component-based Systems},
  booktitle = {Proceedings of the 33rd Euromicro Conference on Software Engineering
	and Advanced Applications (SEAA)},
  year = {2007},
  pages = {137-144},
  publisher = {IEEE},
  isbn = {0-7695-2977-1},
  issn = {1089-6503},
}
@BOOK{MenasceAlmeida01CapacityPlanningForWebServicesMetricsModelsAndMethods,
  title = {Capacity Planning for Web Services: Metrics, Models, and Methods},
  publisher = {Prentice Hall},
  year = {2002},
  author = {Daniel A. Menasc\'e and Virgilio A.F. Almeida},
}
@INPROCEEDINGS{MenasceAlmeidaFonsecaMendes99AMethodologyForWorkloadCharacterizationOfECommerceSites,
  author = {Daniel A. Menasc\'e and Virgilio A. F. Almeida and Rodrigo Fonseca
	and Marco A. Mendes},
  title = {A Methodology for Workload Characterization of E-Commerce Sites},
  booktitle = {Proceedings of the Conference on Electronic Commerce (EC '99)},
  year = {1999},
  pages = {119--128},
  publisher = {ACM},
  abstract = {PERFORMANCE ANALYSIS and CAPACITY PLANNING for e-commerce
	sites poses an interesting problem: how to best
	CHARCTERIZE the WORKLOAD of these sites. Tradition al
	workload characterization methods, based on hits/set,
	page views/set, or visits/set, are not appropriate for
	e-commerce sites. In these environments, customers
	interact with the site through a series of consecutive
	and related requests, called SESSIONS. Different NAVIGATIONAL
	PATTERNS can be observed for different groups of
	customers. 
	
	In this paper, we propose a METHODOLOGY
	for CHARACTERIZING and GENERATING e-commerce WORKLOAD
	MODELS. First, we introduce a state transition graph
	called Customer Behavior Model Graph (CBMG), that
	is used to describe the behavior of groups of customers
	who exhibit similar navigational patterns. A set of useful
	metrics, analytically derived from the analysis of the
	CBMG, is presented. Next, we define a workload model
	and show the steps required to obtain its parameters.
	We then propose a CLUSTERING ALGORITHM to characterize
	workloads of e-commerce sites in terms of CBMGs. Finally,
	we present and discuss experimental results of the
	use of proposed methodology.},
  doi = {10.1145/336992.337024},
  isbn = {1-58113-176-3},
  location = {Denver, Colorado, United States},
  review = {Context: capacity planning and performance evaluation
	Derive useful workload from CBMGs. CHARACTERIZING and GENERATING e-commerce
	WORKLOAD MODELS (from CBMGs). 
	
	
	Navigational patterns
	Construction of a WORKLOAD MODEL by means of two algorithms
	1. HTTP log -> (Request Log) -> session log
	2. session log -> set of CBMGs
	Evaluation with 20,000 sessions
	Use Online Bookstore for evaluation
	Applied CLUSTERING ALGORITHMS to logs and determined groups of costumers
	that exhibit similar NAVIGATIONAL BEHAVIOR.
	2. The Nature of E-commerce Workloads
	Definition of
	- CBMG
	- session
	- (client-side/ server-side) think times
	3. Metrics Derived from the CBMG (average session length, buy to visit
	ratio)
	derived from CBMG by solving means of linear equations
	4. Workload Characterization Methodology
	- merge several web logs. Each line: (uid, request type, request time,
	exec_time)
	 - uid (id of costumer)
	 - request type
	 - request time
	 - exec_time
	 important: Even though this value is not normally recorded in
	 the HTTP log, servers can be modified to record
	 this information.
	5. A CBMG-based Workload Characterization Algorithm 
	describes process how to create CBMGs: HTTP log -- (Merge and Filter)
	-> Request Log -- (Get Sessions) -> Session Log -- (Get CMBGs) ->
	CBMGs
	Session Log S: entries [C_k, W_k] with nxn matrices. C_k transitions
	counts, W_k accumulated think times.
	5.1 Algorithm GetSession
	 web log -> session log
	5.2 Procedure GetCBMGs
	 k-means clustering to get relatively small number of CBMGs
	 clustering algorithms uses definition of distance between log entries
	to a centroid (of which we have k)
	6. Experimental Setup and Results
	Bookstore, request generation by means of CBMGs
	6.1 Results of Clustering Algorithm
	 k-means with k=6 "good"
	6.2 Cluster Analysis
	 Evaluation with log file consisting of 340,000 lines representing
	20,000 sessions
	 6 clusters, analyzed patterns e.g. by means of buy to visit ratio
	and add to shopping cart visit ratio
	7 Experiments with Real Logs
	 6 log files with 17,727,573 HTTP requests.
	 Identified 34,811 sessions (tried to remove robots with long sessions)
	 Average size of CBMGs: 8.46 requests.},
}
@ARTICLE{Menasce02LoadTestingOfWebSites,
  author = {Daniel A. Menasc\'{e}},
  title = {Load Testing of Web Sites},
  journal = {IEEE Internet Computing},
  year = {2002},
  volume = {6},
  pages = {70--74},
  number = {4},
  address = {Piscataway, NJ, USA},
  doi = {http://dx.doi.org/10.1109/MIC.2002.1020328},
  issn = {1089-7801},
}
@BOOK{MenasceAlmeidaDowdy04PerformanceByDesignComputerCapacityPlanningByExample,
  title = {Performance by Design: Computer Capacity Planning By Example},
  publisher = {Prentice Hall},
  year = {2004},
  author = {Daniel A. Menasc\'{e} and Virgilio A. F. Almeida and Lawrence W.
	Dowdy},
  isbn = {0130906735},
}
@INPROCEEDINGS{Menasce02LoadTestingBenchmarkingAndApplicationPerformanceManagementForTheWeb,
  author = {Daniel A. Menasc{\'e}},
  title = {Load Testing, Benchmarking, and Application Performance Management
	for the Web},
  booktitle = {Proceedings of the International CMG Conference},
  year = {2002},
  pages = {271--282},
  publisher = {Computer Measurement Group},
  bibdate = {2003-01-30},
  bibsource = {DBLP, http://dblp.uni-trier.de/db/conf/cmg/cmg2002.html#Menasce02},
}
@ARTICLE{ParsonsMurphy08DetectingPerformanceAntipatternsInComponentBasedEnterpriseSystems,
  author = {Trevor Parsons and John Murphy},
  title = {Detecting Performance Antipatterns in Component Based Enterprise
	Systems},
  journal = {Journal of Object Technology},
  year = {2008},
  volume = {7},
  pages = {55-90},
  number = {3},
  month = apr,
}
@INPROCEEDINGS{Pena-OrtizSahuquilloPontGil2005ModelingContinuousChangesOfTheUsersDynamicBehaviorInTheWWW,
  author = {Ra\'{u}l {Pe\~{n}a-Ortiz} and Julio Sahuquillo and Ana Pont and Jos\'{e}
	A. Gil},
  title = {Modeling continuous changes of the user's dynamic behavior in the
	{WWW}},
  booktitle = {Proceedings of the 5th International Workshop on Software and Performance
	(WOSP '05)},
  year = {2005},
  pages = {175--180},
  publisher = {ACM},
  doi = {http://doi.acm.org/10.1145/1071021.1071040},
  isbn = {1-59593-087-6},
  location = {Palma, Illes Balears, Spain},
}
@PHDTHESIS{Rohr08WorkloadSensitiveTimingBehaviorAnomalyDetectionForAutomaticSoftwareFaultLocalization,
  author = {Matthias Rohr},
  title = {Workload-sensitive Timing Behavior Anomaly Detection for Automatic
	Software Fault Localization},
  school = {Department for Computing Science, University of Oldenburg, Oldenburg,
	Germany},
  year = {2008},
  note = {work in progress},
}
@INPROCEEDINGS{ShamsKrishnamurthyFar06AModelBasedApproachForTestingThePerformanceOfWebApplications,
  author = {Mahnaz Shams and Diwakar Krishnamurthy and Behrouz Far},
  title = {A Model-based Approach for Testing the Performance of Web Applications},
  booktitle = {Proceedings of the International Workshop on Software Quality Assurance
	(SOQUA '06)},
  year = {2006},
  pages = {54--61},
  publisher = {ACM},
  abstract = {Poor performance of Web-based systems can adversely impact the profitability
	of enterprises that rely on them. As a result, effective performance
	testing techniques are essential for understanding whether a Web-based
	system will meet its performance objectives when deployed in the
	real world. The workload of a Web-based system has to be characterized
	in terms of sessions; a session being a sequence of inter-dependent
	requests submitted by a single user. Dependencies arise because some
	requests depend on the responses of earlier requests in a session.
	To exercise application functions in a representative manner, these
	dependencies should be reflected in the synthetic workloads used
	to test Web-based systems. This makes performance testing a challenge
	for these systems. In this paper, we propose a model-based approach
	to address this problem. Our approach uses an application model that
	captures the dependencies for a Web-based system under study. Essentially,
	the application model can be used to obtain a large set of valid
	request sequences representing how users typically interact with
	the application. This set of sequences can be used to automatically
	construct a synthetic workload with desired characteristics. The
	application model provides an indirection which allows a common set
	of workload generation tools to be used for testing different applications.
	Consequently, less effort is needed for developing and maintaining
	the workload generation tools and more effort can be dedicated towards
	the performance testing process.},
  doi = {10.1145/1188895.1188909},
  isbn = {1-59593-584-3},
  location = {Portland, Oregon},
  review = {1. Introduction
	
	- General issues concerning synthetic workload generation for SESSION-BASED
	SYSTEM.
	
	- Our approach uses an application model that CAPTURES the APPLICATION
	LOGIC of a SESSION-BASED SYSTEM under study.
	
	
	- advantages of this approach over the traditional approach:
	
	 * easy to create controlled workloads
	
	 * application model essentially makes the WORKLOAD GENERATION TOOLS
	INDEPENDENT OF THE SYSTEM UNDER STUDY
	
	 For example, by specifying different application models the same
	set of tools can be used to test an e-commerce system, 
	
	 a modified version of the ecommerce system and an online auction
	system
	
	
	2 Background and related work
	
	- GENERATING SYNTHETIC WEB WORKLOADS typically involves 2 STEPS: 
	
	 * TRACE GENERATION and 
	
	 * REQUEST GENERATION.
	
	- Requests for session-based systems can be split into two parts:
	
	
	 1) a request type; and 
	
	 2) a name-value list.
	
	- Presents FSM-based techniques (also CBMGs)
	
	- Both the FSM-based approaches have several LIMITATIONS that may
	prevent them from meeting the performance testing requirements for
	session-based system
	
	 1) INABILITY to fully support INTER-REQUEST DEPENDENCIES
	
	 2) LACK of support for DATA DEPENDENCIES
	
	- In this paper, we PROPOSE a new application MODELING METHODOLOGY
	to HANDLE INTER-REQUEST DEPENDENCIES and DATA DEPENDENCIES.
	
	- The methodology RELIES ON Extended Finite State Machines (EFSMs).
	
	
	 EFSMs can model applications with higherorder request dependencies
	W/O ENCOUNTERING the STATE EXPLOSION PROBLEM. 
	
	 Consequently, they are better suited for modeling Web-based applications.
	
	- uses modified version of SWAT (Session-Based Web Application Tester)
	
	 input: application model under study
	
	 application and workload models are used by SWAT's TRACE GENERATION
	ALGORITHM to create a synthetic workload that has the
	
	 correct inter-request dependencies
	
	
	3. Overview of the Model-based Performance Testing Approach
	
	- Tester PROVIDES APPLICATION MODEL that captures the INTER-REQUEST
	DEPENDENCIES and DATA DEPENDENCIES for the system under study (section
	4)
	
	
	 Application Model -> (SEQUENCE GENERATOR ->) SESSIONLETS (valid sequence
	of request types).
	
	 Input to SWAT: Workload model, trace of sessionlets, application
	model
	
	
	 Presentation od SWAT's technique of trace generation
	
	
	 Use modified version of httperf
	
	
	4. Application Modeling for Performance Testing
	
	 DESCRIBE WEB APPLICATION AS EFSM
	
	4.1 Overview of Modeling Methodology
	
	 Definition of EFSM (non-deterministic with guards (PREDICATES))
	
	 Extensions: - Start and Exit state
	
	 - Each transition has 2 distinct sets of PREDICATES and ACTIONS
	
	 REQUEST DEPENDENCY PREDICATED and REQUEST DEPENDENCY ACTIONS
	
	 DATA DEPENDENCY PREDICATES and DATA DEPENDENCY ACTIONS
	
	 use of variables possible to store additional state information (e.g.
	items_in_cart and signed_on)
	
	 - SELECT function to obtain valid value for request parameter (invoked
	by data dependency actions)
	
	
	4.2 Modeling Inter-Request Dependencies
	
	 In Example: variables items_in_cart and signed_on (must have items
	in cart before purchasing)
	
	 NOTE: Could also represented by States but then exponential number
	of states.
	
	 However, the example presented shows that whether or not a certain
	request type can follow another request type can depend on certain
	complex 
	
	 preconditions being met or not. The EXISTING FSM-BASED APPROACHES
	are NOT EXPRESSIVE ENOUGH to capture such dependencies.
	
	
	4.3 Modeling Data Dependencies
	
	 Appending NAME-VALUE LISTS for the request types in the intermediate
	trace
	
	 Variables of form action.variable (e.g. Add.Item_ID)
	
	
	 - TESTER-SPECIFIABLE PARAMETERS:
	
	 provided by testers as input (usernames, passwords)
	
	 Subdivided into: 
	
	 * INDEPENDENT parameters (no dependency with other chosen value)
	
	 * INTER-DEPENDENT parameters (controlled by value chosen for other
	independent parameter, 
	
	 e.g. password depends on username).
	
	 - SESSION-DEPENDENT (depend on sequence of URLs already submitted):
	
	 e.g. id of item to delete depends on items in shopping cart
	
	 Subdivided into:
	
	 * DYNAMICALLY GENERATED parameters (known not before request generation)
	
	 For such parameters, trace generator uses placeholder values,
	
	
	 actual values have to be obtained by parsing responses
	
	 * NON-DYNAMICALLY GENERATED parameters (can be resolved during trace
	generation)
	
	
	 SELECT used in actions to choose parameter values (depends only on
	type of parameter and functions inputs)
	
	
	5. Implementation and Evaluation
	
	
	- developed tools
	
	- TEXT FILE to specify APPLICATION and WORKLOAD model
	
	- MODEL VERIFIER checks for consistency between APPLICATION and WORKLOAD
	model
	
	- Application model used to generate a large trace of sessions for
	PetStore
	
	- submitted traces to Pet Store with httperf
	
	- present some results of respone time measurements
	
	- application model provides an indirection to use common workload
	generation tools},
}

@ARTICLE{WhittakerThomason94AMarkovChainModelForStatisticalSoftwareTesting,
  author = {James A. Whittaker and Michael G. Thomason},
  title = {A Markov Chain Model for Statistical Software Testing},
  journal = {IEEE Transactions on Software Engineering},
  year = {1994},
  volume = {20},
  pages = {812--824},
  number = {10},
}
@inproceedings{ KishonHudakConsel91MonitoringSemanticsAFormalFrameworkForSpecifyingImplementingAndReasoningAboutExecutionMonitors,
	author = "Amir Kishon and Paul Hudak and Charles Consel",
	title = "Monitoring semantics: a formal framework for specifying, implementing, and reasoning about execution monitors",
	booktitle = "Proceedings of the conference on Programming language design and implementation (PLDI '91)",
	year = "1991",
	isbn = "0-89791-428-7",
	pages = "338--352",
	doi = "10.1145/113445.113474",
	publisher = "ACM",
}

@ARTICLE{ParsonsMosMurphy06NonIntrusiveEndToEndRuntimePathTracingForJ2EESystems,
  author = {T. Parsons and A. Mos and J. Murphy},
  title = {Non-intrusive end-to-end runtime path tracing for J2EE systems},
  journal = {IEE Proceedings - Software},
  year = {2006},
  volume = {153},
  pages = {149--161},
  number = {4},
  month = {aug}
} 

@article{RenesseBirmanVogels03AstrolabeARobustAndScalableTechnologyForDistributedSystemsMonitoringManagementAndDataMining,
author={Robbert van Renesse and Kenneth P. Birman and Werner Vogels},
title={Astrolabe: A Robust and Scalable Technology for Distributed Systems Monitoring, Management, and Data Mining},
journal={Transactions on Computer Systems},
volume={21},
number={3},
month={May},
year={2003},
}

@inproceedings{BridgesMacCabe04ImpulseIntegratedMonitoringAndProfilingForLargeScaleEnvironments,
 author = {Patrick G. Bridges and Arthur B. MacCabe},
 title = {IMPuLSE: integrated monitoring and profiling for large-scale environments},
 booktitle = {LCR '04: Proceedings of the 7th workshop on Workshop on languages, compilers, and run-time support for scalable systems},
 year = {2004},
 pages = {1--5},
 doi = {10.1145/1066650.1066652},
 publisher = {ACM},
 }

@article{LubomirKaliberaTuma05RepeatedResultsAnalysisForMiddlewareRegressionBenchmarking,
 author = {Lubom\'{\i}r Bulej and Tom\'{a}\v{s} Kalibera and Petr T\r{u}ma},
 title = {Repeated results analysis for middleware regression benchmarking},
 journal = {Performance Evaluation},
 volume = {60},
 number = {1-4},
 year = {2005},
 issn = {0166-5316},
 pages = {345--358},
 doi = {10.1016/j.peva.2004.10.013},
 publisher = {Elsevier Science Publishers B. V.},
 address = {Amsterdam, The Netherlands, The Netherlands},
 }

@article{AvritzerWeyuker97MonitoringSmoothlyDegradingSystemsForIncreasedDependability,
 author = {Alberto Avritzer and Elaine J. Weyuker},
 title = {Monitoring Smoothly Degrading Systems for Increased Dependability},
 journal = {Empirical Softw. Engg.},
 volume = {2},
 number = {1},
 year = {1997},
 issn = {1382-3256},
 pages = {59--77},
 doi = {A:1009794200077},
 publisher = {Kluwer Academic Publishers},
 address = {Hingham, MA, USA},
 }

@article{AvritzerBondiWeyuker07EnsuringSystemPerformanceForClusterAndSingleServerSystems,
 author = {Alberto Avritzer and Andr\'{e} Bondi and Elaine J. Weyuker},
 title = {Ensuring system performance for cluster and single server systems},
 journal = {J. Syst. Softw.},
 volume = {80},
 number = {4},
 year = {2007},
 issn = {0164-1212},
 pages = {441--454},
 doi = {10.1016/j.jss.2006.07.020},
 publisher = {Elsevier Science Inc.},
 address = {New York, NY, USA},
 }

@inproceedings{HamouLhadj04ASurveyOfTraceExplorationToolsAndTechniques,
 author = {Abdelwahab Hamou-Lhadj and Timothy C. Lethbridge},
 title = {A survey of trace exploration tools and techniques},
 booktitle = {Proceedings of the 2004 conference of the Centre for Advanced Studies on Collaborative research CASCON'04},
 year = {2004},
 pages = {42--55},
 publisher = {IBM Press},
 }


@PHDTHESIS{HamouLhadj05TechniquesToSimplifyTheAnalysisOfExecutionTracesForProgramComprehension, 
  AUTHOR = {Abdelwahab Hamou-Lhadj},
  TITLE = {Techniques to Simplify the Analysis of Execution Traces for Program Comprehension},
  SCHOOL = {Ottawa-Carleton Institute for Computer Science, School of Information Technology and Engineering (SITE), University of Ottawa},
  YEAR = {2005},
}

@inproceedings{GovindrajNarayananThomasNairP06OnUsingAOPforApplicationPerformanceManagement,
author = "Kamal Govindraj and Srinivasa Narayanan and Binil Thomas and Prashant Nair and Subin P",
title = "On using {AOP} for {A}pplication {P}erformance {M}anagement",
editor = {Matt Chapman and Alexandre Vasseur and G\"{u}nter Kniesel},
booktitle = "AOSD 2006 - Industry Track Proceedings (Technical Report IAI-TR-2006-3, University of Bonn)",
ISSN = "0944-8535", 
year = 2006, 
month = mar,
pages = {18--30},
}


@article{citeulike:63916,
	author = {Cousineau, Denis   and Brown, Scott   and Heathcote, Andrew  },
	citeulike-article-id = {63916},
	issn = {0743-3808},
	journal = {Behavior Research Methods, Instruments, \& Computers},
	month = {November},
	number = {4},
	pages = {742--756},
	publisher = {Psychonomic Society Publications},
	title = {Fitting distributions using maximum likelihood: Methods and packages},
	url = {http://www.ingentaconnect.com/content/psocpubs/brm/2004/00000036/00000004/art00018},
	volume = {36},
	year = {2004}
}


@article{BriandLabicheLeduc06TowardTheReverseEngineeringOfUMLSequenceDiagramsForDistributedJavaSoftware,
author = {Lionel C. Briand and Yvan Labiche and Johanne Leduc},
title = {Toward the Reverse Engineering of {UML} Sequence Diagrams for Distributed {Java} Software},
journal = {IEEE Transactions on Software Engineering},
volume = {32},
 number = {9},
year = {2006},
month = sep,
 issn = {0098-5589},
pages = {642--663},
		  doi = {10.1109/TSE.2006.96},
 publisher = {IEEE},
	 }

@inproceedings{BriandLabicheMiao03TowardsTheReverseEngineeringOfUMLSequenceDiagrams,
author = {L.C. Briand and Y. Labiche and Y. Miao},
title = {Towards the Reverse Engineering of {UML} Sequence Diagrams},
booktitle = {Proceedings of the 10th Working Conference on Reverse Engineering (WCRE'03)},
ISBN= {0-7695-2027-8},
pages = {57--66},
year = 2003,
}

@inproceedings{Alekseev06AlgorithmsForOptimallyTracingTimeCriticalPrograms,
  author    = {Sergej Alekseev},
  title     = {Algorithms for Optimally Tracing Time Critical Programs},
  booktitle = {Software Engineering Research and Practice},
  year      = {2006},
  pages     = {585-591},
  crossref  = {DBLP:conf/serp/2006-2},
}

% generate Queueing Network from UML models
@inproceedings{CainRajwarMardenLipasti01AnArchitecturalEvaluationOfJavaTPCW,
 author = {Harold W. Cain and Ravi Rajwar and Morris Marden and Mikko H. Lipasti}, 
 title = {An Architectural Evaluation of {Java} {TPC-W}},
 booktitle = {HPCA '01: Proceedings of the 7th International Symposium on High-Performance Computer Architecture},
 year = {2001},
 isbn = {0-7695-1019-1},
 pages = {229--240},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
 }

@inproceedings{Alekseev07JavaDebuggingLaboratoryForAutomaticGenerationAndAnalysisOfTraceData,
  author    = {Sergej Alekseev},
  title     = {{J}ava Debugging Laboratory for Automatic Generation and Analysis of Trace Data},
  booktitle = {Proceedings of the 25th IASTED International Multi-Conference Software Engineering},
  year      = {2007},
  month = feb,
  pages     = {177--182},
  editor	= {Wilhelm Hasselbring},
  publisher = {{ACTA} Press},
}

@proceedings{DBLP:conf/serp/2006-2,
  editor    = {Hamid R. Arabnia and
               Hassan Reza},
  title     = {Proceedings of the International Conference on Software
               Engineering Research and Practice {\&} Conference on Programming
               Languages and Compilers, SERP 2006, Las Vegas, Nevada, USA,
               June 26-29, 2006, Volume 2},
  booktitle = {Software Engineering Research and Practice},
  publisher = {CSREA Press},
  year      = {2006},
  isbn      = {1-932415-91-2},
}

@article{Menasce03WorkloadCharacterization,
author = {Daniel A. Menasce},
title = {Workload Characterization},
journal = {IEEE Internet Computing},
volume = {07},
number = {5},
year = {2003},
issn = {1089-7801},
pages = {89-92},
doi = {10.1109/MIC.2003.1232524},
publisher = {IEEE Computer Society},
address = {Los Alamitos, CA, USA},
}

@InProceedings{KaliberaBulejTuma05AutomatedDetectionOfPerformanceRegressionsTheMonoExperience,
	title = "Automated Detection of Performance Regressions: The Mono Experience",
	author = "Tom{\'a}s Kalibera and Lubom{\'i}r Bulej and Petr Tuma",
	publisher = "IEEE Computer Society",
	year = "2005",
	booktitle = "Proceedings MASCOTS'05",
	ISBN = "0-7695-2458-3",
	pages = "183--190",
	doi = "10.1109/MASCOT.2005.18"
}

@MastersThesis{Focke06PerformanceMonitoringVonMiddlewarebasiertenApplikationen,
	Author = "Focke, Thilo",
	Title = "Performance {M}onitoring von {M}iddleware-basierten {A}pplikationen",
	School = "(Diplomarbeit) University of Oldenburg, Software Engineering Group, Department of Computing Science",
	year = 2006
}

@MastersThesis{Sommer07EvaluationOfControlFlowTracesInSoftwareApplicationsForIntrusionDetection,
	Author = "Sommer, Nils",
	Title = "Evaluation of Control Flow Traces in Software Applications for Intrusion Detection",
	School = "(4 month student project) University of Oldenburg, Software Engineering Group, Department of Computing Science",
	year = 2007
}

@article{BarrettGoldsmith76WhenIsNSufficientlyLarge,
author = {Barrett, J. P. and L. Goldsmith},
year   = 1976, 
title  = {When is N sufficiently large?},
journal = {The American Statistician},
volume = 30,
number = 2,
month = may,
pages = {67--70}
}

@INPROCEEDINGS{MiranskyyMadhavjiGittensDavisonWildingGodwin2007AnIterativeMultiLevelAndScalableApproachToComparingExecutionTraces,
  author = {Andriy V. Miranskyy and Nazim H. Madhavji and Mechelle S. Gittens
    and Matthew Davison and Mark Wilding and David Godwin},
  title = {An iterative, multi-level, and scalable approach to comparing execution traces},
  booktitle = {ESEC-FSE '07: Proceedings of the the 6th joint meeting of the European software engineering conference and the ACM SIGSOFT symposium on the foundations of software engineering},
  year = {2007},
  pages = {537--540},
  publisher = {ACM},
  doi = {10.1145/1287624.1287704},
  isbn = {978-1-59593-811-4},
}

@techreport{MiranskyyMadhavjiGittensDavisonWildingGodwin07AnIterativeMultiLevelAndScalableApproachToComparingExecutionTracesTechReport,
  author = {Andriy V. Miranskyy and Nazim H. Madhavji and Mechelle S. Gittens and Matthew Davison and Mark Wilding and David Godwin},
  title = {An iterative, multi-level, and scalable approach to comparing execution traces},
  institution = {Department of
Computer Science, University of Western Ontario, Canada},
  year = {2007},
  number = "\#686",
}


@techreport{XieNotkin02AnEmpiricalStudyOfJavaDynamicCallGraphExtractors,
  author = "Tao Xie and David Notkin",
  title = "An Empirical Study of {J}ava Dynamic Call Graph Extractors",
  institution = {University of Washington Department of Computer Science and Engineering},
  number = {UW-CSE-02-12-03},
  address = {Seattle, WA, USA},
  month = dec,
  year = 2002,
  }

@inproceedings{FroydMellorCrummeyFowler05LowOverheadCallPathProfilingOfUnmodifiedOptimizedCode,
 author = {Nathan Froyd and John Mellor-Crummey and Rob Fowler},
 title = {Low-overhead call path profiling of unmodified, optimized code},
 booktitle = {Proceedings of the 19th annual international conference on Supercomputing (ICS'05)},
 year = {2005},
 isbn = {1-59593-167-8},
 pages = {81--90},
 doi = {10.1145/1088149.1088161},
 publisher = {ACM},
 }

 @InProceedings{BlackburnGarnerHoffmanKhanMcKinleyBentzurDiwanFeinbergFramptonGuyerHirzelHoskingJumpLeeMossPhansalkarStefanovicVanDrunenDincklageWiedermann,
  title={The {DaCapo} {Benchmarks}: {J}ava Benchmarking Development and Analysis},
  author={Blackburn, S. M. and Garner, R. and Hoffman, C. and Khan, A. M.
      and McKinley, K. S. and Bentzur, R. and Diwan, A. and Feinberg, D. 
      and Frampton, D. and Guyer, S. Z. and Hirzel, M. and Hosking, A.
      and Jump, M. and Lee, H. and Moss, J. E. B. and Phansalkar, A.
      and Stefanovi\'{c}, D. and {VanDrunen}, T. and von~Dincklage, D.
      and Wiedermann, B.},
  booktitle = {Proceedings of the 21st Conference on Object-Oriented Programing, Systems, Languages, and Applications (OOPSLA'06)},
  month = oct,
  year = {2006},
  publisher = {ACM},
}



@MastersThesis{Bernack07ArchitekturmodellierungFuerDenBetriebMiddlewareIntensiverSoftwaresysteme,
	Author = "Bernack, Timo",
	Title = {Architekturmodellierung f\"{u}r den Betrieb middleware-intensiver Softwaresysteme},
	School = "University of Oldenburg, Software Engineering Group, Department of Computing Science",
	year = 2007
}


@MastersThesis{Schwenkenberg07AuswirkungVonProgrammierfehlernAufSoftwarezeitverhalten,
	Author = "Peter Schwenkenberg",
	Title = {Auswirkung von Programmierfehlern auf Softwarezeitverhalten},
	School = "(Diplomarbeit) University of Oldenburg, Software Engineering Group, Department of Computing Science",
	year = 2007,
	month = aug,
}

# trace analysis. Andre :vtl. related work in Sachen rekonstruieren von Traces (Event und Message Traces sehr Ã¤hnlich). Wenn wir alles so ausrollen wÃ¼rden, na dann ... 
@ARTICLE{IsrarWoodsideFranks07InteractionTreeAlgorithmsToExtractEffectiveArchitectureAndLayeredPerformanceModelsFromTraces,
  author = {Tauseef Israr and Murray Woodside and Greg Franks},
  title = {Interaction tree algorithms to extract effective architecture
           and layered performance models from traces},
  journal = {J. Syst. Softw.},
  year = {2007},
  volume = {80},
  pages = {474--492},
  number = {4},
  doi = {10.1016/j.jss.2006.07.019},
  issn = {0164-1212}
}

@article{AriesBanerjeeDillonKowalikLixvar02CapacityAndPerformanceAnalysisOfDistributedEnterpriseSystems,
 author = {James A. Aries and Subhankar Banerjee and Marc S. Brittan and Eric Dillon and Janusz S. Kowalik and John P. Lixvar},
 title = {Capacity and performance analysis of distributed enterprise systems},
 journal = {Communications of the {ACM}},
 volume = {45},
 number = {6},
 year = {2002},
 issn = {0001-0782},
 pages = {100--105},
 doi = {10.1145/508448.508455},
 publisher = {ACM},
 address = {New York, NY, USA},
 }

@Book{MenasceAlmeida00ScalingForEbusinessTechnologiesModelsPerformanceAndCapacityPlanning,
  author =	"D. A. Menasc\'e and V. A. F. Almeida",
  title =	"Scaling for {E}-Business: Technologies, Models, Performance, and Capacity Planning",
  publisher =	"Prenctice Hall",
  year = 	"2000",
}

@Article{BalsamoMarcoInverardiSimeoni04ModelBasedPerformancePredictionInSoftwareDevelopmentASurvey,
  title =	"Model-Based Performance Prediction in Software Development: {A} Survey",
  author =	"Simonetta Balsamo and Antinisca Di Marco and Paola
		 Inverardi and Marta Simeoni",
  journal =	"IEEE Trans. Software Eng",
  year = 	"2004",
  number =	"5",
  volume =	"30",
  pages =	"295--310",
  doi =  	"10.1109/TSE.2004.9",
}




%string similarity
@Book{Aoe94StringPatternMatchingStrategies,
  editor =	"J.-I. Aoe",
    title =	"String pattern matching strategies",
	  publisher =	"IEEE",
	    year = 	"1994",
		}

@article{ Stransky06AutomatisierteLokalisierungVonFehlerursachenBeiPerformanceProblemenInJ2EEAnwendungen,
	Author = "Stransky, Frank",
	Title = "{A}utomatisierte {L}okalisierung von {F}ehlerursachen bei {P}erformance-{P}roblemen in {J2EE} {A}nwendungen",
	journal = "Individuelles Project (Bachelor Thesis)",
	publisher = "University of Oldenburg",
	year = 2006
}

@article{ ChervenakSchopfPearlmanSuBharathiCinquiniArcyMillerBernholdt06MonitoringTheEarthSystemGridWithMDS4,
	Author = "Ann Chervenak and Jennifer M. Schopf and Laura Pearlman amd Mei-Hui Su amd Shishir Bharathi and Luca Cinquini and Mike D'Arcy and Neill Miller and David Bernholdt",
	year = "2006",
	title = "Monitoring the Earth System Grid with MDS4",
	doi = "10.1109/E-SCIENCE.2006.102",
	publisher = "IEEE Computer Society",
	address = "Los Alamitos, CA, USA",
	journal = "e-science, Second IEEE International Conference on e-Science and Grid Computing (e-Science'06)",
	volume = "0",
	isbn = "0-7695-2734-5",
	pages = "69",
	note = "Monitoring can support failure diagnosis in Grid Systems with complex workflows."
}

@InProceedings{ MosMurphy02AFrameworkForPerformanceMonitoringModellingAndPredictionOfComponentOrientedDistributedSystems,
	title = "A framework for performance monitoring, modelling and prediction of component oriented distributed systems",
	author = "Adrian Mos and John Murphy",
	year = "2002",
	booktitle = "Workshop on Software and Performance",
	pages = "235--236",
	doi = "10.1145/584369.584403"
}

@InProceedings{MosMurphy04COMPASAdaptivePerformanceMonitoringOfComponentBasedSystems,
	title = "COMPAS: Adaptive Performance Monitoring of Component-Based Systems",
	author = "Adrian Mos and John Murphy",
	year = "2004",
	month = "May",
	booktitle = "Proc. of the 2nd ICSE Workshop on Remote Analysis and Measurement of Software Systems (RAMSS '04)",
	pages = "35--40",
	publisher = "IEE Press",
	ISBN = "0-86341-430-3",
	doi = "10.1049/ic:20040348",
	abstract = "A performance monitoring framework for adaptive instrumentation and diagnosis is presented. Instrumentation is performed by low-overhead monitoring probes which are automatically activated and deactivated based on runtime conditions. Both a collaborative distributed model and a centralised model for assisting the diagnosis and adaptation processes are presented. The framework targets component-based systems in general and J2EE in particular."
}

@article{ Rogers05LessonsFromTheFloor,
	author = "Daniel Rogers",
	title = "Lessons from the floor",
	journal = "Queue",
	volume = "3",
	number = "10",
	year = "2005",
	issn = "1542-7730",
	pages = "26--32",
	doi = "10.1145/1113322.1113334",
	publisher = "ACM",
}

@article{ Paxson94EmpiricallyDerivedAnalyticModelsOfWideAreaTCPConnections,
	author = "V. Paxson",
	title = "Empirically-Derived analytic Models of Wide-Area TCP Connections",
	journal = "IEEE/ACM Transactions on Networking",
	volume = "2",
	number = "4",
	year = "1994"
}

@inproceedings{ AuYeungDingleKnottenbelt04EfficientApproximationOfResponseTimeDensitiesAndQuantilesInStochasticModels,
	author = "S.W.M. Au-Yeung and N.J. Dingle and W.J. Knottenbelt",
	title = "Efficient Approximation of Response Time Densities and Quantiles in Stochastic Models",
	booktitle = "Proceedings of the 4th International Workshop on Software and Performance (WOSP '04)",
	year = "2004",
	isbn = "1-58113-563-7",
	pages = "151--155"
}

@article{ Hoffman05MonitoringAtYourService,
	author = "Bill Hoffman",
	title = "Monitoring, at your service",
	journal = "Queue",
	volume = "3",
	number = "10",
	year = "2005",
	issn = "1542-7730",
	pages = "34--43",
	doi = "10.1145/1113322.1113335",
	publisher = "ACM",
}

@InProceedings{ OrsoLiangHarroldLipton02GammaSystemContinuousEvolutionOfSoftwareAfterDeployment,
	title = "Gamma system: continuous evolution of software after deployment",
	author = "Alessandro Orso and Donglin Liang and Mary Jean Harrold and Richard J. Lipton",
	pages = "65--69",
	ISSN = "0163-5948",
	editor = "Phyllis G. Frankl",
	booktitle = "Proceedings of the {ACM} {SIGSOFT} 2002 International Symposium on Software Testing and Analysis ({ISSTA}-02)",
	month = jul,
	series = "SOFTWARE ENGINEERING NOTES",
	volume = "27",
	number = "4",
	publisher = "ACM",
	address = "New York",
	year = "2002",
	abstract = "In this paper, we present the Gamma system---a new approach for continuous improvement of software systems after their deployment. The Gamma system facilitates remote monitoring of deployed software using a revolutionary approach that exploits the opportunities presented by a software product being used by many users connected through a network. Gamma splits monitoring tasks across different instances of the software, so that partial information can be collected from different users by means of light-weight instrumentation, and integrated to gather the overall monitoring information. This system enables software producers (1) to perform continuous, minimally intrusive analyses of their software's behavior, and (2) to use the information thus gathered to improve and evolve their software. We describe the Gamma system and its underlying technology in detail, and illustrate the different components of the system. We also present a prototype implementation of the system and show our initial experiences with it.",
	doi = "566172.566182"
}

@inproceedings{ HarkemaQuartelGijsenVandermei02PerformanceMonitoringOfJavaApplications,
	author = "M. Harkema and D. Quartel and B. M. M. Gijsen and R. D. van der Mei",
	title = "Performance monitoring of java applications",
	booktitle = "Proceedings of the 3rd international workshop on Software and performance (WOSP '02)",
	year = "2002",
	isbn = "1-58113-563-7",
	pages = "114--127",
	doi = "10.1145/584369.584388",
	publisher = "ACM",
}

@inproceedings{ WybranietzHaban88MonitoringAndPerformanceMeasuringDistributedSystemsDuringOperation,
	author = "D. Wybranietz and D. Haban",
	title = "Monitoring and performance measuring distributed systems during operation",
	booktitle = "Proceedings of the 1988 ACM SIGMETRICS conference on Measurement and modeling of computer systems (SIGMETRICS '88)",
	year = "1988",
	isbn = "0-89791-254-3",
	pages = "197--206",
	doi = "10.1145/55595.55618",
	publisher = "ACM",
}

@article{ Lucas71PerformanceEvaluationAndMonitoring,
	author = "Henry Lucas, Jr.",
	title = "Performance Evaluation and Monitoring",
	journal = "Computer Surveys",
	volume = "3",
	number = "3",
	year = "1971",
	issn = "0360-0300",
	pages = "79--91",
	doi = "10.1145/356589.356590",
	publisher = "ACM",
}

@article{ JoyceLomowSlindUnger87MonitoringDistributedSystems,
	author = "Jeffrey Joyce and Greg Lomow and Konrad Slind and Brian Unger",
	title = "Monitoring distributed systems",
	journal = "Transactions on Computer Systems",
	volume = "5",
	number = "2",
	year = "1987",
	issn = "0734-2071",
	pages = "121--150",
	doi = "10.1145/13677.22723",
	publisher = "ACM",
}

@article{ Lamport78TimeClocksAndTheOrderingOfEventsInADistributedSystem,
	author = "Leslie Lamport",
	title = "Time, clocks, and the ordering of events in a distributed system",
	journal = "Commun. ACM",
	volume = "21",
	number = "7",
	year = "1978",
	issn = "0001-0782",
	pages = "558--565",
	doi = "10.1145/359545.359563",
	publisher = "ACM",
}

@inproceedings{ AbduLutfiyyaBauer96InvestigatingMonitoringConfigurations,
	author = "Hasina Abdu and Hanan Lutfiyya and Michael A. Bauer",
	title = "Investigating monitoring configurations",
	booktitle = "Proceedings of the symposium on Applied Computing table of contents",
	year = "1996",
	isbn = "0-89791-820-7",
	pages = "366--373",
	doi = "10.1145/331119.331208",
	publisher = "ACM",
}

@inproceedings{ BowringOrsoHarrold02MonitoringDeployedSoftwareUsingSoftwareTomography,
	author = "Jim Bowring and Alessandro Orso and Mary Jean Harrold",
	title = "Monitoring deployed software using software tomography",
	booktitle = "Proceedings of the workshop on Program analysis for software tools and engineering (PASTE '02)",
	year = "2002",
	isbn = "1-58113-479-7",
	pages = "2--9",
	doi = "10.1145/586094.586099",
	publisher = "ACM",
}

@book{ Jain91TheArtOfComputerSystemsPerformanceAnalysis,
	author = "Raj Jain",
	title = "The Art of Computer Systems Performance Analysis: Techniques for Experimental Design, Measurement, Simulation, and Modeling",
	month = "April",
	year = "1991",
	publisher = "John Wiley \& Sons",
	isbn = "0471503363",
	pages = 720,
	edition = {first}, 
}

@inproceedings{CrovellaBestavros96SelfSimilarityInWorldWideWebTrafficEvidenceAndPossibleCauses,
author = {M. Crovella and A. Bestavros},
title = {Self-similarity in world-wide web traffic: Evidence and possible causes},
booktitle = {Proceedings of the ACM SIGMETRICS Conference on Measurement of Computer Systems},
year = {1996},
pages = {160--169},
publisher = {\textbf{MISSING}}
}

@inproceedings{ RavadaParkMakki95AutomaticDetectionOfErrorsInDistributedSystems,
	author = "Sivakumar Ravada and E. K. Park and Kia Makki",
	title = "Automatic detection of errors in distributed systems",
	booktitle = "Proceedings of the 23rd annual conference on Computer science (CSC '95)",
	year = "1995",
	isbn = "0-89791-737-5",
	pages = "30--35",
	doi = "10.1145/259526.259534",
	publisher = "ACM",
}

@article{ HabanWybranietz90AHybridMonitorForBehaviorAndPerformanceAnalysisOfDistributedSystems,
	author = "Dieter Haban and Dieter Wybranietz",
	title = "A Hybrid Monitor for Behavior and Performance Analysis of Distributed Systems",
	journal = "IEEE Transactions Software Engineering",
	volume = "16",
	number = "2",
	year = "1990",
	issn = "0098-5589",
	pages = "197--211",
	doi = "10.1109/32.44382",
	publisher = "IEEE",
	address = "Piscataway, NJ, USA"
}

@article{Mielke06ElementsForResponseTimeStatisticsInERPTransactionSystems,
	author = "Andreas Mielke",
	title = "Elements for response-time statistics in {ERP} transaction systems",
	journal = "Performance Evaluation",
	volume = "63",
	number = "7",
	month = jul,
	year = "2006",
	pages = "635--653",
	doi = "j.peva.2005.05.006",
	publisher = "Science Direct",
	abstract = "The aim of this work is to provide some insight into the response-time statistics of enterprise resource planning systems. We propose a simple mean-field model for the response-time distribution in such systems. This model yields a log-normal distribution of response-times. We present data from performance measurements to support the result. The data show that the response-time distribution of a given transaction in a given system is generically a log-normal distribution or, in some situations, a sum of two or more log-normal distributions. Deviations of the log-normal form can often be traced back to performance problems in the system. Consequences for the interpretation of response-time data and for service level agreements are discussed. "
}

@inproceedings{ CaoCheungChan01RuntimeFaultDetectionInMonitorBasedConcurrentProgramming,
	author = "Cao, J. and Cheung, N.K.C. and Chan, A.T.S.",
	title = "Run-time fault detection in monitor based concurrent programming",
	booktitle = "Proceedings of the international conference on Dependable Systems and Networks",
	year = "2001",
	pages = "357--366",
	month = jul,
	doi = "10.1109/DSN.2001.941420",
	publisher = "IEEE"
}

@TechReport{ FrolundKoistinen98QMLALanguageForQualityOfServiceSpecification,
	title = "{QML}: {A} Language for Quality of Service Specification",
	author = "Svend Fr{\/o}lund and Jari Koistinen",
	institution = "Hewlett Packard Laboratories",
	pages = "63",
	number = "HPL-98-10",
	year = "1998",
	month = feb,
	abstract = "To be competitive, future software system must provide not only the correct functionality, but also an adequate level of quality of service (QoS). By QoS, we refer to non-functional properties, such as reliability, performance, timing, and security. To provide an adequate level of QoS, software systems need to include capabilities such as QoS negotiation, monitoring, and adaptation. These capabilities all require the expected and the provided QoS levels to be explicitly specified. QoS can be specified statically at the time of implementation, design, or dynamically at deployment or runtime. To facilitate QoS specification, we present a general Quality of service Modeling Language (QML) for defining multi-category QoS specifications for components in distributed object systems. QML is designed to support QoS in general, encompassing QoS categories such as reliability, performance, security, and timing. QoS specification in QML facilitate the static decomposition of a software system into components with precisely specified QoS boundaries. They also facilitate dynamic QoS functions, such as negotiations, monitoring, and adaptation. QML is designed for a good fit with object-oriented distributed architectures and concepts such as interfaces and inheritance. It also allows specification at a fine-grained level for operations, operation arguments, and attributes. QML enables user- defined QoS categories, and allows specifications within those categories to be associated with component interface definitions. In addition, checks can be made dynamically to determine whether one QML specification satisfies another. This mechanism allows us to dynamically match QoS requirements and offers. Categories and Subject Descriptors: D.2.1 [Software Engineering]: Requirements/Specification - languages; D.3.2 [Programming Languages]: Language Classifications - design languages; F.3.1 [Theory of Computation]: Specifying and Verifying and Reasoning about Programs - specification techniques",
	keywords = "specification languages; QoS; distributed object system"
}

@TechReport{ FrolundKoistinen98QualityOfServiceAwareDistributedObjectSystems,
	author = "Svend Fr{\/o}lund and Jari Koistinen",
	title = "Quality of service aware distributed object systems",
	number = "HPL-98-142",
	month = aug,
	year = "1998",
	institution = "Hewlett Packard, Software Technology Laboratory",
	keywords = "QoS, Distributed object systems, Object interoperability, Object-oriented programming",
	URL = "http://www.hpl.hp.com/techreports/98/HPL-98-142.html"
}

@INPROCEEDINGS{ GarlanSchmerlChang01UsingGaugesForArchitectureBasedMonitoringAndAdaptation,
	AUTHOR = "David Garlan and Bradley Schmerl and Jichuan Chang",
	TITLE = "{Using Gauges for Architecture-Based Monitoring and Adaptation}",
	BOOKTITLE = "Working Conference on Complex and Dynamic Systems Architecture",
	ADDRESS = "Brisbane, Australia",
	MONTH = "Dec",
	YEAR = "2001",
}


%UMLGraph
@article{Spinellis03OnTheDeclarativeSpecificationOfModels,
 author = {Diomidis Spinellis},
 title = {On the Declarative Specification of Models},
 journal = {IEEE Software},
 volume = {20},
 number = {2},
 year = {2003},
 issn = {0740-7459},
 pages = {94--96},
 doi = {10.1109/MS.2003.1184181},
 publisher = {IEEE},
 }

@inproceedings{EllsonGansnerKoutsofiosNorthWoodhull01GraphvizOpenSourceGraphDrawingTools,
  author    = {John Ellson and
               Emden R. Gansner and
               Eleftherios Koutsofios and
               Stephen C. North and
               Gordon Woodhull},
  title     = {Graphviz - Open Source Graph Drawing Tools},
  booktitle = {Graph Drawing},
  year      = {2001},
  pages     = {483-484},
}

@article{IhakaGentleman96RALanguageForDataAnalysisAndGraphics,
title = {R: A Language for Data Analysis and Graphics},
author = {Ross Ihaka and Robert Gentleman},
journal = {Journal of Computational and Graphical Statistics},
volume = {5},
number = {3},
month = sep,
year = 1996, 
pages = {299--314},
doi = {10.2307/1390807}
}

%grid monitoring
@article{ZhangFreschlSchopf07ScalabilityAnalysisOfThreeMonitoringAndInformationSystemsMDS2RGMAHawkeye.pdf,
 author = {Xuehai Zhang and Jeffrey L. Freschl and Jennifer M. Schopf},
 title = {Scalability analysis of three monitoring and information systems: MDS2, R-GMA, and Hawkeye},
 journal = {Journal of Parallel Distributed Computing},
 volume = {67},
 number = {8},
 year = {2007},
 issn = {0743-7315},
 pages = {883--902},
 doi = {10.1016/j.jpdc.2007.03.006},
 publisher = {Academic Press, Inc.},
 }

% (12/2007) not available to me
 @article{TsouloupasDikaiakos07GridBenchAToolForTheInteractivePerformanceExplorationOfGridInfrastructures,
 author = {George Tsouloupas and Marios D. Dikaiakos},
 title = {GridBench: A tool for the interactive performance exploration of Grid infrastructures},
 journal = {Journal of Parallel Distributed Computing},
 volume = {67},
 number = {9},
 year = {2007},
 issn = {0743-7315},
 pages = {1029--1045},
 doi = {10.1016/j.jpdc.2007.04.009},
 publisher = {Academic Press, Inc.},
 address = {Orlando, FL, USA},
 }
@article{LittlewoodPopovStrigini01ModelingSoftwareDesignDiversityAReview,
 author = {Bev Littlewood and Peter Popov and Lorenzo Strigini},
 title = {Modeling software design diversity: a review},
 journal = {ACM Comput. Surv.},
 volume = {33},
 number = {2},
 year = {2001},
 issn = {0360-0300},
 pages = {177--208},
 doi = {10.1145/384192.384195},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }




@book{AndersonLee81FaultTolerancePrinciplesAndPractise,
 author = {T. Anderson and P.A. Lee},
 title = {Fault Tolerance: Principles and Practise},
 year = {1981},
 publisher = "Prentice Hall"
 }

@misc{LyuAvizienis92AssuringDesignDiversityInNVersionSoftwareADesignParadigmForNVersionProgramming,
  author = "M. Lyu and A. Avi\v{z}ienis",
  title = "Assuring Design Diversity in N-Version Software: A Design Paradigm for
    N-Version Programming",
  text = "M.R. Lyu and A. Avi\v{z}ienis, Assuring Design Diversity in N-Version Software:
    A Design Paradigm for N-Version Programming, in Dependable Computing and
    Fault-Tolerant Systems, ed. J.F. Meyer R.D. Schlichting, pp. 197-218, Springer-Verlag/Wien,
    Austria, 1992.",
  year = "1992",
  url = "citeseer.ist.psu.edu/lyu92assuring.html" }

@misc{Bishop98ReviewOfSoftwareDesignDiversity,
  author = "P.G. Bishop",
  year = {1998},
  note = "unpublished - do not use (just review of Avi95))",
  title = "Review of Software Design Diversity",
  url = "citeseer.ist.psu.edu/7379.html" }



@inproceedings{KellyMcviettieMurphy90TechniquesForBuildingDependableDistributedSystemsMultiVersionSoftwareTesting,
 author = {Kelly, J.P.J. and  McVittie, T.I. and  Murphy, S.C.  },
 title = {Techniques for building dependable distributed systems: multi-version software testing},
 booktitle = {Digest of Papers of the 20th International Symposium on Fault-Tolerant Computing (FTCS 20)},
 year = {1990},
 month = jun,
pages = {400--407},
doi = {10.1109/FTCS.1990.89394},
 publisher = {IEEE},
abstract = "To investigate the effectiveness of serializable back-to-back testing and other issues in multiversion software systems, an experiment was performed. The authors discuss the use of multiple implementations for fault prevention throughout development, particularly during the testing phase. The specifications chosen were written in languages that meet industrial standards. The application is a communication protocol based on the Open Systems Interconnection (OSI) layered model adopted by the International Organization for Standardization (ISO) in 1979. The OSI layered model is introduced, the generation of appropriate test cases is discussed, and the testing environment is presented. The serializable back-to-back testing paradigm is presented in detail, along with testing results.",
 }


@Article{Hatton97NVersionDesignVersusOneGoodVersion,
  AUTHOR    = {Hatton, L. },
  TITLE     = "N-version design versus one good version",
  JOURNAL   = {Software},
  YEAR      = 1997,
  MONTH     = {"Nov/Dec"},
  VOLUME    = 14,
  pages     = {71--76},
  NUMBER    = 6,
  doi       = {10.1109/52.636672},
  PUBLISHER = {IEEE},
  ABSTRACT  = "Evidence indicates that n-version development techniques are more reliable than producing one ``good'' version-and cost effective in the long run. The author concludes that diverse, independent channels used in parallel are significantly superior to even the current state of the art, especially in situations where cost of failure is high."
}



@inproceedings{TownendXuMunro01BuildingDependableSoftwareForCriticalApplicationsMultiVersionSoftwareVersusOneGoodVersion,
 author = {Townend, P. and  Jie Xu and  Munro, M.},
 title = {Building dependable software for critical applications: multi-version software versus one good version},
 booktitle = {Proceedings of the Sixth International Workshop on Object-Oriented Real-Time Dependable Systems},
 year = {2001},
 month = jan,
pages = {103--110},
doi = {10.1109/FTCS.1988.5291},
 publisher = {IEEE},
abstract = "An increasing range of industries have a growing dependence on software based systems, many of which are safety-critical, real-time applications that require extremely high dependability. Multi-version programming has been proposed as a method for increasing the overall dependability of such systems. We describe an experiment to establish whether or not the multi-version method can offer increased dependability over the traditional single-version development approach when given the same level of resources. Three programs were developed independently to control a real-time, safety-critical system, and were put together to form a decentralized multi-version system. Three functionally equivalent single-version systems. were also implemented, each using the same amount of development resources as the combined resources of the multi-version system. The analytic results from this experiment show that 1) a single-version system is much more dependable than any individual version of the multi-version system, and 2) despite the poor quality of individual versions, the multi-version method still results in a safer system than the single-version solution. It is evident that regarding the single-version method as a ``seem-to-be'' safer design decision for critical applications is not generally justifiable. We conclude by describing plans for a follow up study based on our initial findings",
 }

@inproceedings{LittlewoodMiller87AConceptualModelOfMultiVersionSoftware,
 author = {B. Littlewood and D. R. Miller},
 title = {A conceptual model of multi-version software},
 booktitle = {Digest of Papers of the 17th Symposium on Fault-Tolerant Computing (FTCS-17) (reprint in Proc. FTCS-25)},
 year = {1987},
pages = {150--155},
 publisher = {IEEE}
 }

@misc{PartridgeKrzanowski97DistinctFailureDiversityInMultiversionSoftware,
  author = "D. Partridge and W. Krzanowski",
  title = "Distinct Failure Diversity in Multiversion Software",
  text = "Technical Report, University of Exeter, UK, Aug. 1997.",
  year = "1997",
  url = "citeseer.ist.psu.edu/partridge97distinct.html" }

*****************************
* N-version programming empirical studies
*****************************




@inproceedings{AvizienisLyuSchuetz88InSearchOfEffectiveDiversityASixLanguageStudyOfFaultTolerantFlightControlSoftware,
 author = {Avi\v{z}ienis, A. and  Lyu, M.R. and  Sch\"{u}tz, W.},
 title = {In search of effective diversity: a six-language study of fault-tolerant flight control software},
 booktitle = {Digest of Papers of the Eighteenth International Symposium on Fault-Tolerant Computing (FTCS) },
 year = {1988},
 month = jun,
pages = {15--22},
doi = {10.1109/FTCS.1988.5291},
 publisher = {IEEE},
abstract = "Multiversion software systems achieve fault tolerance through software redundancy and diversity. The authors investigated multiversion software systems using six different programming languages to create six versions of software for an automatic landing program. The rationale, preparation, execution, and evaluation of this investigation are reported",
 }

@article{KnightLeveson86AnExperimentalEvaluationOfTheAssumptionOfIndependenceInMultiVersionProgramming,
  author = "J.C. Knight and N.C. Leveson",
  title = "An Experimental Evaluation of the Assumption of Independence in Multi-version Programming",
  journal = "Transactions on SoftwareEngineering",
  volume = 12,
  number = 1,
  month = jan,
  pages = {96--109},
  year = "1986"
 }

@Article{LyuHe93ImprovingTheNVersionProgrammingProcessThroughTheEvolutionOfADesignParadigm,
  AUTHOR    = {M. Lyu and Y. He},
  TITLE     = "Improving the N-Version Programming Process Through the Evolution of a Design Paradigm",
  JOURNAL   = {Transactions on Reliability},
  YEAR      = 1993,
  MONTH     = jun,
  VOLUME    = 42,
  NUMBER    = 2,
  PUBLISHER = {IEEE},
  ABSTRACT  = "To encourage a practical application of the N-Version Programming (NVP)
        technique, a design paradigm was proposed and applied in a Six-Language Project. The design
        paradigm improved the development effort of the N-Version Software (NVS), however, there
        were some deficiencies of the design paradigm which lead to the leak of a pair of coincident
        faults. In this paper, we report a similar experiment conducted by using a revised NVP design
        paradigm, identify its impact to the software development process, and demonstrate the improvement
        of the resulting NVS product. This project reused the revised specification of an automatic
        airplane landing problem, and was participated by 40 students at the University of Iowa and the
        Rockwell International. Guided by the refined NVS development paradigm, the students formed
        15 independent programming teams to design, program, test, and evaluate the application. The
        insights, experiences, and learnings in conducting this project are presented. Several quantitative
        measures of the resulting NVS product are provided, and some comparisons with other
        previously-conducted experiments addressed."
}

@inproceedings{ChenAvizienis78NVersionProgrammingAFaultToleranceApproachToReliabilityOfSoftwareOperation,
 author = {Liming Chen and  Avi\v{z}ienis, A.  },
 title = {N-Version Programming: A Fault-Tolerance Approach To Reliability Of Software Operation},
 booktitle = {Digest of Papers of the 8th International Symposium on Fault-Tolerant Computing (FTCS) (reprint in Proc. FTCS-25)},
 year = {1978},
 month = jun,
pages = {3--9},
 publisher = {IEEE}
 }





@TECHREPORT{Chen78ImprovingSoftwareReliabilityByNVersionProgramming,
	author = {Liming Chen},
	title = {Improving Software Reliability by N-version Programming},
	institution = {UCLA Computer Science Dept},
	year = {1978},
	type = {Technical Report},
	key = {UCLA-ENG-7843}
}


@Article{BrilliantKnightLeveson90AnalysisOfFaultsInAnNVersionSoftwareExperiment,
  AUTHOR    = {Brilliant, S.S. and  Knight, J.C. and  Leveson, N.G.},
  TITLE     = "Analysis of faults in an N-version software experiment",
  JOURNAL   = {Transactions on Software Engineering},
  YEAR      = 1990,
  MONTH     = feb,
  VOLUME    = 16,
  NUMBER    = 2,
  pages     = {238--247},
  issn      = {0098-5589},
  doi       = {10.1109/32.44387},
  PUBLISHER = {IEEE},
  ABSTRACT  = "The authors have conducted a large-scale experiment in N-version programming. A total of 27 versions of a program were prepared independently from the same specification at two universities. The results of executing the versions revealed that the versions were individually extremely reliable but that the number of input cases in which more than one failed was substantially more than would be expected if they were statistically independent. After the versions had been executed, the failures of each version were examined and the associated faults located. It appears that minor differences in the software development environment would not have a major impact in reducing the incidence of faults that cause correlated failures"
}

@article{KnightLeveson90AReplyToTheCriticismsOfTheKnightAndLevesonExperiment,
 author = {J.C. Knight and N.C. Leveson},
 title = {A reply to the criticisms of the Knight \& Leveson experiment},
 journal = {SIGSOFT Softw. Eng. Notes},
 volume = {15},
 number = {1},
 year = {1990},
 issn = {0163-5948},
 pages = {24--35},
 doi = {10.1145/382294.382710},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }



@inproceedings{KellyEckhardtVoukMcAllisterCaglayan88ALargeScaleSecondGenerationExperimentInMultiVersionSoftwareDescriptionAndEarlyResults,
 author = {Kelly, J.P.J. and  Eckhardt, D.E., Jr. and  Vouk, M.A. and  McAllister, D.F. and  Caglayan, A.},
 title = {A large scale second generation experiment in multi-version software: description and early results},
 booktitle = {Digest of Papers of the Eighteenth International Symposium on Fault-Tolerant Computing (FTCS)},
 year = {1988},
 month = jun,
 pages = {9--14},
 publisher = {IEEE},
 doi = {10.1109/FTCS.1988.5290},
 abstract = "The second-generation experiment is a large-scale empirical study of the development and operation of multiversion software systems that has engaged researchers at five universities and three research institutes. The authors present the history and current status of this experiment. The primary objective for the second generation experiments is an examination of multiple-version reliability improvement. Experimentation concerns have been focused on the development of multiversion software (MVS) systems, primarily design and testing issues, and the modeling and analysis of these systems. A preliminary analysis of the multiple software versions has been performed and is reported"
 }

@article{KellyMurphy90AchievingDependabilityThroughoutTheDevelopmentProcessADistributedSoftwareExperiment,
 author = {Kelly, J.P.J. and  Murphy, S.C.},
 title = {Achieving dependability throughout the development process: a distributed software experiment},
 journal = {Transactions on Software Engineering},
 volume = {16},
 number = {2},
 year = {1990},
 month = feb,
 issn = {0098-5589},
 pages = {153--165},
 doi = {10.1109/32.44379},
 publisher = {IEEE},
 }


% missing (too old)
%  "Multi-Version Software Development," J.P.J. Kelly, A. Avizienis, B.T. Ulery, B.J. Swain, M.R. Lyu, A.T.Tai, and K.S. Tso, in
% Proceedings IFAC Workshop SAFECOMP'86,Sarlat, France, October 1986, pp. 43-49.


@article{EckhardtCaglayanKnightLeeMcAllisterVoukKelly91AnExperimentalEvaluationOfSoftwareRedundancyAsAStrategyForImprovingReliability,
 author = {Eckhardt, D.E. and  Caglayan, A.K. and  Knight, J.C. and  Lee, L.D. and  McAllister, D.F. and  Vouk, M.A. and  Kelly, J.P.J.},
 title = {An experimental evaluation of software redundancy as a strategy for improving reliability},
 journal = {Transactions on Software Engineering},
 volume = {17},
 number = {7},
 year = {1991},
 month = jul,
 issn = {0098-5589},
 pages = {692--702},
 doi = {10.1109/32.83905},
 publisher = {IEEE},
abstract = "The strategy of using multiple versions of independently developed software as a means to tolerate residual software design faults is discussed. The effectiveness of multiversion software is studied by comparing estimates of the failure probabilities of these systems with the failure probabilities of single versions. The estimates are obtained under a model of dependent failures and compared with estimates obtained when failures are assumed to be independent. The experimental results are based on 20 versions of an aerospace application developed and independently validated by 60 programmers from 4 universities. Descriptions of the application and development process are given, together with an analysis of the 20 versions."
 }



**********************************
* n-version prog with NN ideas
**********************************

@misc{PartridgeGriffithTallisJones97AnExperimentalEvaluationOfMethodologicalDiversityInMultiVersionSoftwareReliability,
  author = "Derek Partridge and Niall Griffith and Dan Tallis and Phillis Jones",
  title = "An Experimental Evaluation of Methodological Diversity in Multiversion
    Software Reliability (unpublished?)",
  year = {1997},
  month = {jun},
  url = "citeseer.ist.psu.edu/339963.html" }

@article{PartridgeYates96EngineeringMultiversionNeuralNetSystems,
    author = "Derek Partridge and W. B. Yates",
    title = "Engineering multiversion neural-net systems",
    journal = "Neural Computation",
    volume = "8",
    number = "4",
    pages = "869-893",
    year = "1996",
    url = "citeseer.ist.psu.edu/94696.html" }

@article{PartridgeYatesPartridge95UseOfMethodologicalDiversityToImproveNeuralNetworkGeneralisation,
  author = "Y. Partridge and W. Yates and D. Partridge",
  title = "Use of methodological diversity to improve neural network generalisation (vol + num unknown)",
  journal = "Neural Computing and Applications",
  year = "1995?",
  url = "citeseer.ist.psu.edu/yates95use.html" }

************************************
* Hybrid systems (Recovery + N-version programming)
*************************************
@article{VoukMcAllisterEckhardtKim93AnEmpiricalEvaluationOfConsensusVotingAndConsensusRecoveryBlockReliabilityInThePresenceOfFailureCorrelation,
  author = "M. Vouk and D. McAllister and D. Eckhardt and K. Kim",
  title = "An Empirical Evaluation of Consensus Voting and Consensus Recovery Block
    Reliability in the presence of Failure Correlation",
  journal = "Journal of Computer Software Engineering",
  volumne = "1",
  number = "4",
  pager = "364--388",
  year = "1993",
  url = "sherry.ifi.unizh.ch/vouk93empirical.html" }

*************************************
* empirical software research
*************************************

@Article{KitchenhamPfleegerPickardJonesHoaglinEmamRosenberg02PreliminaryGuidelinesForEmpiricalResearchInSoftwareEngineering,
  AUTHOR    = {Kitchenham, B.A. and Pfleeger, S.L. and Pickard, L.M. and Jones, P.W. and Hoaglin, D.C. and El Emam, K. and Rosenberg, J.;},
  TITLE     = "Preliminary guidelines for empirical research in software engineering",
  JOURNAL   = {Transactions on Software Engineering},
  YEAR      = 2002,
  MONTH     = aug,
  VOLUME    = 28,
  NUMBER    = 8,
  pages     = {721--734},
  doi       = {10.1109/TSE.2002.1027796 },
  PUBLISHER = {IEEE},
  ABSTRACT  = "Empirical software engineering research needs research guidelines to improve the research and reporting processes. We propose a preliminary set of research guidelines aimed at stimulating discussion among software researchers. They are based on a review of research guidelines developed for medical researchers and on our own experience in doing and reviewing software engineering research. The guidelines are intended to assist researchers, reviewers, and meta-analysts in designing, conducting, and evaluating empirical studies. Editorial boards of software engineering journals may wish to use our recommendations as a basis for developing guidelines for reviewers and for framing policies for dealing with the design, data collection, and analysis and reporting of empirical studies."
}

@article{Brooks97MetaAnalysisASilverBulletForMetaAnalysts,
  author    = {Andy Brooks},
  title     = {Meta Analysis-A Silver Bullet-for Meta-Analysts},
  journal   = {Empirical Software Engineering},
  volume    = {2},
  number    = {4},
  year      = {1997},
  pages     = {333--338},
  doi        = {10.1023/A:1009793700999}
}

@article{Tichy00HintsForReviewingEmpiricalWorkInSoftwareEngineering,
  author    = {Walter F. Tichy},
  title     = {Hints for Reviewing Empirical Work in Software Engineering},
  journal   = {Empirical Software Engineering},
  volume    = {5},
  number    = {4},
  year      = {2000},
  pages     = {309--312}
}

@article{Tichy00ShouldComputerScientistsExperimentMore,
 author = {Tichy, Walter F.},
 title = {Should Computer Scientists Experiment More?},
 journal = {IEEE Computer},
 volume = {31},
 number = {5},
 year = {1998},
 issn = {0018-9162},
 pages = {32--40},
 publisher = {IEEE},
 }

@article{TichyLukowiczPrecheltHeinz95ExperimentalEvaluationInComputerScienceAQuantitativeStudy,
 author = {Walter F. Tichy and Paul Lukowicz and Lutz Prechelt and Ernst A. Heinz},
 title = {Experimental evaluation in computer science: a quantitative study},
 journal = {J. Syst. Softw.},
 volume = {28},
 number = {1},
 year = {1995},
 pages = {9--18},
 doi = {10.1016/0164-1212(94)00111-Y},
 publisher = {Elsevier Science Inc.},
 address = {New York, NY, USA},
 }

@inproceedings{HoestWohlinThelin05ExperimentalContextClassificationIncentivesAndExperienceOfSubjects,
 author = {Martin H\"ost and Claes Wohlin and Thomas Thelin},
 title = {Experimental context classification: incentives and experience of subjects},
 booktitle = {Proceedings of the 27th international conference on Software engineering (ICSE '05)},
 year = {2005},
 isbn = {1-59593-963-2},
 pages = {470--478},
 location = {St. Louis, MO, USA},
 doi = {10.1145/1062455.1062539},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }

@inproceedings{KitchenhamDybaJorgensen04EvidenceBasedSoftwareEngineering,
 author = {Barbara A. Kitchenham and Tore Dyba and Magne Jorgensen},
 title = {Evidence-Based Software Engineering},
 booktitle = {ICSE '04: Proceedings of the 26th International Conference on Software Engineering},
 year = {2004},
 isbn = {0-7695-2163-0},
 pages = {273--281},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
 abstract = "Objective: Our objective is to describe how softwareengineering might benefit from an evidence-based
 approach and to identify the potential difficulties associated with the approach. Method: We compared the
 organisation and technical infrastructure supporting evidence-based medicine (EBM)with the situation in
 software engineering. We consideredthe impact that factors peculiar to software engineering(i.e. the skill
 factor and the lifecycle factor) would have on our ability to practice evidence-based software engineering
 (EBSE).Results: EBSE promises a number of benefits by encouraging integration of research results with a
 view to supporting the needs of many different stakeholdergroups. However, we do not currently have the
 infrastructure needed for widespread adoption of EBSE.The skill factor means software engineering experiments
 are vulnerable to subject and experimenter bias. The lifecycle factor means it is difficult to determine how
  technologies will behave once deployed.Conclusions: Software engineering would benefit from adopting what it
  can of the evidence approach provided that it deals with the specific problems that arise from the
 nature of software engineering."
 }

@BOOK{Prechelt2001KontrollierteExperimenteInDerSoftwaretechnik,
  title = {Kontrollierte Experimente in der Softwaretechnik},
  publisher = {Springer Verlag},
  year = {2001},
  author = {L. Prechelt},
  address = {Berlin},
  isbn = {3-540-41257-3}
}

%in library of Univ. Oldenburg: phi 652 f CH 6897.2
@BOOK{Eberhard99EinfuehrungInDieErkentnisUndWissenschaftstheorie,
  title = {Einf\"uhrung in die Erkentnis- und Wissenschaftstheorie},
  publisher = {Kohlhammer},
  year = {1999},
  author = {Eberhard, Kurt},
  address = {Stuttgard, Germany},
  isbn = {3-17-015486}
}

@incollection{LaprieKanoun96SoftwareReliabilityAndSystemReliability,
  author =       "J.-C. Laprie and K. Kanoun",
  title =        "{Software Reliability and System Reliability}",
  editor =       "M. R. Lyu",
  publisher =    {McGraw-Hill},
  year =         {1996},
  address =     "New York",
  crossref = {Lyu96HandbookOfSoftwareReliabilityEngineering},
  PAGES =       "27--69"
}




@book{Lyu96HandbookOfSoftwareReliabilityEngineering,
author =       "Michael R. Lyu",
  title =        "{Software Reliability Engineering}",
  publisher =    {McGraw-Hill},
  year =         {1996},
  address =     "New York",
  pages =       850,
  edition = 1
}

@article{Seaman99QualitativeMethodsInEmpiricalStudiesOfSoftwareEngineering,
    author = "Seaman, C.B.",
    title = "Qualitative methods in empirical studies of software engineering",
    journal = "Transactions on Software Engineering",
    volume = "25",
    publisher = "IEEE",
    number = "4",
    pages = "557--572",
    month = "July-Aug.",
    year = "1999",
    abstract = "While empirical studies in software engineering are beginning to gain recognition in the research community, this subarea is also entering a new level of maturity by beginning to address the human aspects of software development. This added focus has added a new layer of complexity to an already challenging area of research. Along with new research questions, new research methods are needed to study nontechnical aspects of software engineering. In many other disciplines, qualitative research methods have been developed and are commonly used to handle the complexity of issues involving human behaviour. The paper presents several qualitative methods for data collection and analysis and describes them in terms of how they might be incorporated into empirical studies of software engineering, in particular how they might be combined with quantitative methods. To illustrate this use of qualitative methods, examples from real software engineering studies are used throughout" }

@InProceedings{DawsonBonesOatesBreretonAzumaLou03EmpiricalMethodologiesInSoftwareEngineering,
  author =       {Ray Dawson and Phil Bones and Briony J. Oates and
                  Pearl Brereton and Motoei Azuma and Mary Lou
                  Jackson},
  title =        {Empirical Methodologies in Software Engineering},
  booktitle =    {Proceedings of the Eleventh Annual
                  International Workshop on Software Technology and
                  Engineering Practice (STEP'03)},
  year =         2003,
  isbn =         {0-7695-2218-1},
  pages =        {52--58},
  publisher =    {IEEE},
  address =      {Washington, DC, USA},
  abstract =     { The collection and use of evidence in Software
                  Engineering practice and research are essential
                  elements in the development of the discipline. This
                  paper discusses the need for evidence-based software
                  engineering, the nature of evidence in its various
                  forms and some of the research methodologies used in
                  other disciplines for the collection of evidence,
                  which are also relevant to software engineering. Two
                  frameworks or models are proposed which illustrate
                  the relationships between the methodologies
                  discussed. In particular, the paper highlights the
                  importance and roles of both positivist and
                  interpretivist methods of investigation.},
}


@inproceedings{Basili96TheRoleOfExperimentationInSoftwareEngineeringPastCurrentAndFuture,
 author = {Victor R. Basili},
 title = {The role of experimentation in software engineering: past, current, and future},
 booktitle = {ICSE '96: Proceedings of the 18th international conference on Software engineering},
 year = {1996},
 isbn = {0-8186-7246-3},
 pages = {442--449},
 location = {Berlin, Germany},
 publisher = {IEEE},
 address = {Washington, DC, USA},
 }

@article{BasiliRombach88TheTameProjectTowardsImprovementOrientedSoftwareEnvironments,
  author    = {Victor R. Basili and H. Dieter Rombach},
  title     = {The TAME Project: Towards Improvement-Oriented Software Environments},
  journal   = {Transaction on Software Engineering},
  volume    = {14},
  number    = {6},
  year      = {1988},
  pages     = {758--773},
  publisher = {IEEE},
  doi 	    = {10.1109/32.6156},
}



***********************************
* missing
***********************************


% Konferenz ist nicht online im IEEE erfasst (COMPSAC erst ab 1978),
% Google und citeseer suche blieb auch erfolglos
% Artikel ist primaerer Artikel zu einem Konzept
@inproceedings{AvizienisChen77OnTheImplementationOfNVersionProgrammingForSoftwareFaultToleranceDuringProgramExecution,
  author       = {A. Avi\v{z}ienis and L. Chen},
  title        = {On the implementation of N-version programming for software fault tolerance during program execution},
  booktitle    = {Proceedings of International Conference on Computer Software and Applications (COMPSAC 77)},
  location     = {Chicago},
  publisher    = {IEEE},
  year         = {1977},
  month        = nov,
  pages        = {149--155},
}

%nicht im IEEE online (Transactions on Software Engineering erst sein 1988 erfasst), nicht bei citeseer, nicht ueber Google 
@article{RamamoorthyMokBastaniChinSuzuki81ApplicationOfAMethodologyForTheDevelopmentAndValidationOfReliableProcessControlSoftware,
 author = {C.V. Ramamoorthy and Y.R. Mok and E.B. Bastani and G.H. Chin and K. Suzuki},
 title = {Application of a methodology for the development and validation of reliable process control software},
 journal = {Transactions on Software Engineering},
 volume = {7},
 number = {6},
 year = {1981},
 month = nov,
 pages = {537--555},
 publisher = {IEEE}
 }

%nicht online, keine Datenbank bekannt, Google findet auch kein Dokument 
@inproceedings{DahllLahti80AnInvestigationOfMethodsForProductionAndVerificationOfHighlyReliableSoftware,
 author = {G. Dahll and J. Lahti},
 title = {An investigation of methods for production and verification of highly reliable software},
 booktitle = {Proceedings of the Conference on Safety of Computer Control Systems (SAFECOMP 79)},
 year = {1980},
 pages = {89--94},
 publisher = {Pergamon Press}
 }

%PHD Thesis, not via google reachable
@phdthesis{Kelly82SpecificationOfFaultTolerantMultiVersionSoftwareExperimentalStudiesOfADesignDiversityApproach,
Author = {J.P.J. Kelly},
Title = {Specification of Fault-Tolerant Multi-Version Software: Experimental Studies of a Design Diversity Approach},
School = {University of California},
Year = {1982},
Type = {Ph.{D}. dissertation},
Address = {Los Angeles},
}


%nicht online, same experiment than in Kelly82SpecificationOfFaultTolerantMultiVersionSoftwareExperimentalStudiesOfADesignDiversityApproach
%publication about PhD work. 
@inproceedings{KellyAvizienis83ASpecificationOrientedMultiVersionSoftwareExperiment,
 author = {J.P.J. Kelly and A. Avi\v{z}ienis},
 title = {A Specification-Oriented Multi-Version Software Experiment},
 booktitle = {Proceedings of the 13th International Symposium on Fault-Tolerant Computing (FTCS 13)},
 year = {1983},
 pages = {120},
 publisher = {Pergamon Press}
 }
@InProceedings{RohrGieseckeHasselbring07TraceAwareTimingBehaviorAnomalyDetection,
	title = "Trace-Aware Timing Behavior Anomaly Detection",
	booktitle = "Proceedings International Symposium on Performance 2007, {PERFORMANCE'2007} (submitted manuscript)",
	author = "Matthias Rohr and Simon Giesecke and Wilhelm Hasselbring",
	pages = "14",	
	publisher = "Elsevier",
	year = "2007",
}

@unpublished{Rohr06SoftwareReliabilityFaultLocalizationBasedOnTimingBehaviorAnalysis,
 	author = "Matthias Rohr",
	title  = "Software Reliability \& Fault Localization Based on Timing Behavior Analysis",
	note = "Slides of Short Presentation at BTC AG Oldenburg, 4th December 2006",
	month = dec,
	year = 2006,
}

@PhdThesis{Rohr08WorkloadSensitiveTimingBehaviorAnomalyDetectionForAutomaticSoftwareFaultLocalization,
	Author = "Matthias Rohr",
	Title = "Workload-sensitive Timing Behavior Anomaly Detection for Automatic Software Fault Localization",
	School = "Department for Computing Science, University of Oldenburg, Oldenburg, Germany",
	year = 2008,
	note = {work in progress},
}

@unpublished{Rohr06ResearchProposalTimingBehaviorAnomalyDetectionForAutomaticFaultLocalization,
 	author = "Matthias Rohr",
	title  = "Research proposal: Timing Behavior Anomal Detection for Automatic Fault Localization",
	note = "PhD Research Proposal",
	month = dec,
	year = 2006,
}
@book{SmithWilliams02PerformanceSolutionsAPracticalGuideToCreatingResponsiveScalableSoftware,
author = "Connie U. Smith and Lloyd G. Williams",
title = "Performance Solutions: A practical guide to creating responsive, scalable software",
publisher = "Addision-Wesley",
year = "2001",
isbn = "978-09291722291"
}

@article{Kounev06PerformanceModelingAndEvaluationOfDistributedComponentBasedSystemsUsingQueueingPetriNets,
 author = {Samuel Kounev},
 title = {Performance Modeling and Evaluation of Distributed Component-Based Systems Using Queueing Petri Nets},
 journal = {Transactions on Software Engineering},
 volume = {32},
 number = {7},
 year = {2006},
 issn = {0098-5589},
 pages = {486--502},
 doi = {10.1109/TSE.2006.69},
 publisher = {IEEE},
 }

@article{Hanlon06AConversationWithWernerVogels,
 author = {Charlene O'Hanlon},
 title = {A conversation with Werner Vogels},
 journal = {Queue},
 volume = {4},
 number = {4},
 year = {2006},
 issn = {1542-7730},
 pages = {14--22},
 doi = {10.1145/1142055.1142065},
 publisher = {ACM},
}



@ARTICLE{ArlittKrishnamurthyRolia01CharacterizingTheScalabilityOfALargeWebBasedShoppingSystem,
  author = {Martin F. Arlitt and Diwakar Krishnamurthy and Jerry Rolia},
  title = {Characterizing the Scalability of a Large Web-based Shopping System},
  journal = {ACM Transactions on Internet Technology},
  year = {2001},
  volume = {1},
  pages = {44--69},
  number = {1},
  doi = {10.1145/383034.383036},
}

@inproceedings{BeckerKoziolekReussner07ModelBasedPerformancePredictionWithThePaladioComponentModel,
 author = {Steffen Becker and Heiko Koziolek and Ralf Reussner},
 title = {Model-Based performance prediction with the palladio component model},
 booktitle = {Proceedings of the 6th international workshop on Software and performance (WOSP'07)},
 year = {2007},
 isbn = {1-59593-297-6},
 pages = {54--65},
 doi = {10.1145/1216993.1217006},
 publisher = {ACM},
 }

@TechReport{ChoiParkZhang01AdaptiveRandomSamplingForLoadChangeDetection,
  author =       "Baek-young Choi and Jaesung Park and Zhi-li Zhang",
  title =      "Adaptive Random Sampling for Load Change Detection",
  year =        "2001",
  month = nov,
  institution = {University of Minnesota - Computer Science and Engineering Technical Report Abstract},
  number = {01-041},
  abstract = "Timely detection of changes in traffic is critical for initiating appropriate traffic engineering mechanisms. Accurate measurement of traffic is an essential step towards change detection and traffic engineering.However, precise traffic measurement involves inspecting every packet traversing a link, resulting in significant overhead, particularly on routers with high speed links. Sampling techniques for traffic estimation are proposed as a way to limit themeasurement overhead. Since the efficacy of changedetection depends on the accuracy of trafficestimation, it is necessary to control error inestimation due to sampling. In this paper, we address the problem of bounding sampling error within a pre-specified tolerance level. We derive a relationship between the number of samples, theaccuracy of estimation and the squared coefficient ofvariation of packet size distribution. Based on thisrelationship, we propose an adaptive random sampling technique that determines the minimum samplingprobability adaptively according to traffic dynamics.Using real network traffic traces, we show that theproposed adaptive random sampling technique indeedproduces the desired accuracy, while also yieldingsignificant reduction in the amount of trafficsamples. We also investigate the impact of samplingerrors on the performance of load change detection."
}
 
@inproceedings{GmachRoliaCherkasovaKemper07WorkloadAnalysisAndDemandPredictionOfEnterpriseDataCenterApplications,
author = {Daniel Gmach and Jerry Rolia and Ludmila Cherkasova and Alfons Kemper},
title = {Workload Analysis and Demand Prediction of Enterprise Data Center Applications},
booktitle = {IEEE International Symposium on Workload Characterization},
doi = {10.1109/IISWC.2007.4362193},
year = 2007,
pages = {171--180}
}

@inproceedings{MalkowskiHedwigParekhPuSahai07BottleneckDetectionUsingStatisticalInterventionAnalysis,
author = {Simon Malkowski and Markus Hedwig and Jason Parekh and Calton Pu and Akhil Sahai},
title = {Bottleneck Detection Using Statistical Intervention Analysis},
booktitle = {IFIP/IEEE Distributed Systems: Operations and Management (DSOM'07)},
year = 2007
}

@INPROCEEDINGS{WoodsideFranksPetriu07TheFutureOfSoftwarePerformanceEngineering,
  author = {Murray Woodside and Greg Franks and Dorina C. Petriu},
  title = {The Future of Software Performance Engineering},
  booktitle = {FOSE '07: 2007 Future of Software Engineering},
  year = {2007},
  pages = {171--187},
  address = {Washington, DC, USA},
  publisher = {IEEE Computer Society},
  doi = {10.1109/FOSE.2007.32},
  isbn = {0-7695-2829-5},
}


@ARTICLE{UrgaonkarPacificiShenoySpreitzerTantawi2007AnalyticModelingOfMultitierInternetApplications,
  author = {Bhuvan Urgaonkar and Giovanni Pacifici and Prashant Shenoy and Mike
    Spreitzer and Asser Tantawi},
  title = {Analytic modeling of multitier Internet applications},
  journal = {ACM Trans. Web},
  year = {2007},
  volume = {1},
  pages = {2},
  number = {1},
  address = {New York, NY, USA},
  doi = {10.1145/1232722.1232724},
  issn = {1559-1131},
} 

@inproceedings{ChanPoernomo06QoSAwareModelDrivenArchitectureThroughTheUMLandCIM,
author = {Kenneth Chan and Iman Poernomo},
title = {QoS-Aware Model Driven Architecture through the UML and CIM},
booktitle = {10th International Enterprise Distributed Object Computing Conference EDOC'06},
year = {2006},
issn = {1541-7719},
pages = {345-354},
doi = {10.1109/EDOC.2006.42},
publisher = {IEEE Computer Society},
address = {Los Alamitos, CA, USA},
}

@inproceedings{StewartShen05PerformanceModelingAndSystemManagementForMultiComponentOnlineServices,
 author = {Christopher Stewart and Kai Shen},
 title = {Performance modeling and system management for multi-component online services},
 booktitle = {Proceedings of the Symposium on Networked Systems Design \& Implementation (NSDI'05)},
 year = {2005},
 pages = {71--84},
 publisher = {USENIX},
 }

@inproceedings{BeckerKoziolekReussner07ModelBasedPerforamcePredictionWithThePalladioComponentModel,
 author = {Steffen Becker and Heiko Koziolek and Ralf Reussner},
 title = {Model-Based performance prediction with the palladio component model},
 booktitle = {WOSP '07: Proceedings of the 6th international workshop on Software and performance},
 year = {2007},
 isbn = {1-59593-297-6},
 pages = {54--65},
 doi = {10.1145/1216993.1217006},
 publisher = {ACM},
 }

@inproceedings{AmmonsBallLarus97ExploitingHardwarePerformanceCountersWithFlowAndContextSensitiveProfiling,
 author = {Glenn Ammons and Thomas Ball and James R. Larus},
 title = {Exploiting hardware performance counters with flow and context sensitive profiling},
 booktitle = {Proceedings of the Conference on Programming language design and implementation (PLDI'97)},
 year = {1997},
 isbn = {0-89791-907-6},
 pages = {85--96},
 doi = {10.1145/258915.258924},
 publisher = {ACM},
 }

@INPROCEEDINGS{KoziolekBeckerHappe07PredictingThePerformanceOfComponentBasedSoftwareArchitecturesWithDifferentUsageProfiles,
  AUTHOR = {Heiko Koziolek and Steffen Becker and Jens Happe},
  TITLE = {{Predicting the Performance of Component-based Software Architectures
	with different Usage Profiles}},
  BOOKTITLE = {Proc. 3rd International Conference on the Quality of Software Architectures
	(QoSA'07)},
  YEAR = {2008},
  VOLUME = {4880},
  SERIES = {LNCS},
  PAGES = {145--163},
  PUBLISHER = {Springer},
  doi = {10.1007/978-3-540-77619-2}
}

@INPROCEEDINGS{KoziolekHappeBecKoziolekHappeBecker06ParameterDependentPerformanceSpecificationsOfSoftwareComponents,
  AUTHOR = {Heiko Koziolek and Jens Happe and Steffen Becker},
  TITLE = {{Parameter Dependent Performance Specifications of Software Components}},
  BOOKTITLE = {Proceedings of the 2nd International Conference on the Quality of Software Architectures	(QoSA'06)},
  YEAR = {2006},
  EDITOR = {Christine Hofmeister and Ivica Crnkovic and Ralf Reussner and Steffen Becker},
  VOLUME = {4214},
  SERIES = {Lecture Notes in Computer Science ({LNCS})},
  PAGES = {163--179},
  MONTH = {June},
  PUBLISHER = {Springer},
  DOI = {10.1007/11921998\_15}
}

@article{Spivey04FastAccurateCallGraphProfiling,
 author = {J. M. Spivey},
 title = {Fast, accurate call graph profiling},
 journal = {Software -- Practice \& Experience},
 volume = {34},
 number = {3},
 year = {2004},
 issn = {0038-0644},
 pages = {249--264},
 doi = {10.1002/spe.562},
 publisher = {John Wiley \& Sons, Inc.},
 address = {New York, NY, USA},
 }

@article{Podelka08GaugingPerformanceInTheAbsenceOfMeasures,
author = {Alexander Podelko},
title = {Gauging Performance in the Absence of Measures},
journal = {Software Test \& Performance},
month = jan,
volume = 5,
issue = 1,
issn = {1548-3460},
publisher = {BZ Media},
pages = {18--24},
year = 2008,
}

@article{LashariSrinivas03CharacterizingJavaApplicationPerformance,
author = {Ghulam Lashari and Suresh Srinivas},
title = {Characterizing Java Application Performance},
journal = {Proceedings of the International Parallel and Distributed Processing Symposium (IPDPS'03)},
year = {2003},
isbn = {0-7695-1926-1},
doi = {10.1109/IPDPS.2003.1213265},
publisher = {IEEE Computer Society},
}

@article{BalsamoMorzollaMirandola06EfficientPerformanceModelsInComponentBasedSoftwareEngineering,
author = {Simonetta Balsamo and Moreno Marzolla and Raffaela Mirandola},
title = {Efficient Performance Models in Component-Based Software Engineering},
journal = {Proceedings of 32nd Euromicro Conference on Software Engineering and Advanced Applications (Euromicro-SEAA'06)},
volume = {0},
year = {2006},
issn = {1089-6503},
pages = {64-71},
doi = {10.1109/EUROMICRO.2006.34},
publisher = {IEEE Computer Society},
}

@InProceedings{SabettaKoziolek08MeasuringPerformanceMetricsTechniquesAndTools,
	title = "Measuring Performance Metrics: Techniques and Tools",
	booktitle = "Dependability Metrics",
	series = "Lecture Notes in Computer Science (LNCS)",
	author = "Antonino Sabetta and Heiko Koziolek",
	editor = "Irene Eusgeld and Felix Freiling and Ralf Reussner",
	year = "2008",
	volume = 4909,
	publisher = {Springer},
	isbn = {978-3-540-68946-1}
}

@inproceedings{ShufSteiner07CharacterizingAComplexJ2EEWorkloadAComprehensiveAnalysisAndOpportunitiesForOptimizations,
  author    = {Yefim Shuf and Ian M. Steiner},
  title     = {Characterizing a Complex J2EE Workload: A Comprehensive Analysis and Opportunities for Optimizations},
  booktitle = {International Symposium on Performance Analysis of Systems and Software (ISPASS'07)},
  year      = {2007},
  pages     = {44--53},
  doi        = {10.1109/ISPASS.2007.363735},
  publisher = {IEEE Computer Society},
}

@InProceedings{ImreLevendovskyCharaf07ModelingTheEffectOfApplicationServerSettingsOnThePerformanceOfJ2EEWebApplications,
	title = "Modeling the Effect of Application Server Settings on the Performance of J2EE Web Applications",
	booktitle = "Trends in Enterprise Application Architecture",
	series = "Lecture Notes in Computer Science 4473",
	author = "G\'{a}bor Imre and Tiham\'{e}r Levendovszky and Hassan Charaf",
	year = "2007",
	publisher = "Springer",
	doi = "10.1007/978-3-540-75912-6"
}
@inproceedings{CortellessaMirandola00DerivingAQueueingNetworkBasedPerformanceModelFromUMLdiagrams,
 author = {Vittorio Cortellessa and Raffaela Mirandola},
 title = {Deriving a queueing network based performance model from UML diagrams},
 booktitle = {WOSP '00: Proceedings of the 2nd international workshop on Software and performance},
 year = {2000},
 isbn = {1-58113-195-X},
 pages = {58--70},
 doi = {10.1145/350391.350406},
 publisher = {ACM},
 }


@InProceedings{ClevelandGrosseShyu91LocalRegressionModels,
title = "Local regression models",
author = "William S. Cleveland and Eric Grosse and William M. Shyu",
booktitle = "Statistical Models in {S}",
editor = "John M. Chambers and Trevor J. Hastie",
year = 1991,
pages = {309--376},
isbn = "0-412-28304-X"
}

W.S. Cleveland, E. Grosse and W.M. Shyu (1992) Local regression models. Chapter 8 of Statistical Models in S eds J.M. Chambers and T.J. Hastie, Wadsworth & Brooks/Cole.

@PHDTHESIS{Kalibera06PerformanceInSoftwareDevelopmentCycleRegressionBenchmarking,
	author = "Tom\'{a}\v{s} Kalibera",
	title = "Performance in Software Development Cycle: Regression Benchmarking",
	school = "Charles University in Prague, Faculty of Mathematics and Physics",
	year = 	"2006",
	pages = 174,
}

@inproceedings{UrgaonkarPacificiShenoySpreitzerTantawi05AnAnalyticalModelForMultiTierInternetServicesAndItsApplications,
 author = {Bhuvan Urgaonkar and Giovanni Pacifici and Prashant Shenoy and Mike Spreitzer and Asser Tantawi},
 title = {An analytical model for multi-tier internet services and its applications},
 booktitle = {Proceedings of the international conference on Measurement and modeling of computer systems ({SIGMETRICS}'05)},
 year = {2005},
 isbn = {1-59593-022-1},
 pages = {291--302},
 doi = {10.1145/1064212.1064252},
 publisher = {ACM},
 }

@inproceedings{GieseckeRohrHasselbring2008ArchitecturalStylesForEarlyGoalDrivenMiddlewareSelection,
author = {Simon Giesecke and Matthias Rohr and Wilhelm Hasselbring},
title = {Architectural Styles for Early Goal-driven Middleware Selection},
booktitle = {Proceedings of the 13th European Conference on Pattern Languages of Programs (EuroPLoP'08)},
year = {2008},
month = jul,
note = {(accepted for publication)},
}


@INPROCEEDINGS{VanHoornRohrHasselbring2008GeneratingProbabilisticAndIntensityVaryingWorkloadForWebBasedSoftwareSystems,
 author = {Andr\'e van Hoorn and Matthias Rohr and Wilhelm Hasselbring},
  title = {Generating Probabilistic and Intensity-varying Workload for Web-based
	Software Systems},
  booktitle = {Performance Evaluation -- Metrics, Models and Benchmarks:
               Proceedings of the SPEC International Performance
               Evaluation Workshop (SIPEW '08)},
  year = {2008},
  editor = {Samuel Kounev and Ian Gorton and Kai Sachs},
  volume = {5119},
  series = {Lecture Notes in Computer Science (LNCS)},
  pages = {124--143},
  month = jun,
  organization = {SPEC},
  publisher = {Springer},
  address = {Heidelberg},  
  doi = {10.1007/978-3-540-69814-2\_9},
  location = {Darmstadt, Germany},
  isbn = {978-3-540-69813-5}
} 



@inproceedings{RohrVanHoornGieseckeMatevskaHasselbringAlekseev08TraceContextSensitivePerformanceProfilingForEnterpriseSoftwareApplications,
author = {Matthias Rohr and Andr\'{e} van Hoorn and Simon Giesecke and Jasminka Matevska and Wilhelm Hasselbring and Sergej Alekseev},
title = {Trace-context sensitive performance profiling for enterprise software applications},
booktitle = {Performance Evaluation -- Metrics, Models and Benchmarks:
               Proceedings of the SPEC International Performance
               Evaluation Workshop (SIPEW '08)},
series = {Lecture Notes in Computer Science (LNCS)},
volume = 5119,
publisher = {Springer},
address = {Heidelberg},
pages = {283--302},
location = {Darmstadt, Germany},
month = jun,
year = {2008},
slides = {http://www.sipew2008.org/presentations/Sipew-MatthiasRohr.pdf},
editor = {Samuel Kounev and Ian Gorton and Kai Sachs},
doi = {10.1007/978-3-540-69814-2\_18},
isbn = {978-3-540-69813-5}
}

# only published in print proceedings
@inproceedings{RohrVanHoornGieseckeMatevskaHasselbring08TraceContextSensitivePerformanceModelsFromMonitoringDataOfSoftwareSystems,
author = {Matthias Rohr and Andr\'{e} van Hoorn and Simon Giesecke and Jasminka Matevska and Wilhelm Hasselbring},
title = {Trace-Context Sensitive Performance Models from Monitoring Data of Software Systems},
editor = {Carl Lebsack},
booktitle = {Proceedings of the Workshop on Tools Infrastructures and Methodologies for the Evaluation of Research Systems (TIMERS'08) at IEEE International Symposium on Performance Analysis of Systems and Software 2008},
month = apr,
year = 2008,
pages = {37--44}
}





@INPROCEEDINGS{RohrGieseckeHasselbringHielHeuvelWeigand06AClassificationSchemeForSelfAdaptationResearch,
  author = {Matthias Rohr and Simon Giesecke and Wilhelm Hasselbring and Marcel
	Hiel and Willem-Jan van den Heuvel and Hans Weigand},
  title = {{A} {C}lassification {S}cheme for {S}elf-adaptation {R}esearch},
  booktitle = {Proceedings of the International Conference on Self-Organization
	and Autonomous Systems In Computing and Communications (SOAS'2006)},
  year = {2006},
  month = sep,
}


@InProceedings{GieseckeRohrHasselbring06SoftwareBetriebsLeitstaendeFuerUnternehmensanwendungslandschaften,
	title = "Software-{B}etriebs-{L}eitst{\"a}nde f{\"u}r {U}nternehmensanwendungslandschaften",
	booktitle = "Proceedings of the Workshop ``{S}oftware-{L}eitst{\"a}nde: {I}ntegrierte {W}erkzeuge zur {S}oftware\-qualit{\"a}ts\-sicherung''",
	series = "Lecture Notes in Informatics",
	publisher = {Gesellschaft f\"{u}r Informatik},
	volume = {P-94},
	author = "Simon Giesecke and Matthias Rohr and Wilhelm Hasselbring",
	year = "2006",
	month = oct,
	pages = "110--117",
	ISBN = "978-3-88579-188-1",
	abstract = {In Kontrollzentren für Telefon-, Verkehrs- oder Energieversorgungsnetzen werden Leitstände verwendet, um dem Betriebspersonal einen schnellen Überblick über die Netzarchitektur und deren gegenwärtige Eigenschaften (z.B. Auslastung) zu bieten. Leitstände sind ein grundlegender Bestandteil von Kontrollzentren z.B. für Energieversorgungsnetze. Für Softwaresysteme sind solche Überwachungs- und Steuerungssysteme bislang wenig verbreitet. Leitstände können bei der Systemüberwachung und dem Erkennen und Beheben von Störungen helfen, da Betriebsdaten im Zusammenhang Überblickt werden können.Wir charakterisieren Software-Betriebs-Leitstände mit Hilfe einer Taxonomie von Software-Leitständen und beschreiben Anforderungen an solche Leitstände, beispielhaft für JavaEE-basierte Systeme.},
	keywords = {Software-Betriebs-Leitstände, Software-Cockpit},
}

@InProceedings{RohrBoskovicGieseckeHasselbring06ModelDrivenDevelopmentOfSelfManagingSoftwareSystems,
	title = "Model-driven Development of Self-managing Software Systems",
	booktitle = "Proceedings of the Workshop ``Models@run.time'' at the 9th International Conference on Model Driven Engineering Languages and Systems (MoDELS/UML'06) 2006",
	author = "Matthias Rohr and Marko Boskovic and Simon Giesecke and Wilhelm Hasselbring",
	year = "2006",
	month = oct,
	abstract = {
The promise of self-management is to increase the dependability of complex software systems and its quality-of-service. However, self-management is a very complex task if implemented manually at code level. It introduces high risks to the system's maintainability and dependability. Model-driven development of self-management at the architectural level is a promising alternative to manual low-level approaches.

This paper outlines a model-driven approach for the model-driven realisation of self-management. The core of the approach are meta-models to specify constraints (based on architectural views), monitoring, and reconfiguration operations. These models can be used to generate selfmanagement consisting of (1.) the monitoring instrumentation, (2.) the runtime model that reflects the current state of the system in causal connection to architectural entities, (3.) the automatic checking of the conformance of the current runtime model to the given constraints, and (4.) the mapping to the reconfiguration operations that are provided by the employed middleware platforms.}

}



%13--16 September 2006, Rothenburg ob der Tauber
@InProceedings{ WintelerRohr06RechtlicheInfektionProprietaererSystemeDurchGPLLizensierteSoftware,
	title = "{R}echtliche {I}nfektion propriet{\"a}rer {S}ysteme durch {GPL}-lizensierte {S}oftware",
	booktitle = "Tagungsband 7. {H}erbstakademie Deutsche Stiftung für Recht und Informatik ``{A}ktuelle {R}echtsfragen von {IT} und {I}nternet''",
	publisher = {Oldenburger Verlag f{\"u}r Wirtschaft, Informatik und Recht},
	author = "Daniel Winteler and Matthias Rohr",
	year = {2006},
	pages = "195--204",
	location = {Rothenburg ob der Tauber, Germany}, 
	month = sep,
	ISBN = "3-939704-03-2",
	abstract = {Open Source Software (OSS) gewinnt zunehmend an Bedeutung. Die mit Abstand gebräuchlichste Lizenz für OSS ist dabei die GNU General Public License (GPL). Diese bestimmt, dass propriet\"{a}re Software, die gemeinsam mit GPL-lizenzierter Software vertrieben wird, unter bestimmten Voraussetzungen ihrerseits GPL-lizenziert und damit quelloffen gemacht werden muss, andernfalls entfallen die an der OSS einger\"{a}umten Nutzungsrechte und eine Klage wegen Urheberrechtsverletzung droht. Am Beispiel von Ger\"{a}tetreibern für das GPL-lizenzierte Betriebssystem Linux und die f\"{u}r den Linux-Kernel diskutierte Lizenzabfrage sollen Reichweite und Grenzen der rechtlichen ,,Infektion'' propriet\"{a}rer Software durch GPL-lizenzierte Software aufgezeigt werden.}
}

@inproceedings{RohrHoornMatevskaSommerStoeverGieseckeHasselbring08KiekerContinuousMonitoringAndOnDemandVisualizationOfJavaSoftwareBehavior,
  author    = {Matthias Rohr and Andr\'{e} van Hoorn and Jasminka Matevska and  Nils Sommer and Lena Stoever and Simon Giesecke and Wilhelm Hasselbring},
  title     = {Kieker: Continuous Monitoring and on demand Visualization of {J}ava Software Behavior},
  booktitle = {Proceedings of the IASTED International Conference on Software Engineering 2008},
  year      = {2008},
  publisher = {ACTA Press},
  month		= feb,
  isbn = {978-0-88986-715-4},
  pages = {80--85},
  abstract = {Software behavior visualizations such as UML Sequence Diagrams are valuable to continuous program comprehension and analysis. This paper introduces an approach and implementation to the continuous monitoring and on demand visualization of software behavior, with a focus on multi-user Java Web applications. Our tool, called Kieker, monitors response times and control-flow for selected operations of a software application. The monitoring overhead is intended to be small enough to continuously monitor a selection of operations during normal operation. Besides monitoring, Kieker offers the reconstruction and visualization of models of current or past software system behavior in terms of UML Sequence Diagrams, Markov chains, Component Dependency Graphs, Trace Timing Diagrams, as well as Execution and Message trace models.},
}

@InProceedings{Rohr07TimingBehaviorAnomalyDetectionForAutomaticFailureDetectionAndDiagnosis,
	title = "Timing {B}ehavior {A}nomaly {D}etection for {A}utomatic {F}ailure {D}etection and {D}iagnosis",
	booktitle = "Proceedings of the Dagstuhl Graduate School Meeting 2007 ``Dagstuhl Zehn plus Eins'' ",
	author = "Matthias Rohr",
	year = "2007",
	month = jun,
	publisher = {Verlagshaus Mainz GmbH Aachen},
	isbn = "3-86130-882-7"
}

@InProceedings{Rohr05ReliabilityPredictionOfDynamicDistributedComponentBasedSoftwareSystems,
	title = "Reliability {P}rediction of {D}ynamic, {D}istributed, {C}omponent-based {S}oftware {S}ystems",
	booktitle = "Proceedings of the ``Treffen der Graduiertenkollegs 2005'', Dagstuhl",
	author = "Matthias Rohr",
	year = "2005",
}

@InProceedings{Rohr06TimingBehaviorAnomalyDetectionForFaultLocalization,
	title = "Timing {B}ehavior {A}nomaly {D}etection for {F}ault {L}ocalization",
	author = "Matthias Rohr",
	booktitle = "Proceedings of the International Research Training Groups Workshop, Dagstuhl",
	crossref = {dagstuhl06res},
	isbn ={3-936771-871},
	pages = {20},
	year = "2006",
}

@proceedings{dagstuhl06res,
	editor = {Jens Happe and Heiko Koziolek and Matthias Rohr and Christian Strom and Timo Warns},
	title = "Proceedings of the International Research Training Groups Workshop, Dagstuhl",
	isbn = {3-936771-871},
	year = "2006",
	month = nov,
}


@MastersThesis{Rohr04AutomaticFaceDetectionAndRecognitionBasedOnEigenfacesAndColor,
	Author = "Matthias Rohr",
	Title = "Automatic {F}ace {D}etection and {R}ecognition {B}ased on {E}igenfaces and {C}olor",
	School = "Dept. of Computer Science and Software Engineering, Monash University, Australia",
	year = 2004,
	pages = 92,
}

@InProceedings{Rohr05ExampleOfEmpiricalResearchNVersionProgramming,
	title = "Example Of {E}mpirical {R}esearch: n-{V}ersion {P}rogramming",
	booktitle = "Research Methods in Software Engineering",
	series = "Trustworthy Software Systems",
	author = "Matthias Rohr",
	publisher = "GITO Verlag",
	address = "Berlin",
	isbn = "3-936771-57-x",
	pages = "39--62",
	year = "2005",
	LANGUAGE = "english",
	editor = "Wilhelm Hasselbring and Simon Giesecke",
	volume = 1
}

@Article{HasselbringRohrTaegerWinteler06LiabilityRisksInReUsingThirdPartySoftware,
	title = "Liability {R}isks in {R}eusing {T}hird-{P}arty {S}oftware",
	author = "Wilhelm Hasselbring and Matthias Rohr and J{\"u}rgen Taeger and Daniel Winteler",
	journal = "Communications of the ACM",
	volume = {49},
 	number = {12},
	year = {2006},
 	issn = {0001-0782},
 	pages = {144},
 	doi = {10.1145/1183236.1183258},
 	publisher = {ACM Press},
 	address = {New York, NY, USA},
}

@book{eprint-id403,
title = {Trustworthy {S}oftware {S}ystems: {A} {D}iscussion of {B}asic {C}oncepts and {T}erminology},
author = {Becker, Steffen and Boscovic, Marco and Dhama, Abhishek and Giesecke, Simon and Happe, Jens and Hasselbring, Wilhelm and Koziolek, Heiko and Lipskoch, Henrik and Meyer, Roland and Muhle, Margarethe and Paul, Alexander and Ploski, Jan and Rohr, Matthias and Swaminathan, Mani and Warns, Timo and Winteler, Daniel},
year = {2006},
month = sep,
publisher = {Carl von Ossietzky Universit{\"a}t of Oldenburg},
pages = {43},
}

@article{BeckerHasselbringPaulBoskovicKoziolekPloskiDhamaLipskochRohrWintelerGieseckeMeyerSwaminathanHappeMuhleWarns06TrustworthySoftwareSystemsADiscussionOfBasicConceptsAndTerminology,
 author = {Steffen Becker and Wilhelm Hasselbring and Alexandra Paul and Marko Boskovic and Heiko Koziolek and Jan Ploski and Abhishek Dhama and Henrik Lipskoch and Matthias Rohr and Daniel Winteler and Simon Giesecke and Roland Meyer and Mani Swaminathan and Jens Happe and Margarete Muhle and Timo Warns},
 title = {Trustworthy {S}oftware {S}ystems: a {D}iscussion of {B}asic {C}oncepts and {T}erminology},
 journal = {SIGSOFT Softw. Eng. Notes},
 volume = {31},
 number = {6},
 year = {2006},
 month = nov,
 issn = {0163-5948},
 pages = {1--18},
 doi = {10.1145/1218776.1218781},
 pdf = {http://www.matthias-rohr.com/pubPapers/BeckerHasselbringPaulBoskovicKoziolekPloskiDhamaLipskochRohrWintelerGieseckeMeyerSwaminathanHappeMuhleWarns06TrustworthySoftwareSystemsADiscussionOfBasicConceptsAndTerminology.pdf},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 abstract = {Basic concepts and terminology for trustworthy software systems are discussed. Our discussion of definitions for terms in the domain of trustworthy software systems is based on former achievements in dependable, trustworthy and survivable systems. We base our discussion on the established literature and on approved standards. These concepts are discussed in the context of our graduate school TrustSoft on trustworthy software systems. In TrustSoft, we consider trustworthiness of software systems as determined by correctness, safety, quality of service (performance, reliability, availability), security, and privacy. Particular means to achieve trustworthiness of component-based software systems - as investigated in TrustSoft - are formal verification, quality prediction and certification; complemented by fault diagnosis and fault tolerance for increased robustness.}
 }

@InProceedings{GieseckeMarwedeRohrHasselbring07AStyleBasedArchitectureModellingApproachForUML2ComponentDiagrams,
  author =     {Simon Giesecke and Florian Marwede and Matthias Rohr
                  and Wilhelm Hasselbring},
  title =     {A Style-based Architecture Modelling Approach for
                  UML 2 Component Diagrams},
  booktitle =     {Proceedings of the 11th IASTED International Conference Software Engineering and Applications (SEA'2007)},
  pages =     {530-538},
  year =     2007,
  month = nov,
  isbn =     {978-0-88986-705-5},
  publisher =     {ACTA Press}
} 

@article{PloskiRohrSchwenkenbergHasselbring07ResearchIssuesInSoftwareFaultCategorization,
 author = {Jan Ploski and Matthias Rohr and Peter Schwenkenberg and Wilhelm Hasselbring },
 title = {Research {I}ssues in {S}oftware {F}ault {C}ategorization},
 journal = {SIGSOFT Software Engineering Notes},
 volume = {32},
 number = {6},
 year = {2007},
 month = nov,
 issn = {0163-5948},
 pdf = {http://www.matthias-rohr.com/pubPapers/PloskiRohrSchwenkenbergHasselbring07ResearchIssuesInSoftwareFaultCategorization.pdf},
 doi = {10.1145/1317471.1317478},
 pages = {1--8},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 abstract = {Software faults are a major threat for the dependability of software systems. When we intend to study the impact of software faults on software behavior, examine the quality of fault tolerance mechanisms, or evaluate diagnostic techniques, the issue of distinguishing fault categories and their frequency distribution arises immediately. This article surveys the literature that provides quantitative data on categories of software faults and discusses the applicability of these software fault category distributions to fault injection case studies.},
 keywords = {Software Faults, Bugs, Software Fault Categorization, Software Reliability, Injection of Software Faults}
} 

@InProceedings{RohrGieseckeHasselbring07TimingBehaviorAnomalyDetectionInEnterpriseInformationSystems,
 author = "Matthias Rohr and Simon Giesecke and Wilhelm Hasselbring",
 title = "Timing {B}ehavior {A}nomaly {D}etection in {E}nterprise {I}nformation {S}ystems",
 booktitle = {Proceedings of the Ninth International Conference on Enterprise Information Systems (ICEIS'07)},
 editor = "Jorge Cardoso and Jos\'{e} Cordeiro and Joaquim Filipe",
 publisher = "INSTICC Press",
 isbn = {978-972-8865-88-7},
 year = {2007},
 month = jun, 
 volume = {DISI},
 pages = {494--497},
 abstract = {Business-critical Enterprise Information Systems (EIS) have to satisfy high availability requirements. In order to achieve the required availability, automatic failure detection and diagnosis techniques must be used. A major cause of failures in EIS are software faults in the application layer. In this paper, we propose to use anomaly detection to diagnose failures in the application layer of EIS.  Anomaly detection aims to identify unusual system behavior in monitoring data. These anomalies can be valuable indicators for availability or security problems, and support failure diagnosis. 

In this paper we outline the basic principles of anomaly detection, present the state of the art, and typical application challenges. We outline a new approach for anomaly detection in Enterprise Information Systems that addresses some of these challenges.}
}

@InProceedings{FockeHasselbringRohrSchute07InstrumentierungZumMonitoringMittelsAspektOrientierterProgrammierung,
  title =	 {Instrumentierung zum {Monitoring} mittels
                  {Aspekt-orientierter} {Programmierung}},
  booktitle =	 {Proceedings Software Engineering 2007, Hamburg, GI-Edition -- Lecture Notes in Informatics (LNI, Volume 106)},
  editor = {Wolf-Gideon Bleek and Henning Schwentner and Heinz Z\"{u}llighoven},
  publisher =	 {Gesellschaft f\"{u}r Informatik, Bonner K{\"o}llen Verlag},
  series =	 {GI-Edition -- Lecture Notes in Informatics},
  author =	 {Thilo Focke and Wilhelm Hasselbring and Matthias
                  Rohr and Johannes-Gerhard Schute},
  year =	 2007,
  isbn = {978-3-88579-199-7},
  issn = {1617-5468},
  volume = {106},
  pages = {55--59},
  month = mar,
	abstract = {Das Monitoring großer, kontinuierlich laufender Softwaresysteme liefert wichtige Daten zu deren Überwachung und Fehlerdiagnose. Wenn die Wartbarkeit der zum Monitoring nötigen Instrumentierung und der Softwareapplikation selbst kritisch ist, verbietet sich ein manuelles Einbringen des Messcodes. Aspekt-orientierte Programmierung (AOP) ermöglicht die isolierte Programmierung von Querschnittsbelangen und das automatisierte Integrieren in den Applikationscode per Annotationen. Unser Beitrag berichtet über Erfahrungen mit AOP zur Instrumentierung für Performance-Monitoring in einem verteilten Kundenportalsystem eines Telekommunikationsanbieters. Insbesondere bedarf der durch AOP erhoffte Wartbarkeitsvorteil einer kritischen Untersuchung.}
}
%series = {Lecture Notes in Informatics (LNI) - Proceedings},

@article{FockeHasselbringRohrSchute07EinVorgehensmodellFuerPerformanceMonitoringVonInformationssystemlandschaften,
	title = "Ein {V}orgehensmodell f{\"u}r {P}erformance-{M}onitoring von {I}nformationssystemlandschaften",
	journal = "EMISA Forum",
	volume = {27},
	number = {1},
	author = "Thilo Focke and Wilhelm Hasselbring and Matthias Rohr and Johannes-Gerhard Schute",
	year = 2007,
	month = jan,
	pages = {26--31},
	pdf = {http://www.matthias-rohr.com/pubPapers/FockeHasselbringRohrSchute07EinVorgehensmodellFuerPerformanceMonitoringVonInformationssystemlandschaften.pdf},
	ISSN = "1610-3351",
	abstract = {Der Betrieb von softwareintensiven, gesch\"{a}ftskritischen Informationssystemlandschaften ben\"{o}tigt ein Performance-Monitoring um die \"{U}berwachung und Analyse von Laufzeitverhaltens zu erm\"{o}glichen. Während die rein technische Implementierung von Performance-Monitoring eher unproblematisch ist, bietet sich bisher kein Vorgehensmodell f\"{u}r den systematischen, zielgerichteten Einsatz in komplexen Systemen an. Somit haben die in der Praxis anzutreffenden ``ad-hoc''-Realisierungen oftmals eine mangelhafte Effektivit\{a}t und Wartbarkeit zur Folge. Aus diesem Grund wird in diesem Artikel ein Monitoring-Ansatz vorgestellt, dessen Kern aus einem Vorgehensmodell für die Planung und Integration eines Performance-Monitoring besteht. Damit zusammenh\"{a}ngend wurde eine wiederverwendbare Infrastruktur entwickelt, die die Monitoringdatenintegration f\"{u}r verteilte Systeme leistet. Der vorgestellte Ansatz wurde in einem Telekommunikationsunternehmen evaluiert und die dementsprechend umgesetzte Monitoring-L\{o}sung befindet sich seit Mai 2006 im operativen Betrieb.}
}



@InProceedings{EusgeldHappeLimbourgRohrSalfner08Performability,
	title = "Performability",
	booktitle = "Dependability Metrics",
	series = "Lecture Notes in Computer Science (LNCS)",
	author = "Irene Eusgeld and Jens Happe and Philipp Limbourg and Matthias Rohr and Felix Salfner",
	editor = "Irene Eusgeld and Felix Freiling and Ralf Reussner",
	publisher = {Springer},
	year = "2008",
	isbn = {978-3-540-68946-1},
	doi = {10.1007/978-3-540-68947-8\_24},
	volume = 4909,
	chapter = 24,
	pages = {245--254},
	abstract = {Performability combines performance and reliability analysis in order to estimate the quality of service characteristics of a system in the presence of faults. This chapter provides an introduction to performability, discusses its relation to reliability and performance metrics, and presents common models used in performability analysis, such as Markov reward models or Stochastic Petri Nets.}
}

@InProceedings{EusgeldFraikinRohrSalfnerWappler08SoftwareReliability,
	title = "Software {R}eliability",
	booktitle = "Dependability Metrics",
	series = "Lecture Notes in Computer Science (LNCS)",
	author = "Irene Eusgeld and Falk Fraikin and Matthias Rohr and Felix Salfner and Ute Wappler",
	year = "2008",
	publisher = {Springer},
	volume = 4909,
	doi = {10.1007/978-3-540-68947-8\_10},
	pages = {104--125},
	chapter = 10,
	isbn = {978-3-540-68946-1},
	editor = "Irene Eusgeld and Felix Freiling and Ralf Reussner",
	abstract = {Many concepts of software reliability engineering can be adapted from the older and successful techniques of hardware reliability. However, this must be done with care, since there are some fundamental differences in the nature of hardware and software and its failure processes. This chapter gives an introduction into software reliability metrics.},
}



@inproceedings{BuchholzMarwedeBungerHasselbringHitzschkeMatevskaMeyerMuellerOlkerOppermannRohrRudnerSonnenscheinStierandUflacker04KiekEineModellierungsUndSimulationsumgebungFuerHierarchischeAsymmetrischeZellulareAutomaten,
author = {J\"org Buchholz and Benjamin Marwede and Timo Bunger and Wilhelm Hasselbring and Andre Hitzschke and Jasminka Matevska-Meyer and Heiko M\"uller and Achim Olker and Christian Oppermann and Matthias Rohr and Michael Rudner and Michael Sonnenschein and Ingo Stierand and Matthias Uflacker},
title = {{K}iek -- Eine Modellierungsumgebung für Hierarchische Asymmetrische Zellulare Automaten},
editor = {J. Wittmann and R. Wieland},
booktitle = {Simulation in Umwelt- und Geowissenschaften, ASIM-Mitteilung AMB 88},
publisher = {Shaker Verlag},
isbn = { 3-8322-2783-0},
pages = {224--233},
year = 2004,
}

@inproceedings{Lamsweerde00RequirementsEngineeringInTheYear00AResearchPerspective,
 author = {Axel van Lamsweerde},
 title = {Requirements engineering in the year 00: a research perspective},
 booktitle = {Proceedings of the 22nd international conference on Software engineering (ICSE '00)},
 year = {2000},
 isbn = {1-58113-206-9},
 pages = {5--19},
 location = {Limerick, Ireland},
 doi = {10.1145/337180.337184},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }

@book{Szyperski98ComponentSoftwareBeyondObjectOrientedProgramming,
 author = {Clemens Szyperski},
 title = {Component Software: Beyond Object-oriented Programming},
 year = {1998},
 isbn = {0-201-17888-5},
 publisher = {ACM Press/Addison-Wesley Publishing Co.},
 }

@book{OMGUML2005,
   title           = {Unified Modeling Language Specification: Version 2, Revised Final Adopted Specification (ptc/05-07-04)},
   url             = {http://www.uml.org/#UML2.0},
   year            = {2005},
   publisher       = {OMG},
   author          = {{Object Management Group (OMG)}},
   key             = {UML2},
} 

@article{Avizienis04,
  author = {Algirdas Avi\v{z}ienis and Jean-Claude Laprie and Brian Randell and Carl Landwehr},
  title = {Basic Concepts and Taxonomy of Dependable and Secure Computing},
  journal = {Transactions on Dependable and Secure Computing},
  volume = {1},
  number = {1},
  year = {2004},
  issn = {1545-5971},
  pages = {11--33},
  doi = {10.1109/TDSC.2004.2},
  publisher = {IEEE},
  address = {Los Alamitos, CA, USA}
}
@inproceedings{ChuangKuoWang98NonIntrusiveObjectIntrospectionInCppArchitectureAndApplication,
 author = {Tyng-Ruey Chuang and Y. S. Kuo and Chien-Min Wang},
 title = {Non-intrusive object introspection in C++: architecture and application},
 booktitle = {Proceedings of the 20th international conference on Software engineering (ICSE '98)},
 year = {1998},
 isbn = {0-8186-8368-6},
 pages = {312--321},
 location = {Kyoto, Japan},
 publisher = {IEEE},
 address = {Washington, DC, USA},
 }

@inproceedings{Maes87ConceptsAndExperimentsInComputationalReflection,
 author = {Pattie Maes},
 title = {Concepts and experiments in computational reflection},
 booktitle = {Conference proceedings on Object-oriented programming systems, languages and applications (OOPSLA '87)},
 year = {1987},
 isbn = {0-89791-247-0},
 pages = {147--155},
 location = {Orlando, Florida, United States},
 doi = {10.1145/38765.38821},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }*********************************
* fault-tolerance vs self-healing
*********************************

@misc{deLemos03WADSPanelFaultToleranceAndSelfHealing,
  author = {Rogrio de Lemos},
  title = {{ICSE} 2003 {WADS} Panel: Fault Tolerance and Self-Healing},
  year = 2003,
  url = "citeseer.ist.psu.edu/656379.html" 
}

@misc{Koopman03ElementsOfTheSelfHealingSystemProblemSpace,
  author = {P. Koopman},
  title = {Workshop on Architecting Dependable Systems (WADS'03)},
  month = May,
  year = 2003,
  url = "www.ece.cmu.edu/~koopman/roses/wads03/wads03.pdf" 
}

@article{PapazoglouTraversoDustdarLeymann07ServiceOrientedComputingStateOfTheArtAndResearchChallenges,
author = {Michael P. Papazoglou and Paolo Traverso and Schahram Dustdar and Frank Leymann},
title = {Service-Oriented Computing: State of the Art and Research Challenges},
journal = {Computer},
volume = {40},
number = {11},
year = {2007},
issn = {0018-9162},
pages = {38-45},
doi = {10.1109/MC.2007.400},
}

@inproceedings{DuzbayevPoernomo06RuntimePredictionOfQueuedBehavior,
title = {Runtime Prediction of Queued Behaviour},
author = {Nurzhan Duzbayev and Iman Poernomo},
booktitle = {Proceedings of the 2nd {I}nternational {C}onference on the Quality of Software Architectures (QoSA'06)},
editor = {Christine Hofmeister and Ivica Crnkovic and Ralf Reussner},
pages = {78-94},
publisher = {Springer},
series = {Lecture Notes in Computer Science},
volume = {4214},
year = {2006},
doi = {10.1007/11921998\_10}, 
isbn = {3-540-48819-7}
}

*****************************
* self-healing in general 
****************************
@inproceedings{DiaconescuMosMurphy04AutomaticPerformanceManagementInComponentBasedSoftwareSystems,
 author = {Ada Diaconescu and Adrian Mos and John Murphy},
 title = {Automatic Performance Management in Component Based Software Systems},
 booktitle = {Proceedings of the First International Conference on Autonomic Computing (ICAC'04)},
 year = {2004},
 isbn = {0-7695-2114-2},
 pages = {214--221},
 doi = {10.1109/ICAC.2004.15},
 publisher = {IEEE},
 }

@InProceedings{AgarwalApplebyGuptaKarNeogiSailer04ProblemDeterminationUsingDependencyGraphsAndRunTimeBehavior,
  title =	 {Problem Determination Using Dependency Graphs and
                  Run-Time Behavior Models},
  author =	 {Manoj K. Agarwal and Karen Appleby and Manish Gupta
                  and Gautam Kar and Anindya Neogi and Anca Sailer},
  year =	 2004,
  crossref =	 {DSOM04},
  pages =	 {171-182},
  doi =		 {10.1007/b102082},
}

@proceedings{DSOM04,
  NOeditor    = {Akhil Sahai and Felix Wu},
  booktitle     = {15th IFIP/IEEE International Workshop
               on Distributed Systems: Operations and Management (DSOM'04)},
  publisher = {Springer},
  series    = {Lecture Notes in Computer Science},
  volume    = {3278},
  year      = {2004},
  isbn      = {3-540-23631-7},
}

@inproceedings{DiaconescuMurphy05AutomatingThePerformanceManagementOfComponentBasedEnterpriseSystemsThroughTheUseOfRedundancy,
 author = {Ada Diaconescu and John Murphy},
 title = {Automating the performance management of component-based enterprise systems through the use of redundancy},
 booktitle = {Proceedings of the 20th IEEE/ACM international Conference on Automated software engineering (ASE '05)},
 year = {2005},
 isbn = {1-59593-993-4},
 pages = {44--53},
 doi = {10.1145/1101908.1101918},
 publisher = {ACM},
 }

@inproceedings{FoxKicimanPatterson04CombiningStatisticalMonitoringAndPredictableRecoveryForSelfManagement,
 author = {Armando Fox and Emre Kiciman and David Patterson},
 title = {Combining statistical monitoring and predictable recovery for self-management},
 booktitle = {WOSS '04: Proceedings of the 1st ACM SIGSOFT workshop on Self-managed systems},
 year = {2004},
 isbn = {1-58113-989-6},
 pages = {49--53},
 doi = {10.1145/1075405.1075415},
 publisher = {ACM},
 }

@PHDTHESIS{Kiciman05UsingStatisticalMonitoringToDetectFailuresInInternetServices,
	author = "Emre Kiciman",
	title = "Using Statistical Monitoring to Detect Failures in Internet Services",
	school = "Stanford University",
	year = 	"2005",
	month = sep,
}


@inproceedings{RouvellouHart95AutomaticAlarmCorrelationForFaultIdentification,
 author = {I. Rouvellou and G. W. Hart},
 title = {Automatic alarm correlation for fault identification},
 booktitle = {INFOCOM '95: Proceedings of the Fourteenth Annual Joint Conference of the IEEE Computer and Communication Societies (Vol. 2)-Volume},
 year = {1995},
 isbn = {0-8186-6990-X},
 pages = {553--561},
 publisher = {IEEE Computer Society},
 }


@Article{TrustSoft2006,
  author =      {W. Hasselbring and R. Reussner},
  title =      {Toward Trustworthy Software Systems},
  journal =      {IEEE Computer},
  year =      2006,
  volume =     39,
  number =     4,
  pages =     {98--99},
  month =     apr
} 

@InProceedings{ChenKicimanFratkinFoxBrewer02PinpointProblemDeterminationInLargeDynamicInternetServices,
  title =	"Pinpoint: Problem Determination in Large, Dynamic, Internet Services",
  author =	"Mike Chen and Emre Kiciman and Eugene Fratkin and Eric Brewer and Armando Fox",
  year = 	"2002",
  booktitle =	"Proceedings of the International Conference on Dependable Systems and Networks (IPDS Track)",
}

@InProceedings{CandeaKawamotoFujikiFriedmanFox04MicrorebootATechniqueForCheapRecovery,
  title =	"Microreboot - {A} Technique for Cheap Recovery",
  author =	"George Candea and Shinichi Kawamoto and Yuichi Fujiki
		 and Greg Friedman and Armando Fox",
  year = 	"2004",
  booktitle =	"OSDI",
  pages =	"31--44",
  URL =  	"http://www.usenix.org/events/osdi04/tech/candea.html",
}


@Article{KicimanFox05DetectingApplicationLevelFailuresInComponentBasedInternetServices,
  author =	"Emre Kiciman and Armando Fox",
  journal =	"IEEE Transactions on Neural Networks",
  number =	"5",
  pages =	"1027--1041",
  title =	"Detecting Application-Level Failures in Component-based Internet Services",
  doi =  	"10.1109/TNN.2005.853411",
  volume =	"16",
  year = 	"2005",
  month = sep,
}

@inproceedings{GrizzardDodsonContiLevineOwen04TowardsATrustedImmutableKernelExtensionTIKEforSelfHealingSystemsAVirtualMachineApproach,
 author = {Grizzard, J.B. and Dodson, E.R. and Conti, G.J. and Levine, J.G. and Owen, H.L.},
 title = {Towards a trusted immutable kernel extension (TIKE) for self-healing systems: a virtual machine approach},
 booktitle = {Proceedings from the Fifth Annual IEEE SMC Information Assurance Workshop},
 year = {2004},
 isbn = {0-7695-2114-2},
 pages = {444--446},
 doi = {10.1109/IAW.2004.1437855},
 publisher = {IEEE Computer Society},
 }


@TechReport{GoldbergGongGreenbergClarkJensenKimWells95AdaptiveFaultResistantSystems,
  title =	"Adaptive Fault-Resistant Systems",
  author =	"Jack Goldberg and Li Gong and Ira Greenberg and Raymond Clark and E. Douglas Jensen 
		 and Kane Kim and Douglas Wells",
  year = 	"1995",
  month =	sep # "~25",
  abstract =	"A research team led by SRI International has completed
		 a 1.5 year period of work in adaptive, distributed,
		 fault-resistant systems. This research has been
		 motivated by the increasingly complex and dynamic
		 nature of working environments for modern systems,
		 especially distributed, real-time systems. Operating
		 conditions in such environments vary greatly in the
		 types and distributions of faults and input data, in
		 user requirements in changing service situations, and
		 in possible losses of computing resources. The
		 traditional approach---applying given resources in a
		 fixed system configuration to meet worst-case operating
		 conditions--- is becoming less tenable. Adaptive
		 systems can track changes in the environment by
		 modifying the way computing resources are organized and
		 utilized. The goal of the research was to establish a
		 foundation for a general methodology of design for
		 adaptive, distributed, real-time, fault-resistant
		 systems. This report presents a general theory and
		 architecture, a t...",
  instition = "Digital Equipment Corporation, Concurrent Computer Corportion, University of California",
  URL =  	"http://citeseer.ist.psu.edu/goldberg95adaptive.html;
		 http://www.csl.sri.com/reports/postscript/sri-csl-95-02.ps.Z",
}




@InProceedings{MosMurphy02PerformanceManagementInComponentOrientedSystemsUsingAModelDrivenArchitectureApproach,
  title =       "Performance Management in Component-Oriented Systems Using a Model Driven Architecture Approach",
  author =      "Adrian Mos and John Murphy",
  year =        "2002",
  publisher = {IEEE},
  booktitle = "Sixth International Enterprise Distributed Object Computing Conference (EDOC'02)",
  pages =       "227--237",
  doi = {10.1109/EDOC.2002.1137712},
}

******************************
* Self-healing WOSS'04
******************************

@inproceedings{AbdelwahedKandasamyNeema04AControlBasedFrameworkForSelfManagingDistributedComputingSystems,
 author = {Sherif Abdelwahed and Nagarajan Kandasamy and Sandeep Neema},
 title = {A control-based framework for self-managing distributed computing systems},
 booktitle = {Proceedings of the 1st {SIGSOFT} workshop on Self-managed systems (WOSS '04)},
 year = {2004},
 isbn = {1-58113-989-6},
 pages = {3--7},
 doi = {10.1145/1075405.1075406},
 publisher = {ACM},
 abstract = {This paper describes an online control framework to design self-managing distributed computing systems that continually optimize their performance in response to changing computing demands and environmental conditions. An online control technique is used in conjunction with predictive filters to tune the performance of individual system components based on their forecast behavior. In a distributed setting, a global controller is used to manage the interaction between components such that overall system requirements are satisfied.}
 }


@inproceedings{ArshadHeimbignerWolf04APlanningBasedApproachToFailureRecoveryInDistributedSystems,
 author = {Naveed Arshad and Dennis Heimbigner and Alexander L. Wolf},
 title = {A planning based approach to failure recovery in distributed systems},
 booktitle = {Proceedings of the 1st SIGSOFT workshop on Self-managed systems (WOSS '04)},
 year = {2004},
 isbn = {1-58113-989-6},
 pages = {8--12},
 doi = {10.1145/1075405.1075407},
 publisher = {ACM},
 abstract = {Failure recovery in distributed systems poses a difficult challenge because of the requirement for high availability. Failure scenarios are usually unpredictable so they can not easily be foreseen. In this research we propose a planning based approach to failure recovery. This approach automates failure recovery by capturing the state after failure, defining an acceptable recovered state as a goal and applying planning to get from the initial state to the goal state. By using planning, this approach can recover from a variety of failed states and reach any of several acceptable states: from minimal functionality to complete recovery.}
 }

@inproceedings{AudsleyBaker04ASelectionMechanismBasedUponTheExplicitExpressionOfPreference,
 author = {N. C. Audsley and R. E. Baker},
 title = {A selection mechanism based upon the explicit expression of preference},
 booktitle = {Proceedings of the 1st SIGSOFT workshop on Self-managed systems (WOSS '04)},
 year = {2004},
 isbn = {1-58113-989-6},
 pages = {13--17},
 doi = {10.1145/1075405.1075408},
 publisher = {ACM},
 address = {New York, NY, USA},
 abstract = {One way to improve the flexibility and robustness of a system is to enable a range of behaviours to be supported and to select that which is most appropriate to the prevailing conditions during run time. This paper considers the issue of effecting choice in a real-time context. It draws upon theory from the realm of decision analysis to decompose the selection problem and proposes a specific selection methodology that directly employs the expression of preferences in the evaluation of the alternatives available.}
 }

@inproceedings{BalasubramaniamMorrisonMickanKirbyWarboysRobertsonSnowdonGreenwoodSeet04SupportForFeedbackAndChangeInSelfAdaptiveSystems,
 author = {Dharini Balasubramaniam and Ron Morrison and Kath Mickan and Graham Kirby and Brian Warboys and Ian Robertson and Bob Snowdon and R. Mark Greenwood and Wykeen Seet},
 title = {Support for feedback and change in self-adaptive systems},
 booktitle = {Proceedings of the 1st ACM SIGSOFT workshop on Self-managed systems (WOSS '04)},
 year = {2004},
 isbn = {1-58113-989-6},
 pages = {18--22},
 doi = {10.1145/1075405.1075409},
 publisher = {ACM},
 abstract = {Self-adaptive systems modify their own behaviour in response to stimuli from their operating environments. The major policy considerations for such systems are determining what, when and how adaptations should be carried out. This paper presents mechanisms for feedback and change that support policy decisions for self-adaptation within a computationally complete architecture description language based on the $\pi$-calculus. Our contribution is support for feedback through software-encoded probes, gauges and an event distribution network together with support for change through decomposition, reification, reflection, recomposition and hyper-code.}
 }

@inproceedings{BisbalCheng04ResourceBasedApproachToFeatureInteractionInAdaptiveSoftware,
 author = {Jes\'us Bisbal and Betty H. C. Cheng},
 title = {Resource-based approach to feature interaction in adaptive software},
 booktitle = {Proceedings of the 1st ACM SIGSOFT workshop on Self-managed systems (WOSS '04)},
 year = {2004},
 isbn = {1-58113-989-6},
 pages = {23--27},
 doi = {10.1145/1075405.1075410},
 publisher = {ACM},
 abstract = { This paper proposes the RAFTING approach (Resource-based Approach to FeaTure InteractioN) to address the feature interaction problem in the context of dynamically adapted software. RAFTING focuses on the resources used by features, rather than the features themselves. Therefore, for this paper's purposes, resource contention will be considered the main cause for feature interaction. We illustrate how a resource-based approach simplifies the detection of feature interactions, particularly when a limited amount of information is known about the individual components being dynamically added to the system.}
 }

@inproceedings{BradburyCordyDingelWermelinger04ASurveyOfSelfManagementInDynamicSoftwareArchitectureSpecifications,
 author = {Jeremy S. Bradbury and James R. Cordy and Juergen Dingel and Michel Wermelinger},
 title = {A survey of self-management in dynamic software architecture specifications},
 booktitle = {Proceedings of the 1st ACM SIGSOFT workshop on Self-managed systems (WOSS '04)},
 year = {2004},
 isbn = {1-58113-989-6},
 pages = {28--33},
 doi = {10.1145/1075405.1075411},
 publisher = {ACM},
 }

@inproceedings{DesmetJanssensMichielsPiessensJoosenVerbaeten04TowardsPreservingCorrectnessInSelfManagedSoftwareSystems,
 author = {Lieven Desmet and Nico Janssens and Sam Michiels and Frank Piessens and Wouter Joosen and Pierre Verbaeten},
 title = {Towards preserving correctness in self-managed software systems},
 booktitle = {Proceedings of the 1st ACM SIGSOFT workshop on Self-managed systems (WOSS '04)},
 year = {2004},
 isbn = {1-58113-989-6},
 pages = {34--38},
 doi = {10.1145/1075405.1075412},
 publisher = {ACM},
 }

@inproceedings{DowlingCahill04SelfManagedDecentralisedSystemsUsingKComponentsAndCollaborativeReinforcementLearning,
 author = {Jim Dowling and Vinny Cahill},
 title = {Self-managed decentralised systems using K-components and collaborative reinforcement learning},
 booktitle = {Proceedings of the 1st ACM SIGSOFT workshop on Self-managed systems (WOSS '04)},
 year = {2004},
 isbn = {1-58113-989-6},
 pages = {39--43},
 doi = {10.1145/1075405.1075413},
 publisher = {ACM},
 abstract = {Components in a decentralised system are faced with uncertainty as how to best adapt to a changing environment to maintain or optimise system performance. How can individual components learn to adapt to recover from faults in an uncertain environment? How can a decentralised system coordinate the adaptive behaviour of its components to realise system optimisation goals given problems establishing consensus in dynamic environments? This paper introduces a self-adaptive component model, called K-Components, that enables individual components adapt to a changing environment and a decentralised coordination model, called collaborative reinforcement learning, that enables groups of components to learn to collectively adapt their behaviour to establish and maintain system-wide properties in a changing environment.}
 }

@inproceedings{Egyed04ArchitectureDifferencingForSelfManagement,
 author = {Alexander Egyed},
 title = {Architecture differencing for self management},
 booktitle = { Proceedings of the 1st ACM SIGSOFT workshop on Self-managed systems (WOSS '04)},
 year = {2004},
 isbn = {1-58113-989-6},
 pages = {44--48},
 doi = {10.1145/1075405.1075414},
 publisher = {ACM},
 abstract = {Traditionally, software models are associated with development and maintenance related activities. This paper demonstrates that models also serve a vital purpose in supporting the self awareness and management of software systems in their deployed environments. We use probes to observe the executing software system by extracting the outside stimuli the system is subjected to. We use this information to concurrently simulate the model-behavior of the software system. The state of the simulating system then mirrors the state of the executing system. In this setting, the simulation serves as a foundation to self awareness through which differences among simulated behavior and real behavior are investigated. The simulation also serves as a guide to self management (i.e., self healing, self configuration) where the system uses additional information provided in the simulating model to manage itself.}
 }



@inproceedings{GarlanPoladianSchmerlSousa04TaskBasedSelfAdaptation,
 author = {David Garlan and Vahe Poladian and Bradley Schmerl and Jo\~ao Pedro Sousa},
 title = {Task-based self-adaptation},
 booktitle = { Proceedings of the 1st ACM SIGSOFT workshop on Self-managed systems (WOSS '04)},
 year = {2004},
 isbn = {1-58113-989-6},
 pages = {54--57},
 doi = {10.1145/1075405.1075416},
 publisher = {ACM},
 abstract = {Recently there has been increasing interest in developing systems that can adapt dynamically to cope with changing environmental conditions and unexpected system errors. Most efforts for achieving self-adaptation have focused on the mechanisms for detecting opportunities for improvement and then taking appropriate action. However, such mechanisms beg the question: what is the system trying to achieve? In a given situation there may be many possible adaptations, and knowing which one to pick is a difficult question. In this paper we advocate the use of explicit representation of user task as a critical element in addressing this missing link.}
 }

@inproceedings{GeorgasTaylor04TowardsAKnowledgeBasedApproachToArchitecturalAdaptationManagement,
 author = {John C. Georgas and Richard N. Taylor},
 title = {Towards a knowledge-based approach to architectural adaptation management},
 year = {2004},
 isbn = {1-58113-989-6},
 booktitle = {Proceedings of the 1st ACM SIGSOFT workshop on Self-managed systems (WOSS '04)},
 ages = {59--63},
 doi = {10.1145/1075405.1075417},
 publisher = {ACM},
 abstract = {Self-adaptive software continually evaluates and modifies its own behavior to meet changing demands. One of the key issues in constructing such software is that of planning when and what kinds of adaptations are appropriate. In this paper, we present an architecture-centric knowledge-based approach for specifying and enacting architectural adaptation policies as the main driver for self-adaptive behavior. Our work applies explicitly represented knowledge-based policies for the definition and enactment of software adaptation at the architectural level. A key benefit of our approach is the decoupling of adaptation policy from system implementation as well as the independent and dynamic evolution of policies themselves. We elaborate our overall approach, present prototype tools and techniques for its support, and discuss future research directions.}
 }

@inproceedings{Goebel04EncapsulationOfStructuralAdaptationByCompositeComponents,
 author = {Steffen G\"obel},
 title = {Encapsulation of structural adaptation by composite components},
 booktitle = {Proceedings of the 1st ACM SIGSOFT workshop on Self-managed systems (WOSS '04)},
 year = {2004},
 isbn = {1-58113-989-6},
 pages = {64--68},
 doi = {10.1145/1075405.1075418},
 publisher = {ACM},
 abstract = {Component-based software engineering offers a way to partition complex systems into well-defined parts. Adaptation mechanisms are crucial to enable run-time reconfiguration and to increase the reuse of these parts in other applications and environments. In this paper we utilize the concept of composite components to map component parameters to different predefined internal configurations of subcomponents. The structural adaptation is thereby encapsulated and hidden from other parts of the system. Configuration variations allow to specify parameterizable configuration patterns. Some extensions to UML diagrams are introduced to model reconfiguration steps. Optional adaptation and aspect operators as additional constituents of composite components increase the flexibility of the presented approach.}
 }

@inproceedings{HallsteinsenStavFloch04SelfAdaptationForEverydaySystems,
 author = {Svein Hallsteinsen and Erlend Stav and Jacqueline Floch},
 title = {Self-adaptation for everyday systems},
  booktitle = {Proceedings of the 1st ACM SIGSOFT workshop on Self-managed systems (WOSS '04)},
   
 year = {2004},
 isbn = {1-58113-989-6},
 pages = {69--74},
 doi = {10.1145/1075405.1075419},
 publisher = {ACM},
 abstract = {The use of handheld networked devices to access information systems by people moving around is spreading rapidly. Systems being used in this way typically face dynamic variation in their operating environment. In order to maintain the usability and usefulness for mobile users, self-adapting systems are needed. Self-adaptation has so far typically been applied only to mission critical systems at considerable additional cost. However, we now need ways to implement such capabilities that are affordable also in everyday systems development.In this paper we propose an approach to building such self-adapting systems where the adaptation is handled by generic middleware. The proposed approach builds on component frameworks and variability engineering to achieve adaptable systems, and property modelling, architectural reflection and context monitoring to support dynamic self-adaptation. We define a set of requirements for affordable self-adaptation and discuss the proposed approach in relation to these requirements.}
 }

@inproceedings{HawthornePerry04ExploitingArchitecturalPrescriptionsForSelfManagingSelfAdaptiveSystemsAPositionPaper,
 author = {Matthew J. Hawthorne and Dewayne E. Perry},
 title = {Exploiting architectural prescriptions for self-managing, self-adaptive systems: a position paper},
 booktitle = {Proceedings of the 1st ACM SIGSOFT workshop on Self-managed systems (WOSS '04)},
 year = {2004},
 isbn = {1-58113-989-6},
 pages = {75--79},
 doi = {10.1145/1075405.1075420},
 publisher = {ACM},
abstract = { We propose a high-level approach to software architecture that bridges the gap between system requirements (in the problem space) and the architectural design (in the solution space). We use abstract constraint- and intent-based architectural prescriptions to enable architectural reflection, reification, and distributed configuration discovery as the basis for designing adaptive, self-configuring software systems. We discuss some key architectural properties and patterns that facilitate the design and implementation of self-configuring systems, and use these as the basis for an example prototype architecture for self-evolving systems called Distributed Configuration Routing (DCR). Finally, we propose the development of architectural prescription languages (APLs) and enhanced system design environments to provide better support for intent-based architectures.
}
 }

@inproceedings{HeisigMoyle04UsingModelTreesToCharacterizeComputerResourceUsage,
 author = {Stephen Heisig and Steve Moyle},
 title = {Using model trees to characterize computer resource usage},
 booktitle = {Proceedings of the 1st SIGSOFT workshop on Self-managed systems (WOSS '04)},
 year = {2004},
 isbn = {1-58113-989-6},
 pages = {80--84},
 doi = {10.1145/1075405.1075421},
 publisher = {ACM},
 abstract = {Continuous numeric prediction techniques known as model trees which build decision trees and then use linear regression at the terminal nodes are used to characterize resource consumption in a computer system. An advantage of model trees over time series and other traditional statistical models is the ability to add background knowledge to the model. Models are built using production data from several banks in collaboration with domain experts at those institutions. A demonstration of improving the models by adding background expert knowledge is given. An example of using model predictions to allow adaptive elements of an operating system to become more self-managing with respect to memory usage is also presented. Comparisons with other predictive techniques are made and advantages and disadvantages of using this technique in the operating system are discussed.}
 }

@inproceedings{JoshiHiltunenSchlichtingSandersAgbaria04OnlineModelBasedAdaptationForOptimizingPerformanceAndDependability,
 author = {Kaustubh R. Joshi and Matti Hiltunen and Richard Schlichting and William H. Sanders and Adnan Agbaria},
 title = {Online model-based adaptation for optimizing performance and dependability},
  booktitle = {Proceedings of the 1st ACM SIGSOFT workshop on Self-managed systems (WOSS '04)},
 year = {2004},
 isbn = {1-58113-989-6},
 pages = {85--89},
 doi = {10.1145/1075405.1075422},
 publisher = {ACM},
 abstract = {Constructing adaptive software that is capable of changing behavior at runtime is a challenging software engineering problem. However, the problem of determining when and how such a system should adapt, i.e., the system's adaptation policy, can be even more challenging. To optimize the behavior of a system over its lifetime, the policy must often take into account not only the current system state, but also the anticipated future behavior of the system. This paper presents a systematic approach based on using Markov Decision Processes to model the system and to generate optimal adaptation policies for it. In our approach, we update the model on-line based on system measurements and generate updated adaptation policies at runtime when necessary. We present the general approach and then outline its application to a distributed message dissemination system based on AT\&T's iMobile platform.}
 }



@inproceedings{MalekMikicRakicMedvidovic04AnExtensibleFrameworkForAutonomicAnalysisAndImprovementOfDistributedDeploymentArchitectures,
 author = {Sam Malek and Marija Mikic-Rakic and Nenad Medvidovic},
 title = {An extensible framework for autonomic analysis and improvement of distributed deployment architectures},
  booktitle = {Proceedings of the 1st ACM SIGSOFT workshop on Self-managed systems (WOSS '04)},
 year = {2004},
 isbn = {1-58113-989-6},
 pages = {95--99},
 doi = {10.1145/1075405.1075424},
 publisher = {ACM},
 abstract = { A distributed software system's deployment architecture can have a significant impact on the system's properties, which depend on various system parameters, such as network bandwidth, frequencies of software component interactions, and so on. Recent studies have shown that the quality of deployment architectures can be improved significantly via active system monitoring, efficient estimation of the improved deployment architecture, and system redeployment. However, the lack of a common framework for improving a system's deployment architecture has resulted in ad hoc solutions. In this paper, we present an extensible framework that guides the design and development of solutions to this problem, enables the extension and reuse of the solutions, and facilitates autonomic analysis and redeployment of a system's deployment architecture.
}
 }

@inproceedings{RingEslerCole04SelfHealingMechanismsForKernelSystemCompromises,
 author = {Sandra Ring and David Esler and Eric Cole},
 title = {Self-healing mechanisms for kernel system compromises},
 booktitle = {Proceedings of the 1st ACM SIGSOFT workshop on Self-managed systems (WOSS '04)},
 year = {2004},
 isbn = {1-58113-989-6},
 pages = {100--104},
 doi = {10.1145/1075405.1075425},
 publisher = {ACM},
 abstract = {Increasing demands for reliability and dependability clash with the reality of escalating security compromises and vulnerability discoveries. Improvements in attack methodologies such as polymorphic viruses, tampering of source code repositories, and automation of distributed strikes are no match for the untimely detection and manual recovery practices used today. We present a run-time method to automate recovery from kernel level system compromises. It is capable of returning modified system call table addresses back to their original values, terminating hidden processes, removing hidden files, and blocking attacker traffic to hidden connections. Self-healing mechanisms such as this can be employed to create more reliable intrusion tolerant operating systems and applications. A working prototype has been implemented as a loadable kernel module on Linux, and can be easily enhanced for other operating systems.}
 }

@inproceedings{TichySchillingGiese04DesignOfSelfManagingDependableSystemsWithUMLAndFaultTolerancePatterns,
 author = {Matthias Tichy and Daniela Schilling and Holger Giese},
 title = {Design of self-managing dependable systems with UML and fault tolerance patterns},
  booktitle = {Proceedings of the 1st ACM SIGSOFT workshop on Self-managed systems (WOSS '04)},
 year = {2004},
 isbn = {1-58113-989-6},
 pages = {105--109},
 doi = {10.1145/1075405.1075426},
 publisher = {ACM},
 abstract = {The development of dependable software systems is a costly undertaking. Fault tolerance techniques as well as self-repair capabilities usually result in additional system complexity which can even spoil the intended improvement with respect to dependability. We therefore present a pattern-based approach for the design of service-based systems which enables self-managing capabilities by reusing proven fault tolerance techniques in form of Fault Tolerance Patterns. The pattern specification consists of a service-based architectural design and deployment restrictions in form of UML deployment diagrams for the different architectural services. The architectural design is reused when designing the system architecture. The deployment restrictions are employed to determine valid deployment scenarios for an application. During run-time the same restrictions are at first used to automatically map additional services on suitable nodes. If node crashes are detected, we secondly employ the restrictions to guide the self-repair of the system in such a way that only suitable repair decisions are made.}
 }

@inproceedings{Wile04PatternsOfSelfManagement,
 author = {David S. Wile},
 title = {Patterns of self-management},
  booktitle = {Proceedings of the 1st ACM SIGSOFT workshop on Self-managed systems (WOSS '04)},
 year = {2004},
 isbn = {1-58113-989-6},
 pages = {110--114},
 doi = {10.1145/1075405.1075427},
 publisher = {ACM},
 }

 Wuttke07AnApproachToDetectingFailuresAutomatically

*************************
* self-protection
*************************

%We do not have this subscription at Uni-Oldenburg -> file missing!
@inproceedings{SterrittHinchey05EngineeringUltimateSelfProtectionInAutonomicAgentsForSpaceExplorationMissions,
 author = {Roy Sterritt and Mike Hinchey},
 title = {Engineering Ultimate Self-Protection in Autonomic Agents for Space Exploration Missions},
 booktitle = {Proceedings of the 12th International Conference and Workshops on the Engineering of Computer-Based Systems (ECBS'05)},
 year = {2005},
 isbn = {0-7695-2308-0},
 pages = {506--511},
 doi = {10.1109/ECBS.2005.36},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
 abstract = {NASA's Exploration Initiative (EI) will push space exploration missions to the limit. Future missions will be required to be self-managing as well as self-directed, in order to meet the challenges of human and robotic space exploration. We discuss security and self-protection in autonomic agent based-systems, and propose the ultimate self-protection mechanism for such systems - self-destruction. Like other metaphors in autonomic computing, this is inspired by biological systems, and is the analog of biological apoptosis. Finally, we discuss the role it might play in future NASA space exploration missions.}
 }

*****************************
* Autonomic Computing
*****************************

@TechReport{Horn01AutonomicComputingIBMsPerspectiveOnTheStateOfInformationTechnology,
  author =  "Paul Horn",
  title =   "Autonomic Computing: {IBM}'s Perspective on the State
         of Information Technology",
  type =    "Manifesto",
  institution =  "IBM Research",
  month =   oct,
  year =    "2001",
  url = "http://www.research.ibm.com/autonomic/manifesto/autonomic_computing.pdf",
}


@InProceedings{LinMacarthurLeaney05DefiningAutonomicComputingASoftwareEngineeringPerspective,
  title =	"Defining Autonomic Computing: {A} Software Engineering Perspective",
  author =	"Paul Lin and Alexander MacArthur and John Leaney",
  year = 	"2005",
  month = mar,
  booktitle = "Proceedings of the Australian Software Engineering Conference 2005",
  pages =	"88--97",
  doi =  	"10.1109/ASWEC.2005.19",
}
******************************
* self-adaptation
******************************

@InProceedings{ToussaintIgel02NeutralityANecessityForSelfAdaptation,
  author =  "Marc Toussaint and Christian Igel",
  title =   "Neutrality: {A} necessity for self-adaptation",
  booktitle =   "Proceedings of the 2002 Congress on Evolutionary Computation CEC2002",
  editor =  "David B. Fogel and Mohamed A. El-Sharkawi and Xin Yao
         and Garry Greenwood and Hitoshi Iba and Paul Marrow and
         Mark Shackleton",
  pages =   "1354--1359",
  year =    "2002",
  publisher =   "IEEE",
  publisher_address = "445 Hoes Lane, P.O. Box 1331, Piscataway, NJ
         08855-1331, USA",
  organisation = "IEEE Neural Network Council (NNC), Institution of
         Electrical Engineers (IEE), Evolutionary Programming
         Society (EPS)",
  ISBN =    "0-7803-7278-6",
  notes =   "CEC 2002 - A joint meeting of the IEEE, the
         Evolutionary Programming Society, and the IEE. Held in
         connection with the World Congress on Computational
         Intelligence (WCCI 2002)",
  abstract =    "Self-adaptation is used in all main paradigms of
         evolutionary computation to increase efficiency. We
         claim that the basis of self-adaptation is the use of
         neutrality. In the absence of external control
         neutrality allows a variation of the search
         distribution without the risk of fitness loss.",
  summary = {The paper agruments that in evolutionary programming it is essential that not every change (such as in evolution strategy)
  has effects on the phenotype (a proposed solution to a problem) without the risk of fitness loss. They define self-adaptation as
  the use of neutrality (changes in genotype that have not effect in phenotype) in order to vary exploration strategy. Therefore they seem
  to understand self-adaptation as varing the exploration strategy.}
}

@InProceedings{HinterdingMichalewiczEiben97AdaptationInEvolutionaryComputationASurvey,
  author =  "R. Hinterding and Z. Michalewicz and A. E. Eiben",
  title =   "Adaptation in Evolutionary Computation: a Survey",
  booktitle =   "Proceedings of the Fourth IEEE Conference on
         Evolutionary Computation, Indianapolis, IN",
  pages =   "65--69",
  doi = "10.1109/ICEC.1997.592270",
  year =    "1997",
}

@incollection{Angeline95AdaptiveAndSelfAdaptiveEvolutionaryComputations,
    author = "Peter J. Angeline",
    title = "Adaptive and Self-Adaptive Evolutionary Computations",
    booktitle = "Computational Intelligence: A Dynamic Systems Perspective",
    publisher = "IEEE Press",
    editor = "Marimuthu Palaniswami and Yianni Attikiouzel",
    pages = "152--163",
    year = "1995",
    url = "citeseer.ist.psu.edu/angeline95adaptive.html" }

@Article{BaeckHammelSchwefel97EvolutionaryComputationCommentsOnTheHistoryAndCurrentState,
  author =       "Thomas B{\"a}ck and Ulrich Hammel and Hans-Paul Schwefel",
  title =   "Evolutionary Computation: Comments on the History and Current State",
  journal =      "{IEEE} {T}rans. on {E}volutionary {C}omputation",
  year =     "1997",
  volume =       "1",
  number =       "1",
  pages =   "3--17",
}

@Book{Schwefel95EvolutionAndOptimumSeeking,
  author =       "Hans Paul Schwefel",
  title =   "Evolution and Optimum Seeking",
  publisher =    "John Wiley \& Sons, Inc.",
  address =      "New York",
  year =     "1995",
  series =       "Sixth-Generation Computer Technology Series"
}

@InCollection{deJong93GeneticAlgorithmsAreNotFunctionOptimizers,
  author =       "Kenneth A. {De Jong}",
  title =   "Genetic Algorithms are not Function Optimizers",
  booktitle =    "Foundations of Genetic Algorithms 2",
  editor =       "L. Darrell Whitley",
  pages =   "5--17",
  publisher =    "Morgan Kaufmann",
  year =     "1993",
  address =      "San Mateo, CA",
}

@InProceedings{deJong92AreGeneticAlgorithmsFunctionOptimizers,
  author =       "Kenneth A. {De Jong}",
  title =   "Are genetic algorithms function optimizers?",
  booktitle =    "Parallel problem solving from nature 2",
  pages =   "3--13",
  year =     "1992",
  editor =       "Reinhard M{\"{a}}nner and Bernard Manderick",
  address =      "Amsterdam",
  publisher =    "North-Holland",
}

@inproceedings{KlockgetherSchwefel70TwoPhaseNozzleAndHollowCoreJetExperiments,
    AUTHOR      = {J"urgen Klockgether and Hans--Paul Schwefel},
    TITLE       = {Two--phase nozzle and hollow core jet
            experiments},
    EDITOR      = {D.~G.~Elliott},
    BOOKTITLE   = {Proc.~Eleventh Symp.~Engineering Aspects of
            Magnetohydrodynamics},
    ADDRESS     = {California Institute of Technology, Pasadena CA},
    VOLUME      = {},
    NUMBER      = {},
    PAGES       = {141--148},
    YEAR        = {1970},
    MONTH       = {March 24--26},
}

***************************
* Missing Self-adaptation
***************************

%nicht in ralfs subscription
@Article{EibenHinterdingMichalewicz99ParameterControlInEvolutionaryAlgorithms,
  author =  "Agoston Endre Eiben and Robert Hinterding and Zbigniew
         Michalewicz",
  title =   "Parameter Control in Evolutionary Algorithms",
  journal = "IEEE Transations on Evolutionary Computation",
  year =    "1999",
  volume =  "3",
  number =  "2",
  pages =   "124--141",
  month =   jul,
  keywords =    "evolutionary strategies, genetic algorithms,
         evolutionary computation, self-adjusting systems,
         control mechanisms, evolutionary algorithms, parameter
         control, self-adaptation",
  ISSN =    "1089-778X",
  doi = "10.1109/4235.771166",
  size =    "18 pages",
  abstract =    "The issue of controlling values of various parameters
         of an evolutionary algorithm is one of the most
         important and promising areas of research in
         evolutionary computation: it has a potential of
         adjusting the algorithm to the problem while solving
         the problem. In the paper we: 1) revise the
         terminology, which is unclear and confusing, thereby
         providing a classification of such control mechanisms,
         and 2) survey various forms of control which have been
         studied by the evolutionary computation community in
         recent years. Our classification covers the major forms
         of parameter control in evolutionary computation and
         suggests some directions for further research",
  notes =   "Some mention of GP, particularly Peter Angeline's
         work. Reference Cited: 144 CODEN: ITEVF5 Inspec
         Accession Number: 6290502",
}

@article{SebeLewHuijsmans00TowardImprovedRankingMetrics,
 author = {Nicu Sebe and Michael S. Lew and Dionysius P. Huijsmans},
 title = {Toward Improved Ranking Metrics},
 journal = {IEEE Trans. Pattern Anal. Mach. Intell.},
 volume = {22},
 number = {10},
 year = {2000},
 issn = {0162-8828},
 pages = {1132--1143},
 doi = {10.1109/34.879793},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
 }
@incollection{Farr96SoftwareReliabilityModelingSurvey,
	author = "W. Farr",
	title = "Software Reliability Modeling Survey",
	crossref = "Lyu96HandbookOfSoftwareReliabilityEngineering",
	year = 1996,
	CHAPTER = 3,
	PAGES = "71--117",
	annote = "\citet{Farr96SoftwareReliabilityModelingSurvey} surveys software reliability modeling that base on time series of failure, primarily using maximum likelihood estimates (in some cases least-squete estimation)"
}



@inproceedings{ZageZage03AnAnalysisOfFaultCorrectionProcessInALargeScaleSDLPoductionModel,
 author = {Dolores Zage and Wayne Zage},
 title = {An analysis of the fault correction process in a large-scale SDL production model},
 booktitle = {Proceedings of the 25th International Conference on Software Engineering (ISCE '03)},
 year = {2003},
 isbn = {0-7695-1877-X},
 pages = {570--577},
 location = {Portland, Oregon},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
 }



@article{HovemeyerPugh04FindingBugsIsEasy,
 author = {David Hovemeyer and William Pugh},
 title = {Finding bugs is easy},
 journal = {SIGPLAN Not.},
 volume = {39},
 number = {12},
 year = {2004},
 issn = {0362-1340},
 pages = {92--106},
 doi = {10.1145/1052883.1052895},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }

@book{Allen02BugPatternsInJava,
 author = {Eric Allen},
 title = {Bug Patterns in Java},
 year = {2002},
 isbn = {1590590619},
 publisher = {APress L. P.},
}

@inproceedings{ArthoBiere01ApplyingStaticAnalysisToLargeScaleMultiThreadedJavaPrograms,
 author = {Cyrille Artho and Armin Biere},
 title = {Applying Static Analysis to Large-Scale, Multi-Threaded Java Programs},
 booktitle = {ASWEC '01: Proceedings of the 13th Australian  Conference on Software Engineering},
 year = {2001},
 pages = {68},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
 }

@inproceedings{LeszakPerryStoll00ACaseStudyInRootCauseDefectAnalysis,
 author = {Marek Leszak and Dewayne E. Perry and Dieter Stoll},
 title = {A case study in root cause defect analysis},
 booktitle = {Proceedings of the 22nd international conference on Software engineering (ICSE '00)},
 year = {2000},
 isbn = {1-58113-206-9},
 pages = {428--437},
 location = {Limerick, Ireland},
 doi = {10.1145/337180.337232},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }

@article{KaoIyerTang93FINEAFaultInjectionAndMonitoringEnvironmentForTracingTheUNIXSystemBehaviorUnderFaults,
author = {W.-I. Kao and R.K. Iyer and D. Tang},
title = {{FINE}: A Fault Injection and Monitoring Environment for Tracing the UNIX System Behavior Under Faults},
journal = {Transactions on Software Engineering},
volume = {19},
number = {11},
year = {1993},
issn = {0098-5589},
pages = {1105-1118},
doi = {10.1109/32.256857},
publisher = {IEEE},
address = {Los Alamitos, CA, USA},
}

@inproceedings{ChouYangChelfHallemEngler01AnEmpiricalStudyOfOperatingSystemErrors,
 author = {Andy Chou and Junfeng Yang and Benjamin Chelf and Seth Hallem and Dawson Engler},
 title = {An empirical study of operating systems errors},
 booktitle = {SOSP '01: Proceedings of the eighteenth ACM symposium on Operating systems principles},
 year = {2001},
 isbn = {1-58113-389-8},
 pages = {73--88},
 location = {Banff, Alberta, Canada},
 doi = {10.1145/502034.502042},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }

@article{Hatton97ReexamingTheFaultDensityComponentSizeConnection,
 author = {Les Hatton},
 title = {Reexamining the Fault Density-Component Size Connection},
 journal = {IEEE Softw.},
 volume = {14},
 number = {2},
 year = {1997},
 issn = {0740-7459},
 pages = {89--97},
 doi = {10.1109/52.582978},
 publisher = {IEEE Computer Society Press},
 address = {Los Alamitos, CA, USA},
 }

@InCollection{LaprieArlatBeounesKarama95ArchitecturalIssuesInSoftwareFaultTolerance,
	title = "Architectural Issues In Software Fault Tolerance",
	author = "Jean-Claude Laprie and Jean Arlat and Christian Beounes and Karama Kanoun",
	crossref = {Lyu95SoftwareFaultTolerance},
	pages = "47--80",
	chapter = "3",
	year = "1995",
}

@InCollection{LaiWang95SoftwareFaultInsertionTestingForFaultTolerance,
	title = "Software Fault Insertion Testing For Fault Tolerance",
	author = "Ming-Yee Lai and Steve Y. Wang",
	crossref = {Lyu95SoftwareFaultTolerance},
	pages = "315--333",
	chapter = "13",
	year = "1995",
}

@incollection{Avizienis95TheMethodologyOfNVersionProgramming,
  author =       "A. Avi\v{z}ienis",
  title =        "{The Methodology of N-Version Programming}",
  pages =        "23--46",
  publisher =    "John Wiley \& Sons, Inc.",
  year =     "1995",
  type = {section},
  chapter = "2",
  booktitle = {Software Fault Tolerance},
  crossref= {Lyu95SoftwareFaultTolerance},
}

@proceedings{Lyu95SoftwareFaultTolerance,
 editor = {Michael R. Lyu},
 title = {Software Fault Tolerance},
 year = {1995},
 isbn = {0471950688},
 publisher = "John Wiley \& Sons, Inc.",
 address = {New York, NY, USA},
 }

 @article{Eisenstadt97MyHairiestBugWarStories,
 author = {Marc Eisenstadt},
 title = {My hairiest bug war stories},
 journal = {Commun. ACM},
 volume = {40},
 number = {4},
 year = {1997},
 issn = {0001-0782},
 pages = {30--37},
 doi = {10.1145/248448.248456},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }

 @article{Tyma98WhyAreWeUsingJavaAgain,
 author = {Paul Tyma},
 title = {Why are we using Java again?},
 journal = {Commun. ACM},
 volume = {41},
 number = {6},
 year = {1998},
 issn = {0001-0782},
 pages = {38--42},
 doi = {10.1145/276609.276617},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 note={It is explained why Java prevents from making faults in memory management.}
 }

@Article{ Nachnameauthor1...NachnameauthorNJahreszahlTitel,
	AUTHOR = "Musterman, M. and Musterfrau, M",
	TITLE = "{Beispiele zum Beispiel}",
	JOURNAL = "Journalname (ohne ACM oder IEEE)",
	YEAR = 2004,
	MONTH = dec,
	VOLUME = 53,
	NUMBER = 4,
	PUBLISHER = "IEEE oder ACM",
	PAGES = "1--100",
	ABSTRACT = "",
	KEYWORDS = ""
}

@inproceedings{ SharmaTrivedi05ArchitectureBasedAnalysisOfPerformanceReliabilityAndSecurityOfSoftwareSystems,
	author = "Vibhu Saujanya Sharma and Kishor S. Trivedi",
	title = "Architecture based analysis of performance, reliability and security of software systems",
	booktitle = "WOSP '05: Proceedings of the 5th international workshop on Software and performance",
	year = "2005",
	isbn = "1-59593-087-6",
	pages = "217--227",
	location = "Palma, Illes Balears, Spain",
	doi = "10.1145/1071021.1071046",
	publisher = "ACM Press",
	address = "New York, NY, USA",
	annote = "Approach for an combined prediction of performance, reliability, and security based on the architecture and component attributes. (Hierarchical state-based sw-reliability assesment)"
}

@inproceedings{ Freeman76SoftwareReliabilityAndDesignASurvey,
	author = "Peter Freeman",
	title = "Software reliability and design: A survey",
	booktitle = "DAC '76: Proceedings of the 13th conference on Design automation",
	year = "1976",
	pages = "484--494",
	location = "San Francisco, California, United States",
	publisher = "ACM Press",
	address = "New York, NY, USA",
	anote = "Understands sw-reliability as combination of correctness and robustness. Hardware reliability is not equalt to software reliability. The designing is the relevant aspect to software reliability. ``Formal definitions and estimations of reliability will never be able to characterize complexity what we intuitively understand it'' "
}

@inproceedings{ Littlewood78HowToMeasureSoftwareReliabilityAndHowNotTo,
	author = "B. Littlewood",
	title = "How to measure software reliability, and how not to",
	booktitle = "Proceedings of the 3rd international conference on Software engineering (ICSE '78)",
	year = "1978",
	isbn = "none",
	pages = "37--45",
	location = "Atlanta, Georgia, United States",
	publisher = "IEEE Press",
	address = "Piscataway, NJ, USA",
	annote = "The article claims that hardware-motivated measures (mttf, mtbf) should not be used for software without justification. He motivates to distinquish between sw reliability of the program-as-it-is (e.g. bugs) and sw reliability as-it-performs (operational reliability). ``Software reliability means operational reliability. Who cares how many bugs are in a program? We should be concerned with their effect on its operation.''"
}

@article{ Mohanty79ModelsAndMeasurementsForQualityAssessmentOfSoftware,
	author = "Siba N. Mohanty",
	title = "Models and Measurements for Quality Assessment of Software",
	journal = "ACM Comput. Surv.",
	volume = "11",
	number = "3",
	year = "1979",
	issn = "0360-0300",
	pages = "251--275",
	doi = "10.1145/356778.356783",
	publisher = "ACM Press",
	address = "New York, NY, USA",
	anote = "Discusses software measurement and claims that it can (and should) be done."
}


@article{ KanounKaanicheLaprie97QualitativeAndQuantitativeReliabilityAssessment,
	author = "Karama Kanoun and Mohamed Ka{\^a}niche and Jean-Claude Laprie",
	title = "Qualitative and Quantitative Reliability Assessment",
	journal = "IEEE Software",
	volume = "14",
	number = "2",
	year = "1997",
	issn = "0740-7459",
	pages = "77--87",
	doi = "10.1109/52.582977",
	publisher = "IEEE Computer Society Press",
	address = "Los Alamitos, CA, USA"
}

@article{ Cook82SoftwareMetricsAnIntroductionAndAnnotatedBibliography,
	author = "Michael L. Cook",
	title = "Software metrics: an introduction and annotated bibliography",
	journal = "SIGSOFT Softw. Eng. Notes",
	volume = "7",
	number = "2",
	year = "1982",
	issn = "0163-5948",
	pages = "41--60",
	doi = "10.1145/1005937.1005946",
	publisher = "ACM Press",
	address = "New York, NY, USA",
	annote = ""
}

@inproceedings{ Miyamoto78TowardAnEffectiveSoftwareReliabilityEvaluation,
	author = "Isao Miyamoto",
	title = "Toward an effective software reliability evaluation",
	booktitle = "Proceedings of the 3rd international conference on Software engineering (ICSE '78)",
	year = "1978",
	isbn = "none",
	pages = "46--55",
	location = "Atlanta, Georgia, United States",
	publisher = "IEEE Press",
	address = "Piscataway, NJ, USA",
	annote = "Summaries the differences between hardware reliability and software reliability and reviews software reliability evaluation."
}

@Article{ YacoubCukicAmmar04AScenarioBasedReliabilityAnalysisApproachForComponentBasedSoftware,
	AUTHOR = "Yacoub, S. and Cukic, B. and Ammar, H.H.",
	TITLE = "{A scenario-based reliability analysis approach for component-based software}",
	JOURNAL = "Transactions on Reliability",
	YEAR = 2004,
	MONTH = dec,
	VOLUME = 53,
	NUMBER = 4,
	PUBLISHER = "IEEE",
	PAGES = "465--480",
	ABSTRACT = "This paper introduces a reliability model, and a reliability analysis technique for component-based software. The technique is named Scenario-Based Reliability Analysis (SBRA). Using scenarios of component interactions, we construct a probabilistic model named Component-Dependency Graph (CDG). Based on CDG, a reliability analysis algorithm is developed to analyze the reliability of the system as a function of reliabilities of its architectural constituents. An extension of the proposed model and algorithm is also developed for distributed software systems. The proposed approach has the following benefits: 1) It is used to analyze the impact of variations and uncertainties in the reliability of individual components, subsystems, and links between components on the overall reliability estimate of the software system. This is particularly useful when the system is built partially or fully from existing off-the-shelf components; 2) It is suitable for analyzing the reliability of distributed software systems because it incorporates link and delivery channel reliabilities; 3) The technique is used to identify critical components, interfaces, and subsystems; and to investigate the sensitivity of the application reliability to these elements; 4) The approach is applicable early in the development lifecycle, at the architecture level. Early detection of critical architecture elements, those that affect the overall reliability of the system the most, is useful in delegating resources in later development phases.",
	KEYWORDS = "object-oriented programming,reliability theory,software reliability,software reusability,CDG,architectural constituent,component-based software,component-dependency graph,critical architecture element,delivery channel reliabilities,distributed software system,probabilistic model,reliability model,scenario-based reliability analysis,software reuse,software system reliability estimation,subsystem reliability"
}

@Article{ YacoubAmmar02AMethodologyForArchitectureLevelReliabilityRiskAnalysis,
	AUTHOR = "Yacoub, S.M. and Ammar, H.H.",
	TITLE = "{A methodology for architecture-level reliability risk analysis}",
	JOURNAL = "Transactions on Software Engineering",
	YEAR = 2002,
	MONTH = jun,
	VOLUME = 28,
	NUMBER = 6,
	PUBLISHER = "IEEE",
	PAGES = "529--547",
	ABSTRACT = "The paper presents a methodology for reliability risk assessment at the early stages of the development lifecycle, namely, the architecture level. We describe a heuristic risk assessment methodology that is based on dynamic metrics. The methodology uses dynamic complexity and dynamic coupling metrics to define complexity factors for the architecture elements (components and connectors). Severity analysis is performed using Failure Mode and Effect Analysis (FMEA) as applied to architecture models. We combine severity and complexity factors to develop heuristic risk factors for the architecture components and connectors. Based on analysis scenarios, we develop a risk assessment model that represents components, connectors, component risk factors, connector risk factors, and probabilities of component interactions. We also develop a risk analysis algorithm that aggregates risk factors of components and connectors to the architectural level. Using the risk aggregation and the risk analysis model, we show how to analyze the overall risk factor of the architecture as the function of the risk factors of its constituting components and connectors. A case study of a pacemaker architecture is used to illustrate the application of the methodology. The methodology is used to identify critical components and connectors and to investigate the sensitivity of the architecture risk factor to changes in the heuristic risk factors of the architecture elements"
}

@inproceedings{ SinghCortellessaCukicGunelBharadwaj01ABaysianApproachToReliabilityPredictionAndAssessmentOfComponentBasedSystems,
	AUTHOR = "Singh, H. and Cortellessa, V. and Cukic, B. and Gunel, E. and Bharadwaj, V.",
	TITLE = "{A Bayesian approach to reliability prediction and assessment of component based systems}",
	YEAR = 2001,
	MONTH = nov,
	BOOKTITLE = "Proceedings of the 12th International Symposium on Software Reliability Engineering",
	PUBLISHER = "IEEE",
	PAGES = "12--21",
	ABSTRACT = "It is generally believed that component-based software development leads to improved application quality, maintainability and reliability. However most software reliability techniques model integrated systems. These models disregard system's internal structure, taking into account only the failure data and interactions with the environment. We propose a novel approach to reliability analysis of component-based systems. Reliability prediction algorithm allows system architects to analyze reliability of the system before it is built, taking into account component reliability estimates and their anticipated usage. Fully integrated with the UML, this step can guide the process of identifying critical components and analyze the effect of replacing them with the more/less reliable ones. Reliability assessment algorithm, applicable in the system test phase, utilizes these reliability predictions as prior probabilities. In the Bayesian estimation. framework, posterior probability of failure is calculated from the priors and test failure data."
}

@inproceedings{ GokhaleLyuTrivendi98ReliabilitySimulationOfComponentBasedSoftwareSystems,
	AUTHOR = "Gokhale, S.S. and Lyu, M.R. and Trivedi, K.S.",
	TITLE = "{Reliability simulation of component-based software systems}",
	YEAR = 1998,
	MONTH = nov,
	BOOKTITLE = "Proceedings of the 9th International Symposium on Software Reliability Engineering",
	PUBLISHER = "IEEE",
	PAGES = "192--201",
	ABSTRACT = "Prevalent Markovian and semi Markovian methods to predict the reliability and performance of component based heterogeneous systems suffer from several limitations: they are subject to an intractably large state space for more complex scenarios, and they cannot take into account the influence of various parameters such as reliability growth of individual components, dependencies among components, etc., in a single model. Discrete event simulation offers an alternative to analytical models as it can capture a detailed system structure, and can be used to study the influence of different factors separately as well as in a combined fashion on dependability measures. We demonstrate the flexibility offered by discrete event simulation to analyze such complex systems through two case studies, one of a terminating application, and the other of a real time application with feedback control. We simulate the failure behavior of the terminating application with instantaneous as well as explicit repair. We also study the effect of having fault tolerant configurations for some of the components on the failure behavior of the application. In the second case of the real time application, we initially simulate the failure behavior of a single version taking into account its reliability growth. We also study the failure behavior of three fault tolerant systems: DRB, NVP and NSCP which are built from the individual versions of the real time application. Results demonstrate the flexibility offered by simulation to study the influence of various factors on the failure behavior of the applications for single as well as fault tolerant configurations."
}

@inproceedings{ SanyalShahBhattacharya97FrameworkOfASoftwareReliabilityEngineeringTool,
	AUTHOR = "Sanyal, S. and Shah, V. and Bhattacharya, S.",
	TITLE = "{Framework of a software reliability engineering tool}",
	YEAR = 1997,
	MONTH = aug,
	BOOKTITLE = "Proceedings of the High-Assurance Systems Engineering Workshop 1997",
	PUBLISHER = "IEEE",
	PAGES = "114--119",
	ABSTRACT = "The usage of commercial off-the-shelf (COTS) software modules in a large, complex software development project has well-known advantages (e.g. reduced development time and reduced cost). However, many such designs remain ill-understood in terms of end-to-end, overall reliability and assurance of the software system. Since the COTS components may not have been designed with assurance attributes in mind, a COTS module integrated system may fail to provide high end-to-end assurance. In applications that require timing, reliability and security guarantees, the usage of COTS software components can therefore mandate an analysis of the assurance attributes. The users of such systems may desire to predict the effect of the occurrence of an event on the reliability of other events in the system, and in general carry out an end-to-end analysis of the software system assurance. In this paper, we evaluate the causality, reliability and the overall performance aspects of large-scale software using a reverse engineering approach. The proposed code analysis approach can evaluate whether the COTS software meets the user-specified individual/group reliability constraints or not. In the case of reliability violation, our proposed approach can identify the modules of the software that may require re-design. The underlying idea is to merge event probabilities, event dependencies and fault propagation to calculate the occurrence probabilities of every event in the system."
}

@inproceedings{ ShahBhattacharya97FaultPropagationAnalysisBasedVariableLengthCheckpointPlacementForFaultTolerantParallelAndDistributedSystems,
	AUTHOR = "Shah, V. and Bhattacharya, S.",
	TITLE = "{Fault propagation analysis based variable length checkpoint placement for fault-tolerant parallel and distributed systems}",
	YEAR = 1997,
	MONTH = aug,
	BOOKTITLE = "Proceedings of the 21st Conference on Computer Software and Applications",
	PUBLISHER = "IEEE",
	PAGES = "612--615",
	ABSTRACT = "The paper proposes optimal checkpoint placement strategies using failure propagation analysis in a distributed rollback recovery system. The authors' previously proposed idea of failure propagation analysis (FPA) based checkpoint placement strategy is enhanced by incorporating link failures, task grouping/allocation, and loop stabilization aspects. Owing to the empirical observation that a large number of faults occur around message communication instructions, the checkpoint placement strategy places more checkpoints around message send/receive regions of the code. Allocation of tasks (or, threads) onto different processors can lead to varied communication patterns, which in turn can affect the FPA process and the checkpoint placement strategies. Thus, another key contribution of our research is to show the cyclic relationship between checkpointing and task allocation, as well as recursion in parallel or distributed programs. The proposed ideas and FPA approaches are illustrated using a typical parallel algorithm-the fast Fourier transform (FFT)."
}

@Article{ Voas97ErrorPropagationAnalysisForCOTSsystems,
	AUTHOR = "Voas, J.",
	TITLE = "{Error propagation analysis for COTS systems}",
	JOURNAL = "Computing \& Control Engineering",
	YEAR = 1997,
	MONTH = dec,
	VOLUME = 8,
	NUMBER = 6,
	PUBLISHER = "IEEE",
	PAGES = "269--272",
	ABSTRACT = "Today's software systems are `systems of systems'. The semantic dependencies between software components are so complex that they can no longer be fully understood by a single person. Thus the engineering design paradigm known as `divide and conquer' must be employed. Because of this, it is likely that logical incompatibilities (component-to-component or component-to-environment) will exist after the system is in service. A black-box analysis technique that studies how information flows (propagates) between software components is described. The technique forcefully corrupts the information that flows between components and observes what impacts the corruption had. By watching how corrupt information propagates, we isolate those components that cannot tolerate the failure of other components."
}

@incollection{ LamportShostakPease95TheByzantineGeneralsProblem,
	author = "Lamport and Shostak and Pease",
	title = "The Byzantine Generals Problem",
	booktitle = "Advances in Ultra-Dependable Distributed Systems, N. Suri, C. J. Walter, and M. M. Hugue (Eds.), {IEEE} Computer Society Press",
	year = "1995",
	url = "http://citeseer.ist.psu.edu/lamport82byzantine.html"
}

@inproceedings{ KrishnamurthyMathur97OnTheEstimationOfReliabilityOfASoftwareSystemUsingReliabilitiesOfItsComponents-WEB,
	AUTHOR = "Krishnamurthy, S. and Mathur, A.P.",
	TITLE = "{On the estimation of reliability of a software system using reliabilities of its components}",
	YEAR = 1997,
	MONTH = apr,
	PUBLISHER = "Technical Report, SERC-TR-172-P",
	PAGES = "1--21",
	note = " Available online: \href{http://www.serc.net/library}{http://www.serc.net/library}[Accessed 5.4.2005]",
	ABSTRACT = "We report an experiment to evaluate a method, known as component based reliability estimation (CBRE), for the estimation of reliability of a software system using reliabilities of its components. CBRE involves computing path reliability estimates based on the sequence of components executed for each test input. Path reliability estimates are averaged over all test runs to obtain an estimate of the system reliability. In the experiment reported, three components of a Unix utility were seeded with errors and the reliability of each component was measured. The faulty components were then introduced systematically into the utility, in various combinations, to produce several faulty versions of the utility. For each faulty version, test cases were drawn from an operational profile to measure the component-based reliability. The true reliability of the faulty version was estimated using the frequency count approach. The goodness of CBRE was assessed in terms of the accuracy and efficiency of the estimates with respect to the true reliability. Results from this experiment suggest that CBRE yields reasonably accurate results at an efficient rate. However, the accuracy and efficiency of CBRE is sensitive to the dependency among successive calls to a component."
}

@inproceedings{ KrishnamurthyMathur97OnTheEstimationOfReliabilityOfASoftwareSystemUsingReliabilitiesOfItsComponents,
	AUTHOR = "Krishnamurthy, S. and Mathur, A.P.",
	TITLE = "{On the estimation of reliability of a software system using reliabilities of its components}",
	YEAR = 1997,
	MONTH = nov,
	BOOKTITLE = "Proceedings of the Eighth International Symposium On Software Reliability Engineering",
	PUBLISHER = "IEEE",
	PAGES = "146--155",
	ABSTRACT = "We report an experiment to evaluate a method, known as component based reliability estimation (CBRE), for the estimation of reliability of a software system using reliabilities of its components. CBRE involves computing path reliability estimates based on the sequence of components executed for each test input. Path reliability estimates are averaged over all test runs to obtain an estimate of the system reliability. In the experiment reported, three components of a Unix utility were seeded with errors and the reliability of each component was measured. The faulty components were then introduced systematically into the utility, in various combinations, to produce several faulty versions of the utility. For each faulty version, test cases were drawn from an operational profile to measure the component-based reliability. The true reliability of the faulty version was estimated using the frequency count approach. The goodness of CBRE was assessed in terms of the accuracy and efficiency of the estimates with respect to the true reliability. Results from this experiment suggest that CBRE yields reasonably accurate results at an efficient rate. However, the accuracy and efficiency of CBRE is sensitive to the dependency among successive calls to a component."
}

@inproceedings{ HamletMasonWoit01TheoryOfSoftwareReliabilityBasedOnComponents,
	author = "Dick Hamlet and Dave Mason and Denise Woit",
	title = "{Theory of software reliability based on components}",
	booktitle = "Proceedings of the 23rd International Conference on Software Engineering",
	year = "2001",
	pages = "361--370",
	publisher = "IEEE",
	note = " Available: \href{http://citeseer.ist.psu.edu/hamlet01theory.html}{http://citeseer.ist.psu.edu/hamlet01theory.html}[Accessed 21.02.2005]",
	abstract = "We present a foundational theory of software system reliability based on components. The theory describes how component developers can design and test their components to produce measurements that are later used by system designers to calculate composite system reliability - without implementation and test of the system being designed. The theory describes how to make component measurements that are independent of operational profiles, and how to incorporate the overall system-level operational profile into the system reliability calculations. In principle, the theory resolves the central problem of assessing a component, which is: a component developer cannot know how the component will be used and so cannot certify it for an arbitrary use; but if the component buyer must certify each component before using it, component-based development loses much of its appeal. This dilemma is resolved if the component developer does the certification and provides the results in such a way that the component buyer can factor in the usage information later, without repeating the certification. Our theory addresses the basic technical problems inherent in certifying components to be released for later use in an arbitrary system. Most component research has been directed at functional specification of software components; our theory addresses the other, equally important, side of the coin: component quality."
}

@inproceedings{ MasonWoit98ProblemsWithSoftwareReliabilityComposition,
	author = "D. Mason and D. Woit",
	title = "Problems with Software Reliability Composition",
	booktitle = "Proceedings of the 9th International Symposium on Software Reliability Engineering",
	year = "1998",
	MONTH = jul,
	note = " Available: \href{http://citeseer.ist.psu.edu/mason98problems.html}{http://citeseer.ist.psu.edu/mason98problems.html} [Accessed 21.02.2005]",
	pages = "2",
	ABSTRACT = "Progress is being made toward being able to calculate software system reliability from the reliability of the components and information about the structure of their interactions. This paper enumerates the outstanding problems and provides solutions, or pointers to solutions, for each."
}

@inproceedings{ GokhaleTrivedi98DependencyCharacterizationInPathBasedApproachesToArchitectureBasedSoftwareReliabilityPrediction,
	author = "Gokhale, S.S. and Trivedi, K.S.",
	title = "Dependency characterization in path-based approaches to architecture-based software reliability prediction",
	booktitle = "Proceedings of the Workshop on Application-Specific Software Engineering Technology (ASSET) 1998",
	year = "1998",
	MONTH = mar,
	publisher = "IEEE",
	note = " Available: \href{http://citeseer.ist.psu.edu/mason98problems.html}{http://citeseer.ist.psu.edu/mason98problems.html} [Accessed 21.02.2005]",
	pages = "86--89",
	ABSTRACT = "Prevalent black-box based approaches to software reliability modeling are inappropriate to model the failure behavior of modern, component-based heterogeneous systems. Reliability prediction of applications taking into account their architecture is absolutely essential. The path-based approaches to architecture-based software reliability prediction rely on a fundamental assumption that the successive execution of the components is independent. This leads to very pessimistic estimates of software reliability. In this paper, we describe the dependency characterization which is a major bottleneck in the application of path-based approaches to real-life systems, and propose a way to resolve this issue based on time-dependent failure intensity"
}

@inbook{ HorganMathur96SoftwareTestingAndReliability,
	author = "J. Horgan and A. Mathur",
	title = "{Software testing and reliability}",
	editor = "M. R. Lyu",
	publisher = "McGraw-Hill",
	year = "1996",
	address = "New York",
	booktitle = "Handbook of Software Reliability Engineering",
	PAGES = "531--566"
}



@InProceedings{LongMuirGolding95ALongitudinalSurveyOfInternetHostReliability,
  author =	"Darrell Long and Andrew Muir and Richard Golding",
  title =	"A Longitudinal Survey of Internet Host Reliability",
  pages =	"2--9",
  booktitle =	"Symposium on Reliable Distributed Systems ({SRDS}
		 '95)",
  month =	sep,
  publisher =	"IEEE Computer Society Press",
  address =	"Los Alamitos, Ca., USA",
  year = 	"1995",
  ISBN = 	"0-8186-7153-X",
}

@InProceedings{OppenheimerGanapathiPatterson03WhyDoInternetServicesFailAndWhatCanBeDoneAboutIt,
  title =	"Why Do Internet Services Fail, and What Can Be Done About It?",
  author =	"David L. Oppenheimer and Archana Ganapathi and David A. Patterson",
  year = 	"2003",
  month = mar,
  pages = "1--16",
  booktitle = "Proceedings of the 4th Symposium on Internet Technologies and Systems (USITS `03)",
}

@Article{KalyanakrishnanIyerPatel97ReliabilityOfInternetHostsACaseStudyFromTheEndUsersPerspective,
  title =	"Reliability of Internet Hosts: {A} Case Study from the End User's Perspective",
  author =	"Mahesh Kalyanakrishnan and Ravishankar K. Iyer and Jaqdish U. Patel",
  journal =	"Computer Networks",
  year = 	"1999",
  number =	"1-2",
  volume =	"31",
  pages =	"47--57",
  doi =  	"10.1016/S0169-7552(98)00229-3",
}

@inproceedings{ Littlewood05DependabilityAssessmentOfSoftwareBasedSystemsStateOfTheArt,
	author = "Bev Littlewood",
	title = "Dependability assessment of software-based systems: state of the art",
	booktitle = "Proceedings of the 27th international conference on Software engineering (ICSE '05)",
	year = "2005",
	isbn = "1-59593-963-2",
	pages = "6--7",
	location = "St. Louis, MO, USA",
	doi = "10.1145/1062455.1062461",
	publisher = "ACM Press",
	address = "New York, NY, USA"
}


%in library of uni-oldenburg: inf 325 bl 0246

@book{ MusaIanninoOkumoto87SoftwareReliabilityMeasurementPredictionApplication,
	author = "John D. Musa and Anthony Iannino and Kazuhira Okumoto",
	title = "Software Reliability: Measurement, Prediction, Application",
	publisher = "McGraw-Hill",
	year = "1987",
	address = "New York",
	isbn = "0-07-044093-X",
	pages = 621,
	edition = "first"
}

%in Bibo inf 322 CK 7607

@book{ CrnkovicLarsson02BuildingReliableComponentBasedSoftwareSystems,
	author = "Ivica Crnkovic and Magnus Larsson",
	title = "{Building reliable component-based software systems}",
	publisher = "Artech House computing library",
	year = "2002",
	pages = 413,
	edition = 1
}

@inproceedings{ Everett99SoftwareComponentReliabilityAnalysis,
	author = "Everett, W.W.",
	title = "Software component reliability analysis",
	booktitle = "Proceedings of the Symposium on Application-Specific Systems and Software Engineering and Technology",
	year = "1999",
	MONTH = mar,
	publisher = "IEEE",
	pages = "204--211",
	ABSTRACT = "This paper describes an approach to analyzing software reliability using component analysis. It walks through a 6-step procedure for performing software component reliability analysis. The analysis can begin prior to testing the software and can help in selecting testing strategies. It uses the Extended Execution Time (EET) reliability growth model at the software component level. The paper describes how to estimate model parameters from characteristics of the software components and characteristics of how test cases and operational usage stress the software components. The order in which test cases are run is used in combining component models to arrive at a composite reliability growth model of the software for the testing period. The paper walks through an example illustrating the effects on reliability growth of: selecting test cases based on an operational profile versus selecting them based on uniform coverage of test cases; and incremental delivery of software components to system test. The paper contrasts the described approach to other approaches currently used to analyze software reliability growth during testing. The analysis can be done using commercial data analysis programs."
}

@inproceedings{ Schneidewind96SoftwareReliabilityEngineeringForClientServerSystems,
	author = "Schneidewind, N.F.",
	title = "Software reliability engineering for client-server systems",
	booktitle = "Proceedings of the Symposium on Software Reliability Engineering",
	year = "1996",
	MONTH = oct,
	publisher = "IEEE",
	pages = "226--235",
	ABSTRACT = "Too often, when doing software reliability modeling and prediction, the assumption is made that the software involves either a single module or a single node. The reality in today's increasing use of multi-node client-server systems is that there are multiple software entities that execute on multiple nodes that must be modeled in a system context, if realistic reliability predictions and assessments are to be made. For example, if there are Nc clients and Nx servers in a client-server system, it is not necessarily the case that a software failure in any of the Nc clients or Nx servers will cause the system to fail. Thus, if such a system were to be modeled as a single entity, the predicted reliability would be much lower than the true reliability, because the prediction would not account for criticality and redundancy. The first factor accounts for the possibility that the survivability of some clients and servers will be more critical to continued system operation than others, while the second factor accounts for the possibility of using redundant nodes to allow for system recovery should a critical node fail. To address this problem, we must identify which nodes-clients and servers-are critical and which are not critical, as defined by whether these nodes are used for critical or non-critical functions, respectively."
}

@Article{ WhittakerThomason94AMarkovChainModelForStatisticalSoftwareTesting,
	AUTHOR = "Whittaker, J.A. and Thomason, M.G.",
	TITLE = "{A Markov chain model for statistical software testing}",
	JOURNAL = "Transactions on Software Engineering",
	YEAR = 1994,
	MONTH = oct,
	VOLUME = 20,
	NUMBER = 10,
	PUBLISHER = "IEEE",
	PAGES = "812--824",
	ABSTRACT = "Statistical testing of software establishes a basis for statistical inference about a software system's expected field quality. This paper describes a method for statistical testing based on a Markov chain model of software usage. The significance of the Markov chain is twofold. First, it allows test input sequences to be generated from multiple probability distributions, making it more general than many existing techniques. Analytical results associated with Markov chains facilitate informative analysis of the sequences before they are generated, indicating how the test is likely to unfold. Second, the test input sequences generated from the chain and applied to the software are themselves a stochastic model and are used to create a second Markov chain to encapsulate the history of the test, including any observed failure information. The influence of the failures is assessed through analytical computations on this chain. We also derive a stopping criterion for the testing process based on a comparison of the sequence generating properties of the two chains."
}

@Article{ WhittakerRekabThomason00AMarkovChainModelForPredictingTheReliabilityOfMultiBuildSoftware,
	author = "J. A. Whittaker and K. Rekab and M. G. Thomason",
	title = "{A Markov chain model for predicting the reliability of multi-build software}",
	journal = "Information and Software Technology",
	year = 2000,
	publisher = "``Elsevier''",
	month = sep,
	volume = 42,
	number = 12,
	pages = "889--894",
	doi = "10.1016/S0950-5849(00)00122-1"
}

@Article{ ChangJeng05ImpartialEvaluationInSoftwareReliabilityPractice,
	author = "Wen-Kui Chang and Shuen-Lin Jeng",
	title = "{Impartial evaluation in software reliability practice}",
	journal = "Journal of Systems and Software",
	year = 2005,
	publisher = "``Elsevier''",
	month = sep,
	volume = 76,
	number = 2,
	pages = "99--110",
	keywords = "Software reliability; Impartial reliability; Markov chain; Prior information; Statistical usage testing",
	abstract = "In the past decade, the size scale of software systems and their technical complexity has become much more complicated. Accordingly, quality assessment of software applications has been intensively investigated lately. Among popular software quality metrics, software reliability has been proven to be one of the most useful indices in evaluating software applications. In the literature, statistical usage testing has been widely shown to be effective in estimating software reliability. Essentially, it first transfers the practical operations of a software system into a usage model, which then forms a basis for performing statistical testing and analyzing software reliability. This research investigates the extension of statistical usage testing by considering any prior information or prejudgment on software quality before performing a validation test, and propose the derivation of impartial reliability evaluation that is fair for both the software producer and consumer (end user). A numerical demonstration of validating the correctness of hyper links on a web site via the proposed computation is illustrated and discussed. The suggested mechanism with some prior information will converge much more quickly than other similar reliability models. In addition, the proposed framework also provides the flexibility of taking the practical prejudgment into account.",
	doi = "10.1016/j.jss.2004.03.029"
}

@inproceedings{ HorganLondon92DataFlowCoverageTestingToolForC,
	author = "Horgan, J.R. and London, S.",
	title = "Data flow coverage testing tool for C",
	booktitle = "Proceedings of the Symposium on Assessment of Quality Software Development Tools",
	year = "1992",
	MONTH = may,
	publisher = "IEEE",
	pages = "2--10",
	ABSTRACT = "Describes ATAC (Automatic Test Analysis for C), a tool for data flow coverage testing of C programs. ATAC is being used as a research instrument at Purdue and Bellcore and as a software development tool at Bellcore. The authors discuss the design of ATAC, a preliminary view of its uses in development, and its research uses."
}

@Article{ PooreMillsMutchler93PlanningAndCertifyingSoftwareSystemReliability,
	AUTHOR = "J.H. Poore and H.D. Mills and D. Mutchler",
	TITLE = "{Planning and certifying software system reliability}",
	JOURNAL = "Transactions on Software Engineering",
	YEAR = 1994,
	MONTH = jan,
	VOLUME = 10,
	NUMBER = 1,
	PUBLISHER = "IEEE",
	PAGES = "88--99",
	ABSTRACT = "An approach to software reliability and certification is presented that is based on the use of three mathematical models: the sampling, component, and certification models. The approach helps reduce reliability analysis to a problem that can be evaluated and manipulated through a series of spreadsheets. This approach was motivated by interest in applying the cleanroom software-engineering method in environments that require extensive code reuse."
}

@Article{ GosevaPopstojanovaTrivedi03ArchitectureBaseApproachesToSoftwareReliabilityPrediction,
	author = "K. Go{\v{s}}eva-Popstojanova and K. S. Trivedi",
	title = "{Architecture-based approaches to software reliability prediction}",
	journal = "Computers \& Mathematics with Applications",
	year = 2003,
	publisher = "``Elsevier''",
	month = dec,
	volume = 46,
	number = 7,
	pages = "1023--1036",
	keywords = "Architecture-based software reliability, State-based models, Path-based models, Additive models",
	abstract = "With growing emphasis on reuse, the software development process moves toward component-based software design. As a result, there is a need for modeling approaches that are capable of considering the architecture of the software made out of components. This paper presents an overview of the state of the research and practice in the architecture-based approach to quantitative assessment of software systems. First, the common requirements of the architecture-based models are identified and the classification is proposed. Then, the key models in each class are described in detail with a focus on their relation and unification. Finally, a critical analysis of the underlying assumptions, limitations, and applicability of these models is provided, which should be helpful in determining the directions for future research.",
	doi = "10.1016/S0898-1221(03)90116-7"
}

@Article{ GosevaPopstojanovaTrivedi01ArchitectureBasedApproachToReliabilityAssessmentOfSoftwareSystems,
	author = "K. Go{\v{s}}eva-Popstojanova and K. S. Trivedi",
	title = "{Architecture-based approach to reliability assessment of software systems}",
	journal = "Performance Evaluation",
	year = 2001,
	publisher = "``Elsevier''",
	month = jul,
	volume = 45,
	number = 2,
	pages = "179--204",
	keywords = "Architecture-based software reliability, State-based models, Path-based models, Additive models",
	abstract = "With the growing emphasis on reuse, software development process moves toward component-based software design. As a result, there is a need for modeling approaches that are capable of considering the architecture of the software and estimating the reliability by taking into account the interactions between the components, the utilization of the components, and the reliabilities of the components and of their interfaces with other components. This paper details the state of the architecture-based approach to reliability assessment of component based software and describes howit can be used to examine software behavior right from the design stage to implementation and final deployment. First, the common requirements of the architecture-based models are identified and the classification is proposed. Then, the key models in each class are described in detail and the relation among them is discussed. A critical analysis of underlying assumptions, limitations and applicability of these models is provided which should be helpful in determining the directions for future research. © 2001 Elsevier Science B.V. All rights reserved.",
	doi = "10.1016/S0166-5316(01)00034-7"
}

@Article{ WeidenhauptPohlJarkeHaumer98ScenariosInSystemDevelopmentCurrentPractice,
	AUTHOR = "Weidenhaupt, K. and Pohl, K. and Jarke, M. and Haumer, P.",
	TITLE = "{Scenarios in system development: current practice}",
	JOURNAL = "Software",
	YEAR = 1998,
	MONTH = mar,
	VOLUME = 15,
	NUMBER = 2,
	PUBLISHER = "IEEE",
	PAGES = "34--45",
	ABSTRACT = "Scenario based approaches are becoming ubiquitous in systems analysis and design but remain vague in definition and scope. A survey of current practices indicates we must offer better means for structuring, managing, and developing their use in diverse contexts. The European Esprit project Crews (Cooperative Requirements Engineering with Scenarios) are seeking a deeper understanding of scenario diversity, necessary to improve methodological and tool support for scenario based requirements engineering. They follow a two pronged strategy to gain this understanding. First, following the ``3 dimensions'' requirements engineering framework developed in the precursor Nature project (K. Pohl, 1994), they developed a scenario classification framework based on a comprehensive survey of scenario literature in requirements engineering, human computer interaction, and other fields. They used the framework to classify 11 prominent scenario based approaches. Secondly, to complement this research framework, they investigated scenario applications in industrial projects through site visits with scenario user projects. The article focuses on these site visits. It was found that while many companies express interest in Jacobson's use case approach, actual scenario usage often falls outside what is described in textbooks and standard methodologies. Users therefore face significant scenario management problems not yet addressed adequately in theory or practice, and are demanding solutions to these problems."
}

@inbook{ MusaFuocoIrvingKropfl96TheOperationalProfile,
	author = "John D. Musa and Gene Fuoco and Nancy Irving and Diane Kropfl",
	title = "{The Operational Profile}",
	editor = "M. R. Lyu",
	publisher = "McGraw-Hill",
	year = "1996",
	chapter = 5,
	address = "New York",
	booktitle = "Handbook of Software Reliability Engineering",
	PAGES = "531--566"
}

@Article{ FirleyHuhnDiethersGehrkeGoltz99TimedSequenceDiagramsAndToolBasedAnalysisACaseStudy,
	author = "Thomas Firley and Michaela Huhn and Karsten Diethers and Thomas Gehrke and Ursula Goltz",
	title = "{Timed Sequence Diagrams and Tool-Based Analysis - A Case Study}",
	YEAR = 1999,
	MONTH = oct,
	journal = "Lecture Notes in Computer Science",
	publisher = "Springer-Verlag",
	volume = 1723,
	PAGES = "645--660",
	abstract = "We use UML timed Sequence Diagrams to specify the real-time behaviour of a communication protocol of audio/video components. The Sequence Diagrams build the requirements specification against which an implementation of the protocol developed by the Bang \& Olufsen company is proven correct. To obtain a complete requirements specification, we have to mark the UML Sequence Diagrams as optional or mandatory behaviour. Then the Sequence Diagram interactions with their timing constraints and periods are transferred to a setting of timed automata. We use the UPPAAL tool for verification. In particular, we show that the implementation of the protocol conforms to the Sequence Diagram specification concerning the correct data transfer on the bus."
}

%in bib

@book{ Pressman97SoftwareEngineeringAPractionersApproach,
	author = "Pressman, Roger S.",
	title = "Software engineering : a practioner's approach",
	year = "1997",
	publisher = "McGraw-Hill",
	address = "New York"
}

@inproceedings{ Cheung78AUserOrientedSoftwareReliabilityModel,
	author = "Cheung, R.C.",
	title = "A user-oriented software reliability model",
	booktitle = "Proceedings of the Second International Computer Software and Applications Conference",
	year = "1978",
	MONTH = nov,
	publisher = "IEEE",
	pages = "565--570"
}

@inproceedings{ WangWuChen99AnArchitectureBasedSoftwareReliabilityModel,
	author = "W. Wang and Y. Wu and M. Chen",
	title = "An architecture-based software reliability model",
	booktitle = "Proceedings of the Pacific Rim International Symposium on Dependable Computing",
	year = "1999",
	MONTH = dec,
	publisher = "IEEE",
	pages = "143--150",
	abstract = "We present an analytical model for estimating architecture-based software reliability, according to the reliability of each component, the operational profile, and the architecture of software. Our approach is based on Markov chain properties and architecture view to state view transformations to perform reliability analysis on heterogeneous software architectures. We demonstrate how this analytical model can be utilized to estimate the reliability of a heterogeneous architecture consisting of batch-sequential/pipeline, call-and-return, parallel/pipe-filters, and fault tolerance styles. In addition, we conduct an experiment on a system embedded with three architectural styles to validate this heterogeneous software reliability model."
}

@inproceedings{ GokhaleWongTrivediHorgan98AnAnalyticalApproachToArchitectureBasedSoftwareReliabilityPrediction,
	author = "Gokhale, S.S. and Wong, W.E. and Trivedi, K.S. and Horgan, J.R.",
	title = "An analytical approach to architecture-based software reliability prediction",
	booktitle = "Proceedings of the Computer Performance and Dependability Symposium",
	year = "1998",
	MONTH = sep,
	publisher = "IEEE",
	pages = "13--22",
	abstract = "Prevalent approaches to software reliability modeling are black-box based, i.e., the the software system is treated as a monolithic entity and only its interactions with the outside world are modeled. However with the advancement and widespread use of object oriented systems design and web-based development, the use of component-based software development is on the rise. Software systems are being developed in a heterogeneous fashion using components developed in-house, contractually, or picked off-the-shelf and hence it may be inappropriate to model the overall failure process of such systems using the existing software reliability growth models. Predicting the reliability of a heterogeneous software system based on its architecture, and the failure behavior of its components is thus absolutely essential. In this paper we present an analytical approach to architecture-based software reliability prediction. The novelty of this approach lies in the idea of parameterizing the analytic model of the software using measurements obtained from testing. To facilitate this we use a coverage analysis tool called ATAC (Automatic Test Analyzer in C), which is a part of a Software Understanding and Diagnosis System (?Suds) developed at Bellcore. We demonstrate the methodology by predicting the reliability of an application called as SHARPE (Symbolic Hierarchical Automated Reliability Predictor), which has been used to solve stochastic models of reliability, performance and performability."
}

@inproceedings{ XieWohlin95AnAdditiveReliabilityModelForTheAnalysisOfModularSoftwareFailureData,
	author = "Xie, M. and Wohlin, C.",
	title = "An additive reliability model for the analysis of modular software failure data",
	booktitle = "Proceedings of the Sixth International Symposium on Software Reliability Engineering",
	year = "1995",
	MONTH = oct,
	publisher = "IEEE",
	pages = "188--194",
	abstract = "Most software reliability models are applicable to a single piece of software. For more complex systems, Markov models have been studied assuming that complete reliability information at the module level is available. We study an additive model which assumes that each subsystem or module undergoes independent testing and the reliability of the complete system has to be assessed. Subsystem reliabilities are estimated and the system reliability is assessed using the additive model. The approach is simple, but generic in a sense that existing models can be combined. An example is also presented based on the log-power-model, a model with simple graphical interpretation and it shows that the modular information should be used for system reliability assessment whenever such information is available."
}

@Article{ LaprieKanoun92XwareReliabilityAndAvailabilityModeling,
	AUTHOR = "Laprie, J.-C. and Kanoun, K.",
	TITLE = "{X-ware reliability and availability modeling}",
	JOURNAL = "Transactions on Software Engineering",
	YEAR = 1992,
	MONTH = feb,
	VOLUME = 18,
	NUMBER = 2,
	PUBLISHER = "IEEE",
	PAGES = "130--147",
	ABSTRACT = "The problem of modeling a system's reliability and availability with respect to the various classes of faults (physical and design, internal and external) which may affect the service delivered to its users is addressed. Hardware and software models are currently exceptions in spite of the user's requirements; these requirements are expressed in terms of failures independently of their sources, i.e., the various classes of faults. The causes of this situation are analyzed; it is shown that there is no theoretical impediment to deriving such models, and that the classical reliability theory can be generalized in order to cover both hardware and software viewpoints that are X-Ware.",
	KEYWORDS = "Markov processes, data analysis, program testing, software maintenance, software reliability, Markov models , additive reliability model, graphical interpretation, log-power-model, modular software failure, program testing, software failure data analysis, software reliability , software reliability models"
}

@Article{ Ledoux99AvailabilityModelingOfModularSoftware,
	AUTHOR = "Ledoux, J.",
	TITLE = "{Availability modeling of modular software}",
	JOURNAL = "Transactions on Reliability",
	YEAR = 1999,
	MONTH = jun,
	VOLUME = 48,
	NUMBER = 2,
	PUBLISHER = "IEEE",
	PAGES = "159--168",
	ABSTRACT = "Dependability evaluation is a basic component in assessing the quality of repairable systems. A general model (Op) is presented and is specifically designed for software systems; it allows the evaluation of various dependability metrics, in particular, of availability measures. Op is of the structural type, based on Markov process theory. In particular, Op is an attempt to overcome some limitations of the well-known Littlewood reliability model for modular software. This paper gives the: mathematical results necessary to the transient analysis of this general model; and algorithms that can efficiently evaluate it. More specifically, from the parameters describing the: evolution of the execution process when there is no failure; failure processes together with the way they affect the execution; and recovery process, the results are obtained for the: distribution function of the number of failures in a fixed mission; and dependability metrics which are much more informative than the usual ones in a white-box approach. The estimation procedures of the Op parameters are briefly discussed. Some simple examples illustrate the interest in such a structural view and explain how to consider reliability growth of part of the software with the transformation approach developed by Laprie et al. The complete transient analysis of Op allows discussion of the Poisson approximation by Littlewood for his model.",
	KEYWORDS = "Markov processes, Poisson distribution, software maintenance, software metrics, software reliability, transient analysis, Dependability evaluation, Op general model, Poisson approximation, availability measures, dependability metrics, distribution function, failure processes, modular software availability modelling, recovery process , reliability growth, repairable systems quality, transient analysis"
}

@inproceedings{ YacoubCukicAmmar99ScenarioBasedReliabilityAnalysisOfComponentBasedSoftware,
	AUTHOR = "Yacoub, S.M. and Cukic, B. and Ammar, H.H.;",
	TITLE = "{Scenario-based reliability analysis of component-based softwaree}",
	booktitle = "Proceedings of the 10th International Symposium on on Software Reliability Engineering",
	year = "1999",
	MONTH = nov,
	publisher = "IEEE",
	pages = "22--31",
	abstract = "Software designers are motivated to utilize off-the-shelf software components for rapid application development. Such applications are expected to have high reliability as a result of deploying trusted components. The claims of high reliability need further investigation based on reliability analysis techniques that are applicable to component-based applications. This paper introduces a probabilistic model and a reliability analysis technique that is applicable to high-level designs. The technique is named scenario-based reliability analysis (SBRA). SBRA is specific to component-based software whose analysis is strictly based on execution scenarios. Using scenarios, we construct a probabilistic model named a ``component-dependency graph'' (CDG). CDGs are directed graphs that represent components, component reliabilities, link and interface reliabilities, transitions and transition probabilities. In CDGs, component interfaces and link reliabilities are treated as first-class elements of the model. Based on CDGs, an algorithm is presented to analyze the reliability of the application as the function of reliabilities of its components and interfaces. A case study illustrates the applicability of the algorithm. The SBRA is used to identify critical components and critical component interfaces, and to investigate the sensitivity of the application reliability to changes in the reliabilities of components and their interfaces."
}

@Article{ Musa93OperationalProfilesInSoftwareReliabilityEngineering,
	AUTHOR = "John D. Musa",
	TITLE = "{Operational profiles in software-reliability engineering}",
	JOURNAL = "Software",
	YEAR = 1993,
	MONTH = jun,
	VOLUME = 10,
	NUMBER = 2,
	PUBLISHER = "IEEE",
	PAGES = "14--32",
	ABSTRACT = "A systematic approach to organizing the process of determining the operational profile for guiding software development is presented. The operational profile is a quantitative characterization of how a system will be used that shows how to increase productivity and reliability and speed development by allocating development resources to function on the basis of use. Using an operational profile to guide testing ensures that if testing is terminated and the software is shipped because of schedule constraints, the most-used operations will have received the most testing and the reliability level will be the maximum that is practically achievable for the given test time. For guiding regression testing, it efficiently allocates test cases in accordance with use, so the faults most likely to be found, of those introduced by changes, are the ones that have the most effect on reliability.",
	KEYWORDS = "program testing, software reliability"
}

@Article{ GosevaPopstonjanovaTrivedi00FailureCorrelationInSoftwareReliabilityModels,
	AUTHOR = "Go{\v{s}}eva-Popstojanova, K. and Trivedi, K.S.",
	TITLE = "{Failure correlation in software reliability models}",
	JOURNAL = "Transactions on Reliability",
	YEAR = 2000,
	MONTH = mar,
	VOLUME = 10,
	NUMBER = 2,
	PUBLISHER = "IEEE",
	PAGES = "37--48",
	ABSTRACT = "Perhaps the most stringent restriction in most software reliability models is the assumption of statistical independence among successive software failures. The authors research was motivated by the fact that although there are practical situations in which this assumption could be easily violated, much of the published literature on software reliability modeling does not seriously address this issue. The research work in this paper is devoted to developing the software reliability modeling framework that can consider the phenomena of failure correlation and to study its effects on the software reliability measures. The important property of the developed Markov renewal modeling approach is its flexibility. It allows construction of the software reliability model in both discrete time and continuous time, and (depending on the goals) to base the analysis either on Markov chain theory or on renewal process theory. Thus, their modeling approach is an important step toward more consistent and realistic modeling of software reliability. It can be related to existing software reliability growth models. Many input-domain and time-domain models can be derived as special cases under the assumption of failure s-independence. This paper aims at showing that the classical software reliability theory can be extended to consider a sequence of possibly s-dependent software runs, viz, failure correlation. It does not deal with inference nor with predictions, per se. For the model to be fully specified and applied to estimations and predictions in real software development projects, we need to address many research issues, e.g., the detailed assumptions about the nature of the overall reliability growth, way modeling-parameters change as a result of the fault-removal attempts."
}

@Article{ LittlewoodWright97SomeConservativeStoppingRulesForTheOperationalTestingOfSafetyCriticalSoftware,
	AUTHOR = "Littlewood, B. and Wright, D.",
	TITLE = "{Some conservative stopping rules for the operational testing of safety critical software}",
	JOURNAL = "Transactions on Software Engineering",
	YEAR = 1997,
	MONTH = nov,
	VOLUME = 23,
	NUMBER = 11,
	PUBLISHER = "IEEE",
	PAGES = "673--683",
	ABSTRACT = "Operational testing, which aims to generate sequences of test cases with the same statistical properties as those that would be experienced in real operational use, can be used to obtain quantitative measures of the reliability of software. In the case of safety critical software it is common to demand that all known faults are removed. This means that if there is a failure during the operational testing, the offending fault must be identified and removed. Thus an operational test for safety critical software takes the form of a specified number of test cases (or a specified period of working) that must be executed failure-free. This paper addresses the problem of specifying the numbers of test cases (or time periods) required for a test, when the previous test has terminated as a result of a failure. It has been proposed that, after the obligatory fix of the offending fault, the software should be treated as if it were completely novel, and be required to pass exactly the same test as originally specified. The reasoning here claims to be conservative, in as much as no credit is given for any previous failure-free operation prior to the failure that terminated the test. We show that, in fact, this is not a conservative approach in all cases, and propose instead some new Bayesian stopping rules. We show that the degree of conservatism in stopping rules depends upon the precise way in which the reliability requirement is expressed. We define a particular form of conservatism that seems desirable on intuitive grounds, and show that the stopping rules that exhibit this conservatism are also precisely the ones that seem preferable on other grounds."
}

@Article{ Voas98CertifyingOffTheShelfSoftwareComponents,
	AUTHOR = "Voas, J.M.",
	TITLE = "{Certifying off-the-shelf software components}",
	JOURNAL = "Transactions on Software Engineering",
	YEAR = 1998,
	MONTH = jun,
	VOLUME = 31,
	NUMBER = 6,
	PUBLISHER = "IEEE",
	PAGES = "53--59",
	ABSTRACT = "Software components are often delivered in ``black boxes'' as executable objects whose licenses forbid decompilation back to source code. Often source code can be licensed, but the cost makes doing so prohibitive. We therefore have developed a methodology for determining the quality of off-the-shelf (OTS) components using a set of black box analyses. This methodology will provide developers with information useful for choosing components and for defending themselves legally against someone else's imperfect OTS components."
}

@Article{ MillerMorellNoonanParkNicolMurrillVoas92EstimatingTheProbabilityOfFailureWhenTestingRevealsNoFailures,
	AUTHOR = "Miller, K.W. and Morell, L.J. and Noonan, R.E. and Park, S.K. and Nicol, D.M. and Murrill, B.W. and Voas, M.",
	TITLE = "{Estimating the probability of failure when testing reveals no failures}",
	JOURNAL = "Transactions on Software Engineering",
	YEAR = 1992,
	MONTH = jan,
	VOLUME = 18,
	NUMBER = 1,
	PUBLISHER = "IEEE",
	PAGES = "33--43",
	ABSTRACT = "Formulas for estimating the probability of failure when testing reveals no errors are introduced. These formulas incorporate random testing results, information about the input distribution; and prior assumptions about the probability of failure of the software. The formulas are not restricted to equally likely input distributions, and the probability of failure estimate can be adjusted when assumptions about the input distribution change. The formulas are based on a discrete sample space statistical model of software and include Bayesian prior assumptions. Reusable software and software in life-critical applications are particularly appropriate candidates for this type of analysis."
}

@Article{ SmithWilliams93SoftwarePerformanceEngineeringACaseStudyIncludingPerformanceComparisonWithDesignAlternatives,
	AUTHOR = "Smith, C.U. and Williams, L.G.",
	TITLE = "{Software performance engineering: a case study including performance comparison with design alternatives}",
	JOURNAL = "Transactions on Software Engineering",
	YEAR = 1993,
	MONTH = jul,
	VOLUME = 19,
	NUMBER = 7,
	PUBLISHER = "IEEE",
	PAGES = "720--741",
	ABSTRACT = "Software performance engineering (SPE) provides an approach to constructing systems to meet performance objectives. The authors illustrate the application of SPE to an example with some real-time properties and demonstrate how to compare performance characteristics of design alternatives. They show how SPE can be integrated with design methods and demonstrate that performance requirements can be achieved without sacrificing other desirable design qualities such as understandability, maintainability, and reusability."
}

@inproceedings{ KazmanKleinBarbacciLongstaffLipsonCarriere98TheArchitectureTradeoffAnalysisMethod,
	AUTHOR = "Kazman, R. and Klein, M. and Barbacci, M. and Longstaff, T. and Lipson, H. and Carriere, J.",
	TITLE = "{The architecture tradeoff analysis method}",
	booktitle = "Proceedings of the Fourth International Conference on Engineering of Complex Computer Systems",
	year = "1998",
	MONTH = aug,
	publisher = "IEEE",
	pages = "68--78",
	abstract = "This paper presents the Architecture Tradeoff Analysis Method (ATAM), a structured technique for understanding the tradeoffs inherent in the architectures of software-intensive systems. This method was developed to provide a principled way to evaluate a software architecture's fitness with respect to multiple competing quality attributes: modifiability, security, performance, availability, and so forth. These attributes interact-improving one often comes at the price of worsening one or more of the others-as is shown in the paper, and the method helps us to reason about architectural decisions that affect quality attribute interactions. The ATAM is a spiral model of design: one of postulating candidate architectures followed by analysis and risk mitigation, leading to refined architectures."
}

@inproceedings{ MurphyNotkinLan96AnEmpiricalStudyOfStaticCallGraphExtractors,
	AUTHOR = "Murphy, G.C. and Notkin, D. and Lan, E.S.-C.",
	TITLE = "{An empirical study of static call graph extractors}",
	booktitle = "Proceedings of the 18th International Conference on Software Engineering",
	year = "1996",
	MONTH = mar,
	publisher = "IEEE",
	pages = "90--99",
	abstract = "Informally, a call graph represents calls between entities in a given program. The call graphs that compilers compute to determine the applicability of an optimization must typically be conservative: a call may be omitted only if it can never occur an any execution of the program. Numerous software engineering tools also extract call graphs, with the expectation that they will help software engineers increase their understanding of a program. The requirements placed on software engineering tools when computing call graphs are typically more related than for compilers. For example, some false negatives-calls that can in fact take place in some execution of the program, but which are omitted from the call graph-may be acceptable, depending on the understanding task at hand. In this paper we empirically show a consequence of this spectrum of requirements by comparing the C call graphs extracted from three software systems (mapmaker, mosaic, and gee) by five extraction tools (cflow, CIA, Field, mk-functmap, and rigiparse). A quantitative analysis of the call graphs extracted for each system shows considerable variation, a result that is counterintuitive to many experienced software engineers. A qualitative analysis of these results reveals a number of reasons for this variation: differing treatments of macros, function pointers, input formats, etc. We describe and discuss the study, sketch the design space, and discuss the impact of our study on practitioners, tool developers, and researchers."
}

@inproceedings{ DelamaroMaldonadoMathur96IntegrationTestingUsingInterfaceMutation,
	AUTHOR = "Delamaro, M.E. and Maldonado, J.C. and Mathur, A.P.",
	TITLE = "{Integration testing using interface mutation}",
	booktitle = "Proceedings of the 18th Seventh International Symposium on Software Reliability Engineering",
	year = "1996",
	MONTH = oct,
	publisher = "IEEE",
	pages = "112--121",
	abstract = "A criterion for assessing the adequacy of test sets during integration testing is proposed. The criterion is based on a testing technique named Interface Mutation. The technique itself is designed to be scalable with the size of the software under test; the size being measured in the number of subsystems integrated. Using Interface Mutation it is possible to assess the adequacy of tests incrementally while integrating various subsystems. Also reported are results from a pilot experiment conducted to study the cost and error defection effectiveness of Interface Mutation."
}

@Article{ KazanCarriere99PlayingDetectiveReconstructingSoftwareArchitectureFromAvailableEvidence,
	AUTHOR = "Rick Kazman and S. Jeromy Carri{\`e}re",
	TITLE = "{Playing Detective: Reconstructing Software Architecture from Available Evidence}",
	JOURNAL = "Automated Software Engineering",
	YEAR = 1999,
	MONTH = apr,
	VOLUME = 6,
	NUMBER = 2,
	PUBLISHER = "Springer, formerly Kluwer",
	PAGES = "107--138",
	ABSTRACT = "Because a system's software architecture strongly influences its quality attributes such as modifiability, performance, and security, it is important to analyze and reason about that architecture. However, architectural documentation frequently does not exist, and when it does, it is often ``out of sync'' with the implemented system. In addition, it is rare that software development begins with a clean slate; systems are almost always constrained by existing legacy code. As a consequence, we need to be able to extract information from existing system implementations and utilize this information for architectural reasoning. This paper presents Dali, an open, lightweight workbench that aids an analyst in extracting, manipulating, and interpreting architectural information. By assisting in the reconstruction of architectures from extracted information, Dali helps an analyst redocument architectures, discover the relationship between ``as-implemented'' and ``as-designed'' architectures, analyze architectural quality attributes and plan for architectural change.",
	DOI = "10.1023/A:1008781513258",
	KEYWORDS = "software architecture, source model extraction, architectural views"
}

@Article{ Bowles92ASurveyOfReliabilityPredictionProceduresForMicroelectronicDevices,
	AUTHOR = "Bowles, J.B.",
	TITLE = "{}",
	JOURNAL = "Transactions on Reliability",
	YEAR = 1992,
	MONTH = mar,
	VOLUME = 41,
	NUMBER = 1,
	PUBLISHER = "IEEE",
	PAGES = "2--12",
	ABSTRACT = "The author reviews six current reliability prediction procedures for microelectronic devices. The device models are described and the parameters and parameter values used to calculate device failure rates are examined. The procedures are illustrated by using them to calculate the predicted failure rate for a 64 K DRAM; the resulting failure rates are compared under a variety of assumptions. The models used in the procedures are similar in form, but they give very different predicted failure rates under similar operating and environmental conditions, and they show different sensitivities to changes in conditions affecting the failure rates."
}

@Article{ FriesSen96ASsurveyOfDiscreteReliabilityGrowthModels,
	AUTHOR = "Fries, A. and Sen, A.",
	TITLE = "{A survey of discrete reliability-growth models}",
	JOURNAL = "Transactions on Reliability",
	YEAR = 1996,
	MONTH = dec,
	VOLUME = 45,
	NUMBER = 4,
	PUBLISHER = "IEEE",
	PAGES = "582--604",
	ABSTRACT = "This paper focuses on discrete reliability-growth models (DRGM), for which the relevant data comprise sequences of dichotomous success-failure outcomes from successive system configurations or stages. It presents a comprehensive compilation of model descriptions and characterizations, as well as discussions of related statistical methodologies for parameter estimation and confidence interval (or Bayes interval limit) construction. The emphasis is on the interrelationships between various models and the assumptions that underlie their development. Specific methodological enhancements that are either lacking from or have not been fully integrated into typical DRGM applications are specified."
}

@Article{ OezekiciSoyer03ReliabilityOfSoftwareWithAnOperationalProfile,
	AUTHOR = "S. {\"O}zekici and R. Soyer",
	TITLE = "{Reliability of software with an operational profile}",
	JOURNAL = "European Journal of Operational Research",
	YEAR = 2003,
	MONTH = sep,
	VOLUME = 149,
	NUMBER = 2,
	PUBLISHER = "``Elsevier''",
	PAGES = "459--474",
	ABSTRACT = "This article provides the stochastic and statistical framework to model software reliability in the presence of an operational profile. The software system is used under a randomly changing operational process so that the failure characteristics depend on the specific operation performed. The operational process describes, in a probabilistic sense, how the software is utilized by the users. The time to failure distribution for each fault is exponentially distributed with a rate that depends on the operation. As soon as a failure is experienced, the fault that caused the fault is removed immediately with certainty. We discuss several issues related to software reliability and statistical inference.",
	DOI = "10.1016/S0377-2217(02)00461-7"
}

@inproceedings{ Roshandel04CalculatingArchitecturalReliabilityViaModelingAndAnalysis,
	author = "R. Roshandel",
	title = "Calculating Architectural Reliability via Modeling and Analysis",
	booktitle = "Proceedings of the 26th International Conference on Software Engineering",
	year = "2004",
	pages = "69--71",
	publisher = "IEEE",
	abstract = "We present a software architecture-based approach to compositional estimation of systems reliability. Our approach is applicable to early stages of development when the implementation artifacts are not yet available,and exact execution profile is unknown. The uncertainty of the execution profile is modeled using stochastic processes with unknown parameters. The compositional approach calculates overall reliability of the system as a function of the reliability of its constituent components and their(complex) interactions. Sensitivity analysis to identify critical components and interactions will be provided."
}

@inproceedings{ ReussnerFirusBecker04ParametricPerformanceContractsForSoftwareComponentsAndTheirCompositionality,
	AUTHOR = "Ralf H. Reussner and Viktoria Firus and Steffen Becker",
	BOOKTITLE = "Proceedings of the 9. International Workshop on Component-Oriented Programming (WCOP 04)",
	EDITOR = "Clemens Szyperski and Jan Bosch and Wolfgang Weck",
	MONTH = "6",
	TITLE = "Parametric Performance Contracts for Software Components and their Compositionality",
	YEAR = "2004",
	oldurl = "http://se.informatik.uni-oldenburg.de/pubdb_files/pdf/http://se.informatik.uni-oldenburg.de/pubdb_files/pdf/Parametric performance contracts for software components and their compositionality.pdf",
	ABSTRACT = "The performance of a software component heavily depends on the environment of the component.As a software component only justifies its investment when deployed in several environments, one can not specify the performance of a component as a constant (e.g.,assasing the value or distribution of values in its interface).Hence, classical component contracts allowing to state the component's performance as a post-condition, if the environment realises a specific performance stated in the precondition, do not help.This fixed pair of pre- and post condition do not model that a component can have very different performance figures depending on its context. Instead of that, parametric contracts are needed for specifying the environmental dependency of the component's provided performance. In this paper we discuss the specification of such dependencies for the performance metric response time. We model the statistical distribution of response time in dependency of the distribution of response times of environmental service."
}

@article{ Reussner03AutomaticComponentProtocolAdaptationWithTheCoConutJToolSuite,
	AUTHOR = "Ralf H. Reussner",
	JOURNAL = "Future Generation Computer Systems",
	LANGUAGE = "english",
	NUMBER = "5",
	MONTH = jul,
	PAGES = "627--639",
	PUBLISHER = "``Elsevier''",
	TITLE = "Automatic Component Protocol Adaptation with the CoConut/J Tool Suite",
	VOLUME = "19",
	YEAR = "2003",
	DOI = "10.1016/S0167-739X(02)00173-5"
}

@article{ FrolundKoistinen98QualityOfServiceSpecificationInDistributedObjectSystems,
	author = "Svend Fr{\o}lund and Jari Koistinen",
	title = "Quality-of-service specification in distributed object systems.",
	journal = "Distributed Systems Engineering",
	volume = "5",
	number = "4",
	PUBLISHER = "BritishComputerSociety, The Institution of Electrical Engineers and IOP",
	year = "1998",
	pages = "179-202",
	DOI = "10.1088/0967-1846/5/4/005",
	ABSTRACT = "Traditional object-oriented design methods deal with the functional aspects of systems, but they do not address quality-of-service (QoS) aspects, such as reliability, availability, performance, security and timing. However, deciding which QoS properties should be provided by individual system components is an important part of the design process. Different decisions are likely to result in different component implementations and system structures. Thus, decisions about component-level QoS should commonly be made at design time, before the implementation is begun. Since these decisions are an important part of the design process, they should be captured as part of the design. We propose a general quality-of-service specification language, which we call QML. In this paper we show how QML can be used to capture QoS properties as part of designs. In addition, we extend UML, the de facto standard object-oriented modelling language, to support the concepts of QML. \\ QML is designed to integrate with object-oriented features, such as interfaces, classes and inheritance. In particular, it allows specification of QoS properties through refinement of existing QoS specifications. Although we exemplify the use of QML to specify QoS properties within the categories of reliability and performance, QML can be used for specification within any QoS category - QoS categories are user-defined types in QML. \\ Sometimes, QoS characteristics and requirements change dynamically due to changing user preferences, or changes in the environment. For such situations static specification is insufficient. To allow for dynamic systems that change and evolve over time, we provide a QoS specification runtime representation. This representation enables systems to create, manipulate and exchange QoS information, and thereby negotiate and adapt to changing QoS requirements and conditions.",
	keywords = "QML"
}

@article{ ReussnerSchmidtPoernomo03ReliabilityPredictionForComponentBasedSoftwareArchitectures,
	AUTHOR = "Ralf H. Reussner and Heinz W. Schmidt and Iman Poernomo",
	JOURNAL = "Journal of Systems and Software -- Special Issue of Software Architecture - Engineering Quality Attributes",
	LANGUAGE = "english",
	NUMBER = "3",
	PAGES = "241--252",
	TITLE = "Reliability Prediction for Component-Based Software Architectures",
	VOLUME = "66",
	YEAR = "2003",
	ABSTRACT = "One of the motivations for specifying software architectures explicitly is the use of high level structural design information for improved control and prediction of software system quality attributes. In this paper, we present an approach for determining the reliability of component-based software architectures. Our method is based on rich architecture definition language (RADL) oriented towards modem industrial middleware platforms, such as Microsoft's. NET and Sun's EJB. Our methods involve parameterised contractual specifications based on state machines and thus permits efficient static analysis. We show how RADL allows software architects to predict component reliability through compositional analysis of usage profiles and of environment component reliability. We illustrate our approach with an e-commerce example and report about empirical measurements which confirm our analytical reliability prediction through monitoring in our reliability test-bed. Our evaluation confirms that prediction accuracy for software components necessitates modelling the behaviour of binary components and the dependency of provided services on required components. Fortunately, our measurements also show that an abstract protocol view of that behaviour is sufficient to predict reliability with high accuracy. The reliability of a component most strongly depends on its environment. Therefore, we advocate a reliability model parameterized by required component reliability in a deployment context. ",
	PUBLISHER = "``Elsevier''",
	DOI = "10.1016/S0164-1212(02)00080-8"
}

@article{ Meyer92ApplyingDesignByContract,
	AUTHOR = "Meyer, B.",
	JOURNAL = "Computer",
	VOLUME = "25",
	NUMBER = "10",
	PAGES = "40--51",
	TITLE = "Applying `design by contract'",
	YEAR = "1992",
	ABSTRACT = "Methodological guidelines for object-oriented software construction that improve the reliability of the resulting software systems are presented. It is shown that the object-oriented techniques rely on the theory of design by contract, which underlies the design of the Eiffel analysis, design, and programming language and of the supporting libraries, from which a number of examples are drawn. The theory of contract design and the role of assertions in that theory are discussed.",
	PUBLISHER = "``IEEE''"
}

@article{ ReiferBasiliBoehmClark03EightLessonsLearnedDuringCOTSbasedSystemsMaintenance,
	AUTHOR = "Reifer, D.J. and Basili, V.R. and Boehm, B.W. and Clark, B.",
	JOURNAL = "Software",
	VOLUME = "20",
	NUMBER = "5",
	MONTH = "sep--oct",
	PAGES = "94--96",
	TITLE = "Eight lessons learned during COTS-based systems maintenance",
	YEAR = "2003",
	ABSTRACT = "To make better decisions relative to CBSs, we need empirical knowledge. To gain this knowledge, we must more fully understand the lifecycle processes people use when harnessing COTS packages. The initial findings reported here are but the first step in our attempts to capture this empirical knowledge. We plan to continue collecting data and investigating the phenomenology of COTS-based systems.",
	PUBLISHER = "``IEEE''",
	KEYWORDS = "object-oriented programming software maintenance software reusability COTS packages COTS-based systems maintenance life cycle maintenance phase lifecycle processes"
}

@article{ BasiliBoehm01COTSbasedSystemsTop10List,
	AUTHOR = "Basili, V.R. and Boehm, B.",
	JOURNAL = "Computer",
	VOLUME = "34",
	NUMBER = "5",
	MONTH = may,
	PAGES = "91--95",
	TITLE = "COTS-based systems top 10 list",
	YEAR = "2001",
	ABSTRACT = "Presents a COTS-based system (CBS) software defect-reduction list as hypotheses, rather than results, that also serve as software challenges for enhancing our empirical understanding of CBSs. The hypotheses are: (1) more than 99\% of all executing computer instructions come from COTS products (each instruction passed a market test for value); (2) more than half the features in large COTS software products go unused; (3) the average COTS software product undergoes a new release every 8-9 months, with active vendor support for only its latest three releases; (4) CBS development and post-deployment efforts can scale as high as the square of the number of independently developed COTS products targeted for integration; (5) CBS post-deployment costs exceed CBS development costs; (6) although glue-code development usually accounts for less than half the total CBS software development effort, the effort per line of glue code averages about three times the effort per line of developed applications code; (7) non-development costs, such as licensing fees, are significant, and projects must plan for and optimize them; (8) CBS assessment and tailoring efforts vary significantly by COTS product class (operating system, database management system, user interface, device driver, etc.); (9) personnel capability and experience remain the dominant factors influencing CBS development productivity; and (10) CBS is currently a high-risk activity, with effort and schedule overruns exceeding non-CBS software overruns, yet many systems have used COTS successfully for cost reduction and early delivery.",
	PUBLISHER = "``IEEE''",
	KEYWORDS = ""
}

@article{ MorascaBriandBasiliWeyukerZelkowitz97CommentsOnTowardsAFrameworkForSoftwareMeasurementValidation,
	AUTHOR = "Morasca, S. and Briand, L.C. and Basili, V.R. and Weyuker, E.J. and Zelkowitz",
	JOURNAL = "Transactions on Software Engineering",
	VOLUME = "23",
	NUMBER = "3",
	MONTH = mar,
	PAGES = "187--189",
	TITLE = "Comments on ``Towards a framework for software measurement validation''",
	YEAR = "1997",
	ABSTRACT = "A view of software measurement that disagrees with the model presented by Kitchenham, Pfleeger, and Fenton (1995), is given. Whereas Kitchenham et al. argue that properties used to define measures should not constrain the scale type of measures, the authors contend that that is an inappropriate restriction. In addition, a misinterpretation of Weyuker's (1988) properties is noted.",
	PUBLISHER = "``IEEE''",
	KEYWORDS = ""
}

@article{ MorascaBriandBasiliWeyukerZelkowitz97CommentsOnTowardsAFrameworkForSoftwareMeasurementValidation'',
	AUTHOR = "Morasca, S. and Briand, L.C. and Basili, V.R. and Weyuker, E.J. and Zelkowitz",
	JOURNAL = "Transactions on Software Engineering",
	VOLUME = "23",
	NUMBER = "3",
	MONTH = mar,
	PAGES = "187--189",
	TITLE = "Comments on ``Towards a framework for software measurement validation''",
	YEAR = "1997",
	ABSTRACT = "A view of software measurement that disagrees with the model presented by Kitchenham, Pfleeger, and Fenton (1995), is given. Whereas Kitchenham et al. argue that properties used to define measures should not constrain the scale type of measures, the authors contend that that is an inappropriate restriction. In addition, a misinterpretation of Weyuker's (1988) properties is noted.",
	PUBLISHER = "``IEEE''",
	KEYWORDS = ""
}

@inproceedings{ MorisioSeamanParraBasiliKraftCondon00InvestigatingAndImprovingACOTSbasedSoftwareDevelopmentProcess,
	AUTHOR = "Morisio, M. and Seaman, C.B. and Parra, A.T. and Basili, V.R. and Kraft, S.E. and Condon, S.E.",
	TITLE = "Investigating and improving a COTS-based software development process",
	booktitle = "Proceedings of the International Conference on Software Engineering",
	year = "2000",
	MONTH = jun,
	pages = "32--41",
	publisher = "ACM",
	abstract = "The work described in the paper is an investigation of COTS based software development within a particular NASA environment, with an emphasis on the processes used. Fifteen projects using a COTS based approach were studied and their actual process was documented. This process is evaluated to identify essential differences in comparison to traditional software development. The main differences, and the activities for which projects require more guidance, are requirements definition and COTS selection, high level design, integration and testing. Starting from these empirical observations, a new process and guidelines for COTS based development are developed and briefly presented. The new process is currently under experimentation."
}

@inproceedings{ YakimovichBiemanBasili99SoftwareArchitectureClassificationForEstimatingTheCostOfCOTSIntegration,
	AUTHOR = "Yakimovich, D. and Bieman, J.M. and Basili, V.R.",
	TITLE = "Software architecture classification for estimating the cost of COTS integration",
	booktitle = "Proceedings of the International Conference on Software Engineering",
	year = "1999",
	MONTH = may,
	pages = "296--302",
	publisher = "ACM",
	abstract = "The use of commercial-off-the-shelf (COTS) products creates a software integration problem, whether a single COTS software component is being integrated into a software system, or the whole system is being built primarily from COTS products. This integration may require considerable effort and affect system quality. A good estimate of integration cost can help in the decision of whether or not to use a COTS solution, the selection of the best COTS products, and determine the amount and type of glueware that needs to be built, in this paper, we introduce a set of variables that have the potential to estimate the integration cost. We present a classification scheme of software architectures with respect to the integration of COTS products. The scheme is based on inter-component interactions within software architectures. The classification scheme allows the comparison of integration costs of different COTS products relative to different software architectures."
}

@article{ BasiliRombach91SupportForComprehensiveReuse,
	AUTHOR = "Basili, V.R. and Rombach, H.D.",
	JOURNAL = "Transactions on Software Engineering",
	VOLUME = "6",
	NUMBER = "5",
	MONTH = sep,
	PAGES = "303--316",
	TITLE = "Support for comprehensive reuse",
	YEAR = "1991",
	ABSTRACT = "Reuse of products, processes and other knowledge will be the key to enable the software industry to achieve the dramatic improvement in productivity and quality required to satisfy anticipated growing demands. Although experience shows that certain kinds of reuse can be successful, general success has been elusive. A software life-cycle technology that allows comprehensive reuse of all kinds of software-related experience could provide the means of achieving the desired order-of-magnitude improvements. The authors introduce a comprehensive framework of models, model-based characterisation schemes, and support mechanisms for better understanding, evaluating, planning and supporting all aspects of reuse.",
	PUBLISHER = "``IEEE''",
	KEYWORDS = ""
}

@inproceedings{ HanssonAkerholmCrnkovicTorngren04SaveCCMAComponentModelForSafetyCriticalRealTimeSystems,
	AUTHOR = "Hansson, H. and Akerholm, M. and Crnkovic, I. and Torngren, M.",
	TITLE = "SaveCCM - a component model for safety-critical real-time systems",
	booktitle = "Proceedings of the 30th Euromicro Conference",
	year = "2004",
	MONTH = "aug--sep",
	pages = "627--635",
	publisher = "IEEE",
	abstract = ""
}

@inproceedings{ LarssonCrnkovic00DevelopmentExperiencesOfAComponentBasedSystem,
	AUTHOR = "Larsson, M. and Crnkovic, I.",
	TITLE = "Development experiences of a component-based system",
	booktitle = "Proceedings of the Seventh International Conference and Workshop on the Engineering of Computer Based Systems",
	year = "2000",
	MONTH = apr,
	pages = "246--254",
	publisher = "IEEE",
	abstract = "Building software systems with reusable components brings many advantages. If the reuse concept is utilized on several levels of a system development, the development becomes more efficient, the reliability of the products is enhanced, and the maintenance requirement is significantly reduced. The levels of reuse are spread out from the reuse of source code and common libraries, through the reuse of large business components, up to the reuse of the standard products in the configuration of large systems. Designing, developing and maintaining components for reuse is, however, a very complex process which places high requirements not only for the component functionality and flexibility, but also for the development organization. In this paper, we discuss the different levels of component reuse, and certain aspects of component development. As an illustration of reuse issues, we present a successful implementation of a component-based system, which is widely used for industrial process control."
}

@inproceedings{ Crnkovic03ComponentBasedSoftwareEngineeringNewChallengesInSoftwareDevelopment,
	AUTHOR = "Crnkovic, I.",
	TITLE = "Component-based software engineering - new challenges in software development",
	booktitle = "Proceedings of the 25th International Conference on Information Technology Interfaces",
	year = "2003",
	MONTH = jun,
	pages = "9--18",
	publisher = "IEEE",
	abstract = "The primary role of component-based software engineering is to address the development of systems as an assembly of parts (components), the development of parts as reusable entities, and the maintenance and upgrading of systems by customising and replacing such parts. This requires established methodologies and tool support covering the entire component and system lifecycle including technological, organisational, marketing, legal, and other aspects. The traditional disciplines from software engineering need new methodologies to support component-based development."
}

@article{ MaidenNcube98AcquiringCOTSsoftwareSelectionRequirements,
	AUTHOR = "Maiden, N.A. and Ncube, C.",
	JOURNAL = "Software",
	VOLUME = "15",
	NUMBER = "2",
	MONTH = "mar--apr",
	PAGES = "303--316",
	TITLE = "Acquiring COTS software selection requirements",
	YEAR = "1998",
	ABSTRACT = "Commercial off the shelf software can save development time and money if you can find a package that meets your customer's needs. The authors propose a model for matching COTS product features with user requirements. To support requirements acquisition for selecting commercial off the shelf products, we propose a method we used recently for selecting a complex COTS software system that had to comply with over 130 customer requirements. The lessons we learned from that experience refined our design of PORE (procurement oriented requirements engineering), a template based method for requirements acquisition. We report 11 of these lessons, with particular focus on the typical problems that arose and solutions to avoid them in the future. These solutions, we believe, extend state of the art requirements acquisition techniques to the component based software engineering process.",
	PUBLISHER = "``IEEE''",
	KEYWORDS = ""
}

@inproceedings{ Lamsweerde00RequirementsEngineeringInTheYear00AResearchPerspective,
	AUTHOR = "Axel van Lamsweerde ",
	TITLE = "Component-based software engineering - new challenges in software development",
	booktitle = "Proceedings of the 22nd International Conference on Software Engineering",
	year = "2000",
	pages = "5--19",
	publisher = "ACM",
	abstract = ""
}

@PHDTHESIS{ Larsson00ApplyingConfigurationManagementTechniquesToComponentBasedSystems,
	AUTHOR = "Larsson, M.",
	TITLE = "Applying Configuration Management Techniques to Component-Based Systems",
	SCHOOL = "Uppsala University, Department of Information Technology",
	number = "2000-007",
	YEAR = "2000",
	address = "Uppsala, Sweden"
}

@inproceedings{ Takeshita97MetricsAndRisksOfCBSE,
	AUTHOR = "Takeshita, T.",
	TITLE = "Metrics and risks of CBSE (component-based software engineering)",
	booktitle = "Proceedings of the Fifth International Symposium on Assessment of Software Tools and Technologiesg",
	year = "1997",
	MONTH = jun,
	pages = "91--93",
	publisher = "``IEEE''",
	abstract = "The debut of CBSE is the realization of a kind of dream, as it dramatically increases the productivity of application production, but many people have skepticism about the effectiveness of the new technology. In order to convince computer users that CBSE really works for many cases of application development, questions about how to evaluate CBSE products and the risks of using them must be answered. Items of concern related to the metrics and risks of CBSE are listed. It is hoped that this will produce useful hints and recommendations on the subject matter, which will help to increase the use of CBSE."
}

@inproceedings{ KotonyaSommervilleHall03TowardsAClassificationModelForComponentBasedSoftwareEngineeringResearch,
	AUTHOR = "Kotonya, G. and Sommerville, I. and Hall, S.",
	TITLE = "Towards a classification model for component-based software engineering research",
	booktitle = "Proceedings of the 29th Conference on Euromicro Conference",
	year = "2003",
	MONTH = sep,
	pages = "43--52",
	publisher = "``IEEE''",
	abstract = "Accurate and timely information is a key motivator in the widespread adoption of CBSE technology in Europe. Although there are overlaps and informal communications between researchers and adopters of CBSE technology in Europe, there is no systematic mechanism for information interchange between the two. CBSEnet is a European Union initiative to create an Internet-based forum for the exchange of information between researchers and adopters of CBSE. We describe a proposed classification model for CBSE research that will form the basis for structuring the CBSEnet knowledge base."
}

@inproceedings{ KotonyaRashid01AStrategyForManagingRiskInComponentBasedSoftwareDevelopment,
	AUTHOR = "Kotonya, G. and Rashid, A.",
	TITLE = "A strategy for managing risk in component-based software development",
	booktitle = "Proceedings of the 27th Conference on Euromicro Conference",
	year = "2001",
	MONTH = sep,
	pages = "12--21",
	publisher = "``IEEE''",
	abstract = "The reality of component-based development is often very different from the commonly held notion that it is a low risk development strategy, which provides a simple and rapid mechanism for increasing the functionality and capability of a system. In reality component-based development carries significant risk throughout the system life cycle. These risks are related to the nature of COTS software, the development process, component technologies and vendor support. This paper describes an approach to developing component-based systems that incorporates risk management in the development process."
}

@article{ BrownWallnau98TheCurrentStateOfCBSE,
	AUTHOR = "Brown, A.W. and Wallnau, K.C.",
	JOURNAL = "Software",
	VOLUME = "15",
	NUMBER = "5",
	MONTH = "sep--oct",
	PAGES = "37--46",
	TITLE = "The current state of CBSE",
	YEAR = "1998",
	ABSTRACT = "As organizations adopt component-based software engineering, it becomes essential to clearly define its characteristics, advantages and organizational implications. This report presents key discussion points from a workshop on CBSE and provides a useful synthesis of participants' diverse perspectives and experiences.",
	PUBLISHER = "``IEEE''",
	KEYWORDS = ""
}

@inproceedings{ WallnauStafford01EnsemblesAbstractionsForANewClassOfDesignProblem,
	AUTHOR = "Wallnau, K. and Stafford, J.",
	TITLE = "Ensembles: abstractions for a new class of design problem",
	booktitle = "Proceedings of the 27th Conference on Euromicro Conference",
	year = "2001",
	MONTH = sep,
	pages = "48--55",
	publisher = "``IEEE''",
	abstract = "Trends in component-based software development point to increased use of pre-existing or purchased components. A consequence of this type of development is that systems are being composed of large-grained components over which the developer wields little control. This and other issues related to the use of commercial components has created a new class of design problem that is not addressed by traditional development methods and tools. In this paper we describe this class of design problem, and introduce Ensemble, a conceptual language that supports assembling software systems from commercial components."
}

@article{ Voas04SoftwaresSecretSauceTheIlities,
	AUTHOR = "Voas, J.",
	JOURNAL = "Software",
	VOLUME = "21",
	NUMBER = "6",
	MONTH = "nov--dec",
	PAGES = "14--15",
	TITLE = "Software's secret sauce: the ``-ilities'' (software quality) ",
	YEAR = "2004",
	ABSTRACT = "If beauty is in the eye of the beholder, then quality must be as well. We live in a world where beauty to one is a complete turnoff to another. Software quality is no different. We have the developer's perspective, the end users perspective, the testers perspective, and so forth. As you can see, meeting the requirements might be different from being fit for a purpose, which can also be different from complying with rules and regulations on how to develop and deploy the software. Yet we can think of all three perspectives as ways to determine how to judge and assess software quality. These three perspectives tie directly to the persistent software attributes focus section in this issue and, consequently, to the concept of software ``-ilities''. The -ilities (or software attributes) are a collection of closely related behaviors that by themselves have little or no value to the end users but that can greatly increase a software application or system's value when added.",
	PUBLISHER = "``IEEE''",
	KEYWORDS = ""
}

@article{ WhittakerVoas00TowardAMoreReliableTheoryOfSoftwareReliability,
	AUTHOR = "Whittaker, J.A. and Voas, J.",
	JOURNAL = "Computer",
	VOLUME = "33",
	NUMBER = "12",
	MONTH = dec,
	PAGES = "36--42",
	TITLE = "Toward a more reliable theory of software reliability",
	YEAR = "2000",
	ABSTRACT = "The notions of time and the operational profile incorporated into software reliability are incomplete. Reliability should be redefined as a function of application complexity, test effectiveness, and operating environment. We do not yet have a reliability equation that application complexity, test effectiveness, test suite diversity, and a fuller definition of the operational profile. We challenge the software reliability community to consider these ideas in future models. The reward for successfully doing so likely will be the widespread adoption of software reliability prediction by the majority of software publishers.",
	PUBLISHER = "``IEEE''",
	KEYWORDS = ""
}

%annotated by http://lpdwww.epfl.ch/fgaertner/bibs/felix-stabilization.html

@Article{ Brooks87NoSilverBullet,
	author = "Frederick P. Brooks",
	title = "No Silver Bullet",
	journal = "IEEE Computer",
	volume = "20",
	number = "4",
	pages = "10--19",
	month = apr,
	year = "1987",
	annote = "A famous paper on the ``essence and accidents in software engineering''. Brooks explores reasons for the fact that despite high hopes and great claims the software industry and computer science academia has failed to produce really reliable, error-free products. Brooks discusses facts like complexity and psychological problems for people involved. He states that the problem is in it's core rather a human than a technical issue."
}

@article{ VoasAgresti04SoftwareQualityFromABehavioralPerspective,
	AUTHOR = "Voas, J. and Agresti, W.W.",
	JOURNAL = "IT Professional",
	VOLUME = "6",
	NUMBER = "4",
	MONTH = "jul--aug",
	PAGES = "46--50",
	TITLE = "Software quality from a behavioral perspective",
	YEAR = "2004",
	ABSTRACT = "The challenge facing software quality research is to produce a metric that will guide developers in choosing techniques to achieve the desired product quality. ``Quality'' comprises some set of key behavioral attributes: reliability, performance, fault tolerance, safety, security, availability, testability, and maintainability. Software quality is thus a function of these combined attributes plus an error term that represents quality aspects these eight attributes can't define. This article discusses how to quantify these behavioral attributes by working around relative values and formulating schemes from an attribute's key indicators. Thus, one can still assign numerical values to various attributes and then normalize them. By having such a system during requirements elicitation, developers can immediately begin to determine what techniques, methodologies, tools, processes, and costs they will need to produce a system with that quality level.",
	PUBLISHER = "``IEEE''",
	KEYWORDS = ""
}

@article{ MorrisLeeParkerBundellLam01SoftwareComponentCertification,
	AUTHOR = "Morris, J. and Lee, G. and Parker, K. and Bundell, G.A. and Chiou Peng Lam",
	JOURNAL = "Computer",
	VOLUME = "34",
	NUMBER = "9",
	MONTH = sep,
	PAGES = "30--36",
	TITLE = "Software component certification",
	YEAR = "2001",
	ABSTRACT = "Although the stringent requirements of some critical applications may require independent certification, the authors see software developer self-certification as a viable alternative in many other cases. They accept that using software certification laboratories (SCLs) may work well for certain software distribution models, but they cannot be applied to all types of software development. The approach has several drawbacks. For example, an SCL may work well for larger software houses that ship mass-marketed software applications to the public, but it is less satisfactory for smaller developers who make reusable components or safety-critical software or for developers who belong to the freeware community.",
	PUBLISHER = "``IEEE''",
	KEYWORDS = ""
}

@article{ OrmonCassadyGreenwood02ReliabilityPredictionModelsToSupportConceptualDesign,
	AUTHOR = "Ormon, S.W. and Cassady, C.R. and Greenwood, A.G.",
	JOURNAL = "Transactions on Reliability",
	VOLUME = "51",
	NUMBER = "2",
	MONTH = jun,
	PAGES = "151--157",
	TITLE = "Reliability prediction models to support conceptual design",
	YEAR = "2002",
	PUBLISHER = "IEEE",
	ABSTRACT = "During the early stages of conceptual design, the ability to predict reliability is very limited. Without a prototype to test in a lab environment or without field data, component failure rates and system reliability performance are usually unknown. A popular method for early reliability prediction is to develop a computer model for the system. However, most of these models are extremely specific to an individual system or industry. This paper presents three general procedures (using both simulation and analytic solution techniques) for predicting system reliability and average mission cost. The procedures consider both known and unknown failure rates and component-level and subsystem-level analyzes. The estimates are based on the number of series subsystems and redundant (active or stand-by) components for each subsystem. The result is a set of approaches that engineers can use to predict system reliability early in the system-design process. Software was developed (and is discussed in this paper) that facilitates the application of the simulation-based techniques. For the specific type of system and mission addressed in this paper, the analytic approach is superior to the simulation-based prediction models. However, all three approaches are presented for two reasons: (1) to convey the development process involved with building these prediction tools; and (2) the simulation-based approaches are of greater value as the research is extended to consider more complex systems and scenarios.",
	KEYWORDS = ""
}

@inproceedings{ OrmonCassadyGreenwood01ASimulationBasedReliabilityPredictionModelForConceptualDesign,
	AUTHOR = "Ormon, S.W. and Cassady, C.R. and Greenwood, A.G.",
	TITLE = "A simulation-based reliability prediction model for conceptual design",
	booktitle = "Proceedings of the Reliability and Maintainability Symposium",
	year = "2001",
	MONTH = sep,
	pages = "433--436",
	PUBLISHER = "IEEE",
	abstract = "During the early stages of conceptual design, the ability to predict reliability is very limited. Without a prototype to test in a lab environment or field data, component failure rates and system reliability performance are usually unknown. A popular method for early reliability prediction is to develop a computer model for the system. However, most of these models are extremely specific to an individual system or industry. In this paper, a generic simulation model is presented for predicting system reliability without knowing the exact failure rate for the components in the system. The simulation model estimates mission reliability, average time to failure for the system and average mission cost. The estimates are based on the number of series subsystems and active or stand-by components for each mini subsystem, known component failure rates, triangular distribution parameters for components with unknown failure rates, mission length and component and mission costs. The result is a tool that engineers can use to predict system reliability performance early in the system design process."
}

@inproceedings{ Everett92AnExtendedExecutionTimeSoftwareReliabilityModel,
	AUTHOR = "Everett, W.W.",
	TITLE = "An `extended execution time' software reliability model",
	booktitle = "Proceedings of the Third International Symposium on Software Reliability Engineering",
	year = "1992",
	MONTH = oct,
	pages = "4--13",
	PUBLISHER = "IEEE",
	doi = "10.1109/ISSRE.1992.285863"
}

@article{ Cheung80AUserOrientedSoftwareReliabilityModel,
	author = "Roger C. Cheung",
	title = "A User-Oriented Software Reliability Model",
	journal = "IEEE Trans. Software Engineering",
	volume = "6",
	number = "2",
	year = "1980",
	pages = "118--125"
}

%webseite gerade defekt: Modelling mit markov chains

@inproceedings{ WoitMason98ComponentIndependenceForSoftwareSystemReliability,
	author = "D. Mason and D. Woit",
	title = "Component Independence for Software System Reliability",
	booktitle = "Proceedings of the 9th International Symposium on Software Reliability Engineering",
	year = "1998",
	MONTH = nov,
	note = " Available: \href{http://www.sarg.ryerson.ca/sarg/papers/199811-qwe98/}{http://www.sarg.ryerson.ca/sarg/papers/199811-qwe98/} [Accessed 21.02.2005]"
}

%Standardwerk

@inbook{ Meyer91DesignByContract,
	author = "B. Meyer",
	title = "{Design by Contract}",
	editor = "D. Mandrioli and B. Meyer",
	publisher = "Prentice Hall",
	year = "1991",
	address = "Englewood Cliffs, New Jersey",
	booktitle = "Advances in Object-Oriented Software Engineering",
	PAGES = "1--50"
}

%one of the earliest approaches in path-based reliability prediction

@InProceedings{ shooman76StructuralModelsForSoftwareReliabilitPrediction,
	author = "M. L. Shooman",
	title = "Structural models for software reliability prediction",
	pages = "268--280",
	booktitle = "Proceedings of the ~2nd~ International Conference on Software Engineering",
	year = "1976",
	publisher = "IEEE Computer Society Press",
	month = oct,
	annote = "One of the earliest approaches of path-based reliability prediction. A path is considered as (mostly independent) execution run (, such as a sequence of statement executions). For each path, the relative frequency of execution and the probability of `error' (nowadays called failure) is known."
}

%nicht klar ob wichtig, nicht verf{\"u}gbar weil das Journal nur Abstractweise erfasst ist

@Article{ Kubat89AssessingReliabilityOfModularSoftware,
	author = "Kubat, P.",
	title = "{Assessing reliability of modular software}",
	journal = "Operations Research Letters",
	year = 1989,
	publisher = "``American Mathematical Society''",
	month = feb,
	volume = 8,
	number = 1,
	pages = "35--41",
	keywords = "reliability, failure models, stochastic model applications",
	abstract = "A stochastic model which describes behavior of a modular software system is developed and the software system failure rate is derived. The optimal value for the individual module failure rate is derived, under the assumptions that a certain cost function is minimized and that the entire system is guaranteed to have an overall failure rate of a prescribed level.",
	doi = "10.1016/0167-6377(89)90031-X"
}

%nicht klar ob wichtig, eigentlich via ScienceDirect, discussion ueber markov vs poisson?

@Article{ Littlewood75AReliabilityModelForSystemsWithMarkovStructure,
	author = "Littlewood, B.",
	title = "{A reliability model for systems with Markov structure.}",
	journal = " Journal of the Royal Statistical Society. Series C. Applied Statistics",
	year = 1975,
	publisher = "``American Mathematical Society''",
	volume = 24,
	number = 2,
	pages = "172--177",
	keywords = "",
	abstract = "The author considers a system that works in continuous time by temporally homogeneous Markov switching among the subunits. Failures occur in each subunit according to a Poisson process; failures may also occur in the transitions between subsystems. The author analyzes the overall failure process and proves that it is asymptotically a Poisson process."
}

%von IEEE nicht erfasst, state-based architecture-based reliability prediction\\
% ist in der Bib

@Article{ Laprie84DependabilityEvaluationOfSoftwareSystemsInOperation,
	AUTHOR = "Laprie, J.-C.",
	TITLE = "{Dependability Evaluation of Software Systems in Operation}",
	JOURNAL = "Transactions on Software Engineering",
	YEAR = 1984,
	VOLUME = 10,
	NUMBER = 6,
	PUBLISHER = "IEEE",
	PAGES = "701-714"
}

@article{MadeiraCostaVierira00OnTheEmulationOfSoftwareFaultsBySoftwareFaultInjection,
author = {Henrique Madeira and Diamantino Costa and Marco Vieira},
title = {On the Emulation of Software Faults by Software Fault Injection},
journal = {dsn},
volume = {00},
year = {2000},
isbn = {0-7695-0707-7},
pages = {417},
doi = {10.1109/ICDSN.2000.857571},
publisher = {IEEE Computer Society},
address = {Los Alamitos, CA, USA},
}
@inproceedings{LittlewoodStrigini00SoftwareReliabilityAndDependabilityARoadmap,
	author = "Bev Littlewood and Lorenzo Strigini",
	title = "Software reliability and dependability: a roadmap",
	booktitle = "Proceedings of the Conference on The Future of Software Engineering (ICSE '00)",
	year = "2000",
	isbn = "1-58113-253-0",
	pages = "175--188",
	location = "Limerick, Ireland",
	doi = "10.1145/336512.336551",
	publisher = "ACM Press",
	address = "New York, NY, USA"
}

@inproceedings{Christmansson96GenerationOfErrorSetThatEmulatesSoftwareFaults,
 author = {J. Christmansson and R. Chillarege},
 title = {Generation of an error set that emulates software faults based on field data},
 booktitle = {FTCS '96: Proceedings of the The Twenty-Sixth Annual International Symposium on Fault-Tolerant Computing (FTCS '96)},
 year = {1996},
 isbn = {0-8186-7261-7},
 pages = {304},
 publisher = {IEEE Computer Society}
}

@inproceedings{KuengKrause07WhyDoSoftwareApplicationsFailAndWhatCanSoftwareEngineersDoAboutItACaseStudy,
	author = {Peter K\"{u}ng and Heinrich Krause},
	title = "Why Do Software Applications Fail and What Can Software Engineers Do About? It a Case Study",
	booktitle = "Proceedings IRMA Conference: Managing Worldwide Operations and Communications with Information Technology",
	year = "2007",
	isbn = "978-1-59904-929-8",
	pages = "319--322",
	location = "Vancouver",
	publisher = "IGI Publishing",
}


@misc{ShirabadMenzies05ThePromiseRepositoryOfSoftwareEngineeringDatabases,
author = "Sayyad Shirabad, J. and Menzies, T.J.",
year = "2005",
title = "{The {PROMISE} Repository of Software Engineering Databases.}",
url = "http://promise.site.uottawa.ca/SERepository",
howpublished = "School of Information Technology and Engineering, University of Ottawa, Canada"}


 @inproceedings{ChristmanssonChillarege96GenerationOfAnErrorSetThatEmulatesSoftwareFaultsBasedOnFieldData,
 author = {J. Christmansson and Ram Chillarege},
 title = {Generation of an error set that emulates software faults based on field data},
 booktitle = {Proceedings of the The Twenty-Sixth Annual International Symposium on Fault-Tolerant Computing (FTCS '96)},
 year = {1996},
 isbn = {0-8186-7261-7},
 pages = {304},
 publisher = {IEEE Computer Society},
 }

 
@InProceedings{SullivanChillarege91SoftwareDefectsAndTheirImpactOnSystemAvailabilityAStudyOfTheFieldFailuresInOperatingSystems,
  author =	"Mark Sullivan and Ram Chillarege",
  title =	"Software Defects and their Impact on System
		 Availability -- {A} Study of Field Failures in
		 Operating Systems",
  booktitle =	"Digest of the 21st International Symposium on Fault
		 Tolerant Computing (FTCS '91)",
  pages =	"2--9",
  ISBN = 	"0-8186-2150-8",
  month =	jun,
  year = 	"1991",
  publisher =	"IEEE Computer Society Press",
  comment =	"(not mine) Authors ascribe almost half the errors in IBM MVS to
		 pointer and array access errors",
}

@Article{NakajoKume91ACaseHistoryAnalysisOfSoftwareErrorCauseEffectRelationships,
    author =	"T. Nakajo and H. Kume",
	title =	"A Case History Analysis of Software Error Cause-Effect Relationships",
   journal =	"IEEE Transactions on Software Engineering",
   pages =	"830--838",
  volume =	"17",
   number =	"8",
   month =	aug,
   year = 	"1991",
   doi = "10.1109/32.83917",
}

@inproceedings{MeulenStringiniRevilla05OnTheEffectivenessOfRunTimeChecks,
  author    = {Meine van der Meulen and Lorenzo Strigini and Miguel Revilla},
  title     = {On the Effectiveness of Run-Time Checks},
  year      = {2005},
  pages     = {151-164},
  doi       = {10.1007/11563228\_12},
  crossref  = {safecomp2005},
  }

@proceedings{safecomp2005,
editor    = {Rune Winther and Bj{\o}rn Axel Gran and Gustav Dahll},
booktitle     = {Proceedings of 24th Internation Conference on Computer Safety, Reliability, and Security (SAFECOMP'05)},
publisher = {Springer},
series    = {Lecture Notes in Computer Science},
volume    = {3688},
year      = {2005},
isbn      = {3-540-29200-4},
	}

@ARTICLE{Gray90ACensusOfTandemSystemsAvvailabilityBetween1985And1990,
  author = {Gray, Jim},
  title = {A census of tandem system availability between 1985 and 1990},
  journal = {IEEE Transactions on Reliability},
  year = {1990},
  volume = {39},
  pages = {409--418},
  number = {4},
}

@inproceedings{SpohrerSoloway86AnalyzingTheHighFrequencyBugsInNovicePrograms,
 author = {James G. Spohrer and Elliot Soloway},
 title = {Analyzing the high frequency bugs in novice programs},
 booktitle = {Papers presented at the first workshop on empirical studies of programmers on Empirical studies of programmers},
 year = {1986},
 isbn = {0-89391-388-X},
 pages = {230--251},
 location = {Washington, D.C., United States},
 publisher = {Ablex Publishing Corp.},
 address = {Norwood, NJ, USA},
 note = {I have a paper copy + its in the library}
 }



@inproceedings{GarlanAllenOckerbloom95ArchitecturalMismatchOrWhyItsHardToBuildSystemsOutOfExistingParts,
 author = {David Garlan and Robert Allen and John Ockerbloom},
 title = {Architectural mismatch or why it's hard to build systems out of existing parts},
 booktitle = {Proceedings of the 17th international conference on Software engineering (ICSE '95)},
 year = {1995},
 isbn = {0-89791-708-1},
 pages = {179--185},
 location = {Seattle, Washington, United States},
 doi = {10.1145/225014.225031},
 publisher = {ACM Press},
 address = {New York, NY, USA},
}


  
@article{LeeIyer95SoftwareDependabilityInTheTandemGUARDIANSystem,
author = {Inhwan Lee and Ravishankar K. Iyer},
title = {Software Dependability in the Tandem GUARDIAN System},
journal = {IEEE Transactions on Software Engineering},
volume = {21},
number = {5},
year = {1995},
issn = {0098-5589},
pages = {455-467},
doi = {10.1109/32.387474},
publisher = {IEEE Computer Society},
address = {Los Alamitos, CA, USA},
}

@TechReport{PertetNarasimhan05CausesOfFailuresInWebApplications,
	title = "Causes of Failures in Web Applications",
	author = "Soila Pertet and Priya Narasimhan",
	institution = "School of Computer science \& Electrical and Computer Engineering",
	pages = "19",
	number = "CMU-PDL-05-109",
	year = "2005",
	month = dec,
	abstract = {This report investigates the causes and prevalence of failure in Web applications. Data was collected by surveying case studies of system failures and by examining incidents of website outages listed on technology websites such as CNET.com and eweek.com. These studies suggest that software failures and human error account for about 80\% of failures. The report also contains an appendix that serves as a quick reference for common failures observed in Web applications. This appendix lists over 40 incidents of real-world site outages, outlining how these failures were detected, the estimated downtime, and the subsequent recovery action.},
	keywords = {Web applications, causes of failure, fault chains, unplanned downtime},
	}
@article{Abbott90ResourcefulSystemsForFaultTolerance,
  author = {Russell J. Abbott},
  title = {Resourceful systems for fault tolerance, reliability, and safety},
  journal = {ACM Computing Surveys},
  volume = {22},
  number = {1},
  year = {1990},
  issn = {0360-0300},
  pages = {35--68},
  doi = {10.1145/78949.78951},
  publisher = {ACM Press}
}



@Article{Adams84OptimizingPreventiveServiceOfSoftwareProducts,
  author =	"E. N. Adams",
  title =	"Optimizing Preventive Service of Software Products",
  journal =	"IBM Journal of Research and Development",
  year = 	"1984",
  month =	jan,
}


BasiliSelby87ComparingTheEffectivenessOfSoftwareTestingStrategies.pdf


@InProceedings{KoMyers03DevelopmentAndEvaluationOfAModelOProgrammingfErrors,
  title =	"Development and evaluation of a model of programming errors",
  author =	"Andrew Jensen Ko and Brad A. Myers",
  publisher =	"IEEE Computer Society",
  year = 	"2003",
  booktitle =	"Symposium on Human-Centric Computing Languages and Environments (HCC'03)",
  ISBN = 	"0-7803-8225-0",
  pages =	"7--14",
}

@InProceedings{SchroederGibson06ALargeScaleStudyOfFailuresInHighPerformanceComputingSystems,
  title =	"A large-scale study of failures in high-performance
		 computing systems",
  author =	"Bianca Schroeder and Garth A. Gibson",
  publisher =	"IEEE Computer Society",
  year = 	"2006",
  booktitle =	"International Conference on Dependable Systems and Networks (DSN'06)",
  ISBN = 	"0-7695-2607-1",
  pages =	"249--258",
  doi =  	"10.1109/DSN.2006.5",
}
@article{Chillarege92OrthogonalDefectClassification,
	author = {R. Chillarege and I.S. Bhandari and J.K. Chaar and M.J. Halliday and D.S. Moebus and B.K. Ray and M.-Y. Wong},
	title = {Orthogonal Defect Classification-A Concept for In-Process Measurements},
	journal = {IEEE Transactions on Software Engineering},
	volume = {18},
	number = {11},
	year = {1992},
	issn = {0098-5589},
	pages = {943-956},
	doi = {10.1109/32.177364},
	publisher = {IEEE Computer Society}
}

@article{Hiller98AnExperimentalComparisonOfFaultAndErrorInjection,
	author = {M. Hiller and J. Christmansson and M. Rimen},
	title = {An Experimental Comparison of Fault and Error Injection},
	journal = {ISSRE},
	volume = {00},
	year = {1998},
	issn = {1071-9458},
	pages = {369},
	doi = {10.1109/ISSRE.1998.730903},
	publisher = {IEEE Computer Society}
}

@techreport{GriffithMulvihill99ErrorPatternsInCooperativeProgramDevelopment,
  author = "J. Griffith and C. Mulvihill",
  title = "Error Patterns in Cooperative Program Development",
  url = "citeseer.ist.psu.edu/484690.html",
  institution = "Department of Information Technology, National University of Ireland, Galway, Republic of Ireland",
  year = "1999", 
  pages = "7" }

@article{Hsueh97FaultInjectionTechniquesAndTools,
    author = "Mei-Chen Hsueh and Timothy K. Tsai and Ravishankar K. Iyer",
    title = "Fault Injection Techniques and Tools",
    journal = "IEEE Computer",
    volume = "30",
    number = "4",
    pages = "75-82",
    year = "1997",
    }

@article{Vessey89TowardATheoryOfComputerProgramBugsAnEmpiricalTest,
 author = {Iris Vessey},
 title = {Toward a theory of computer program bugs: an empirical test},
 journal = {Int. J. Man-Mach. Stud.},
 volume = {30},
 number = {1},
 year = {1989},
 issn = {0020-7373},
 pages = {23--46},
 publisher = {Academic Press Ltd.},
 address = {London, UK},
 }

@inproceedings{PerryStieg93SoftwareFaultsInEvolvingALargeRealTimeSystemACaseStudy,
  author =	"D. E. Perry and C. S. Stieg",
  title =	"Software Faults in Evolving a Large, Real-Time System",
  booktitle    = {\textbf{MISSING}},
  editor       = {\textbf{MISSING}},
  series       = {Lecture Notes on Computer Science},
  volume =	"717",
  pages =	"48--68",
  year = 	"1993",
  ISSN = 	"0302-9743",
  publisher    = {Springer-Verlag},
}


@Article{SchneidewindHoffmann79AnExperimentInSoftwareErrorDataCollectionAndAnalysis,
  title =	"An Experiment in Software Error Data Collection and
		 Analysis",
  author =	"N. F. Schneidewind and Heinz-Michael Hoffmann",
  pages =	"276--286",
  journal =	"IEEE Transactions on Software Engineering",
  ISSN = 	"0098-5589",
  year = 	"1979",
  volume =	"5",
  month =	may,
  number =	"3",
}

@inproceedings{Daran96SoftwareErrorAnalysis,
 author = {Murial Daran and Pascale Th\'{e}venod-Fosse},
 title = {Software error analysis: a real case study involving real faults and mutations},
 booktitle = {ISSTA '96: Proceedings of the 1996 ACM SIGSOFT international symposium on Software testing and analysis},
 year = {1996},
 isbn = {0-89791-787-1},
 pages = {158--171},
 location = {San Diego, California, United States},
 doi = {http://doi.acm.org/10.1145/229000.226313},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }

@inproceedings{DuMathur98CategorizationOfSoftwareErrorsThatLedToSecurityBreaches,
    author = "W. Du and A. P. Mathur",
    title = "Categorization of Software Errors That Led to Security Breaches",
    booktitle = "Proc. 21st {NIST}-{NCSC} National Information Systems Security Conference",
    pages = "392--407",
    year = "1998",
}

@TechReport{DemilloMathur95AGrammarBasedFaultClassificationSchemeAndItsApplicationToTheClassificationOfTheErrorsOfTEX,
  title =	"A Grammar Based Fault Classification Scheme and its
		 Application to the Classification of the Errors of
		 {TEX}",
  author =	"Richard A. DeMillo and Aditya P. Mathur",
  year = 	"1995",
  abstract =	"We present a novel scheme for categorizing coding
		 faults. Our grammar based scheme uses the notion of
		 syntactic transformers and is automatable. The
		 classification that results from our scheme can be used
		 by researchers investigating the effectiveness of
		 software testing techniques. In these respects our
		 scheme is significantly different from several proposed
		 in the past by other researchers. We have used it to
		 categorize the ten year log of errors of T E X reported
		 by Knuth. For each fault classified, we also provide,
		 wherever possible, the precise substring that
		 constitutes the fault. The entire error log and the
		 associated program is in public domain and hence our
		 categorization can be verified. We also provide a fault
		 classification algorithm that uses a top-down strategy
		 to find the differences between two parse trees,
		 annotated with syntactic transformers, to classify
		 various faults. We claim that such an algorithm can be
		 integrated within a software development envir...",

}




@article{ AvizienisLaprieRandellLandwehr04BasicConceptsAndTaxonomyOfDependableAndSecureComputing,
	author = "Algirdas Avi\v{z}ienis and Jean-Claude Laprie and Brian Randell and Carl Landwehr",
	title = "Basic Concepts and Taxonomy of Dependable and Secure Computing",
	journal = "Transactions on Dependable and Secure Computing",
	volume = "1",
	number = "1",
	publisher = {IEEE},
	year = "2004",
	issn = "1545-5971",
	pages = "11--33",
	doi = "10.1109/TDSC.2004.2",
}

@book{Beizer90SoftwareTestingTechniques,
  author = {Boris Beizer},
  title = {Software testing techniques},
  edition = {2nd},
  year = {1990},
  isbn = {0-442-20672-0},
  publisher = {Van Nostrand Reinhold Co.},
  address = {New York, NY, USA},
}

@techreport{Beizer01BugTaxonomyAndStatistics,
    author = "Boris Beizer and Otto Vinter",
    title = "Bug Taxonomy and Statistics",
    institution = "Software Engineering Mentor, 2630 Taastrup",
    year = "2001",
}

@misc{ShirabadMenzies05ThePromiseRepositoryOfSoftwareEngineeringDatabases,
author = "Sayyad Shirabad, J. and Menzies, T.J.",
year = "2005",
title = "{The {PROMISE} Repository of Software Engineering Databases.}",
url = "http://promise.site.uottawa.ca/SERepository",
howpublished = "School of Information Technology and Engineering, University of Ottawa, Canada"}

 


@Article{NakajoKume91ACaseHistoryAnalysisOfSoftwareErrorCauseEffectRelationships,
    author =	"T. Nakajo and H. Kume",
	title =	"A Case History Analysis of Software Error Cause-Effect Relationships",
   journal =	"IEEE Transactions on Software Engineering",
   pages =	"830--838",
  volume =	"17",
   number =	"8",
   month =	aug,
   year = 	"1991",
   doi = "10.1109/32.83917",
}

@inproceedings{Madeira00EmulationOfSoftwareFaultsBySoftwareFaultInjection,
  author = "H. Madeira and D. Costa and M. Vieira",
  title = "On the Emulation of Software Faults by Software Fault Injection",
  booktitle = "Proceedings of the International Conference on Dependable Systems and Networks (DSN'00)",
  pages = "417--426",
  month = "June",
  year = "2000",
  publisher = "IEEE",
}

@inproceedings{MeulenStringiniRevilla05OnTheEffectivenessOfRunTimeChecks,
  author    = {Meine van der Meulen and Lorenzo Strigini and Miguel Revilla},
  title     = {On the Effectiveness of Run-Time Checks},
  year      = {2005},
  pages     = {151-164},
  doi       = {10.1007/11563228\_12},
  crossref  = {safecomp2005},
  }

@proceedings{safecomp2005,
editor    = {Rune Winther and Bj{\o}rn Axel Gran and Gustav Dahll},
booktitle     = {Proceedings of 24th Internation Conference on Computer Safety, Reliability, and Security (SAFECOMP'05)},
publisher = {Springer},
series    = {Lecture Notes in Computer Science},
volume    = {3688},
year      = {2005},
isbn      = {3-540-29200-4},
	}

% in Bobliothek Oldenburg Z kyb 400 j ZA 9623   nicht ausleihbar
@Article{Knuth89TheErrorsOfTex,
  author =	"Donald E. Knuth",
  title =	"The Errors of {\TeX}",
  journal =	"Software--Practice and Experience",
  year = 	"1989",
  volume =	"19",
  number =	"7",
  pages =	"607--685",
  month =	jul,
}

@inproceedings{LeszakPerryStoll00ACaseStudyInRootCauseDefectAnalysis,
 author = {Marek Leszak and Dewayne E. Perry and Dieter Stoll},
 title = {A case study in root cause defect analysis},
 booktitle = {Proceedings of the 22nd international conference on Software engineering (ICSE '00)},
 year = {2000},
 isbn = {1-58113-206-9},
 pages = {428--437},
 location = {Limerick, Ireland},
 doi = {10.1145/337180.337232},
 publisher = {ACM},
 }

@inproceedings{MeulenBishopRevilla04AnExplorationOfSoftwareFaultsAndFailureBehaviorInALargePopulationOfPrograms,
 author = {M. J.  P.  van der Meulen and P. G. Bishop and M. Revilla},
 title = {An Exploration of Software Faults and Failure Behaviour in a Large Population of Programs},
 booktitle = {Proceedings of the 15th International Symposium on Software Reliability Engineering (ISSRE'04)},
 year = {2004},
 isbn = {0-7695-2215-7},
 pages = {101--112},
 doi = {10.1109/ISSRE.2004.7},
 publisher = {IEEE}
}

@INPROCEEDINGS{Gray85WhyDoComputersStopAndWhatCanBeDoneAboutIt,
  author = {Gray, Jim},
  title = {Why do computers stop and what can be done about it?},
  booktitle = {Proceedings of Symposium on Reliability in Distributed Software and
	Database Systems (SRDS-5)},
  year = {1986},
  pages = {3--12},
  publisher = {IEEE},
}

%in uni oldenburg library
@inproceedings{SpohrerSoloway86AnalyzingTheHighFrequencyBugsInNovicePrograms,
 author = {James G. Spohrer and Elliot Soloway},
 title = {Analyzing the high frequency bugs in novice programs},
 booktitle = {Papers presented at the first workshop on empirical studies of programmers},
 year = {1986},
 isbn = {0-89391-388-X},
 pages = {230--251},
 location = {Washington, D.C., United States},
 publisher = {Ablex Publishing Corp.},
 address = {Norwood, NJ, USA},
 }



@inproceedings{GarlanAllenOckerbloom95ArchitecturalMismatchOrWhyItsHardToBuildSystemsOutOfExistingParts,
 author = {David Garlan and Robert Allen and John Ockerbloom},
 title = {Architectural mismatch or why it's hard to build systems out of existing parts},
 booktitle = {Proceedings of the 17th international conference on Software engineering (ICSE '95)},
 year = {1995},
 isbn = {0-89791-708-1},
 pages = {179--185},
 location = {Seattle, Washington, United States},
 doi = {10.1145/225014.225031},
 publisher = {ACM Press}
}

@article{BasiliPerricone84SoftwareErrorsAndComplexity,
 author = {Victor R. Basili and Barry T. Perricone},
 title = {Software errors and complexity:  an empirical investigation},
 journal = {Communications of ACM},
 volume = {27},
 number = {1},
 year = {1984},
 issn = {0001-0782},
 pages = {42--52},
 doi = {10.1145/69605.2085},
 publisher = {ACM Press}
}

@article{FentonOhlsson00QuantitativeAnalysisOfFaultsAndFailuresInAComplexSoftwareSystem,
author = {Norman E. Fenton and Niclas Ohlsson},
title = {Quantitative Analysis of Faults and Failures in a Complex Software System},
journal = {IEEE Transactions on Software Engineering},
volume = {26},
number = {8},
year = {2000},
issn = {0098-5589},
pages = {797-814},
doi = "10.1109/32.879815",
publisher = {IEEE Computer Society}
}

@article{Fenton07PredictingSoftwareDefectsInVaryingDevelopmentLifecyclesUsingBayesianNets,
  author       = {Norman Fenton and
                  Martin Neil and
                  William Marsh and
                  Peter Hearty and
                  David Marquez and
                  Paul Krause and
                  Rajat Mishra},
  title        = {Predicting software defects in varying development
                  lifecycles using Bayesian nets},
  journal      = {Information and Software Technology},
  volume       = {49},
  pages        = {32--43},
  year         = {2007},
  keywords     = {BBN, SE}
}

@inproceedings{OstrandWeyukerBell04WhereTheBugsAre,
 author = {Thomas J. Ostrand and Elaine J. Weyuker and Robert M. Bell},
 title = {Where the bugs are},
 booktitle = {ISSTA '04: Proceedings of the 2004 ACM SIGSOFT international symposium on Software testing and analysis},
 year = {2004},
 isbn = {1-58113-820-2},
 pages = {86--96},
 location = {Boston, Massachusetts, USA},
 doi = {10.1145/1007512.1007524},
 publisher = {ACM Press},
 }
 
@inproceedings{Endres75AnAnalysisOfErrorsAndTheirCausesInSystemPrograms,
 author = {Albert Endres},
 title = {An analysis of errors and their causes in system programs},
 booktitle = {Proceedings of the international conference on Reliable software},
 year = {1975},
 pages = {327--336},
 location = {Los Angeles, California},
 doi = {10.1145/800027.808455},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }

@inproceedings{HowellVecellio01ExperiencesWithErrorHandlingInCriticalSystems,
  author       = {Charles Howell and
                  Gary Vecellio},
  title        = {Experiences with error handling in critical systems},
  booktitle    = {Advances in exception handling techniques},
  editor       = {Alexander Romanovsky and
                  Christophe Dony and
                  J{\o}rgen L. Knudsen and
                  Anand Tripathi},
  series       = {Lecture Notes on Computer Science},
  volume       = {2022},
  year         = {2001},
  isbn         = {3-540-41952-7},
  pages        = {181--188},
  publisher    = {Springer-Verlag},
}

@inproceedings{OstrandWeyuker02TheDistributionOfFaultsInALargeIndustrialSoftwareSystem,
 author = {Thomas J. Ostrand and Elaine J. Weyuker},
 title = {The distribution of faults in a large industrial software system},
 booktitle = {ISSTA '02: Proceedings of the 2002 ACM SIGSOFT international symposium on Software testing and analysis},
 year = {2002},
 isbn = {1-58113-562-9},
 pages = {55--64},
 location = {Roma, Italy},
 doi = {10.1145/566172.566181},
 publisher = {ACM Press}
}

@inproceedings{Romanovsky01ExceptionHandlingInCBSD,
  author       = {Alexander Romanovsky},
  title        = {Exception Handling in Component-Based System Development},
  booktitle    = {COMPSAC '01: Proceedings of the 25th International Computer
                  Software and Applications Conference},
  year         = {2001},
  pages        = {580-588},
  location     = {Chicago, Illinois},
  publisher    = {IEEE Computer Society Press}
}

@article{Rosenblum95APracticalApproachToProgrammingWithAssertions,
  author       = {David S. Rosenblum},
  title        = {A Practical Approach to Programming With Assertions},
  journal      = {IEEE Transactions on Software Engineering},
  volume       = {21},
  number       = {1},
  year         = {1995},
  issn         = {0098-5589},
  pages        = {19--31},
  doi          = {10.1109/32.341844},
}

% 
@inproceedings{NagappanBallZeller06MiningMetricsToPredictComponentFailures,
 author = {Nachiappan Nagappan and Thomas Ball and Andreas Zeller},
 title = {Mining metrics to predict component failures},
 booktitle = {ICSE '06: Proceeding of the 28th international conference on Software engineering},
 year = {2006},
 isbn = {1-59593-375-1},
 pages = {452--461},
 location = {Shanghai, China},
 doi = {http://doi.acm.org/10.1145/1134285.1134349},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }


@book{Voas98SoftwareFaultInjection,
  author       = {Jeffrey M. Voas and Gary McGraw},
  title        = {Software Fault Injection: Inoculating Programs Against Errors},
  publisher    = {John Wiley \& Sons, Inc.},
  year         = {1998},
  isbn         = {0471183814},
}

@article{Voas97ACrystalBallForSoftwareLiability,
    author = "Jeffrey M. Voas and Gary McGraw and Lora Kassab and Larry Voas",
    title = "A 'Crystal Ball' for Software Liability",
    journal = "IEEE Computer",
    volume = "30",
    number = "6",
    pages = "29-36",
    year = "1997",
}

@book{Zeller05WhyProgramsFail,
  author       = {Andreas Zeller},
  title        = {Why Programs Fail: A Guide to Systematic Debugging},
  publisher    = {Morgan Kaufmann},
  year         = {2005},
  month        = {October},
  isbn         = {1558608664},
}
  

@article{johnson1983ebc,
  title={{An Effective Bug Classification Scheme Must Take the Programmer into Account}},
  author={Johnson, W.L.},
  journal={Proceedings of the Workshop on High-Level Debugging, Palo Alto, CA},
  year={1983}
}

@article{spohrer1985gpa,
  title={{A Goal/Plan Analysis of Buggy Pascal Programs}},
  author={Spohrer, J.C. and Soloway, E. and Pope, E.},
  journal={Human-Computer Interaction},
  volume={1},
  number={2},
  pages={163--207},
  year={1985},
  publisher={Lawrence Earlbaum}
}

Marick, B., "A Survey of Software Fault Surveys", Technical Report No. UIUCDCS-R-90-1651, Dept. of Computer Science. U. Illinois at Urbana-Champaign, December 1990.

@techreport{marick,
  author       = {Marick, B},
  title        = {A Survey of Software Fault Surveys},
  institution    = {Dept. of Computer Science. U. Illinois at Urbana-Champaign},
  year         = {1990},
  month        = dec
}
@article{PattipatiLiBlom93AUnifiedFrameworkForThePerformabilityEvaluationOfFaultTolerantComputerSystems,
 author = {Pattipati, K.R. and  Li, Y. and  Blom, H.A.P.},
 title = {A unified framework for the performability evaluation of fault-tolerant computer systems},
 journal = {Transactions on Computers},
 volume = {42},
 number = {3},
 month= mar,
 year = 1993,
 issn = {0018-9340},
 pages = {312--326},
 doi = {10.1109/12.210174},
 publisher = {IEEE},
 abstract = {The problem of evaluating the performability density and distribution of degradable computer systems is considered. A generalized model of performability is considered, wherein the dynamics of configuration modes are modeled as a nonhomogeneous Markov process, and the performance rate in each configuration mode can be time dependent. The key to the development of a unifying mathematical framework is the introduction of two related performability processes: the forward performability process over the interval [0,t], and the performability-to-go process over the interval [t,T], where T is the mission time. Stochastic differential equations techniques show that the joint density of the forward performability and configuration states satisfies a linear, hyperbolic partial differential equation (PDE) with time-dependent coefficients that runs forward in time, while the performability-to-go process satisfies an adjoint PDE running reverse in time. A numerical method for solving the PDEs is presented and is illustrated with examples}
 }


@inproceedings{Meyer95PerformabilityEvaluationWhereItIsAndWhatLiesAhead,
 author = {Meyer, J.F.},
 title = {Performability evaluation: where it is and what lies ahead},
 booktitle = {Proceedings of the International Symposium Computer Performance and Dependability},
 year = {1995},
 month = apr,
 doi = {10.1109/IPDS.1995.395818},
 pages = {334--343},
 location = {Erlangen, Germany},
 publisher = {IEEE},
 abstract = {The concept of performability emerged from a need to assess a system's ability to perform when performance degrades as a consequence of faults. After almost 20 years of effort concerning its theory, techniques, and applications, performability evaluation is currently well understood by the many people responsible for its development. On the other hand, the utility of combined performance-dependability measures has yet to be appreciably recognized by the designers of contemporary computer systems. Following a review of what performability means, we discuss its present state with respect to both scientific and engineering contributions. In view of current practice and the potential design applicability of performability evaluation, we then point to some advances that are called for if this potential is indeed to be realized}
 }

@Article{SouzaESilvaGail92PerformabilityAnalysisOfComputerSystemsFromModelSpacificationToSolution,
  title = "Performability Analysis of Computer Systems: From Model Spacification to Solution",
  author = "Edmundo de Souza e Silva and H. Richard Gail",
  journal =	"Performance Evaluation",
  year = "1992",
  number = "3-4",
  volume = "14",
  pages = "157--196",
}

@Article{Meyer92PerformabilityARetrospectiveAndSomePointersToTheFuture,
  title =	"Performability: {A} Retrospective and Some Pointers to the Future",
  author =	"John F. Meyer",
  journal =	"Performance Evaluation",
  year = 	"1992",
  number =	"3-4",
  volume =	"14",
  pages =	"139--156",
}

@INCOLLECTION{TrivediMalhotra93ReliabilityAndPerformabilityTechniquesAndToolsASurvey,
 author = {Kishor S. Trivedi and Manish Malhotra},
 title = {Reliability and Performability Techniques and Tools: A Survey},
 booktitle = {Proc. 7th ITG/GI Conference on
    Measurement, Modelling and Evaluation of Computer and Communication Systems},
 publisher = {Springer},
 year = {1993},
 pages = {27--48},
 month = {September},
 journal = {Proc. 7th ITG/GI Conference on
    Measurement, Modelling and Evaluation of Computer and Communication Systems},
} 

**************************************
* Software Metrics in Generl
**************************************

@inproceedings{FentonNeil00SoftwareMetricsRoadmap,
 author = {Norman E. Fenton and Martin Neil},
 title = {Software metrics: roadmap},
 booktitle = {Proceedings of the Conference on The Future of Software Engineering (ICSE '00)},
 year = {2000},
 isbn = {1-58113-253-0},
 pages = {357--370},
 location = {Limerick, Ireland},
 doi = {10.1145/336512.336588},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }


**************************************
* survivability
**************************************
@TechReport{KnightSullivan00OnTheDefinitionOfSurvivability,
  title =	"On The Definition Of Survivability",
  author =	"John C. Knight and Kevin J. Sullivan",
  year = 	"2000",
  month =	jul,
  abstract = "The computer systems that provide the information
		 underpinnings for critical infrastructure applications,
		 such as banking systems and telecommunications
		 networks, have become essential to the operation of
		 those applications. Failure of the information systems
		 will often cause a major loss of service, and so their
		 dependability has become a major concern. Current
		 facets of dependability, such as reliability and
		 availability, do not address the needs of critical
		 information systems because they do not include the
		 notion of degraded service as an explicit requirement.
		 What is needed is a precise notion of what forms of
		 degraded service are acceptable to the application,
		 under what circumstances each form is most useful, and
		 the fraction of time degraded service levels are
		 acceptable. This concept is termed survivability and in
		 this paper we show that it is a necessary new facet of
		 dependability. We present a formal definition of
		 survivability and present an example of its use.",
  citeseer-references = "oai:CiteSeerPSU:352241; oai:CiteSeerPSU:504687;
		 oai:CiteSeerPSU:65989",
  institution ="Department of Computer Science,
		 University of Virginia",
  oai =  	"oai:CiteSeerPSU:529418",
  URL =  	"http://citeseer.ist.psu.edu/knight00definition.html;
		 http://www.cs.virginia.edu/~jck/publications/tech.report.2000.33.pdf",
}


***************************************
* Not available
***************************************

% online but science direct (no account)
@article{Meyer92PerformabilityARetrospectiveAndSomePointersToTheFuture,
  author    = {John F. Meyer},
  title     = {Performability: A Retrospective and Some Pointers to the Future},
  journal   = {Performance Evalutation},
  volume    = {14},
  number    = {3-4},
  year      = {1992},
  pages     = {139-156},
  publisher = {Elsevier Science},
  doi = {10.1016/0166-5316(92)90002-X},
  abstract = {As computing and communication systems become physically and logically more complex, their evaluation calls for continued innovation with regard to measure definition, model construction/solution, and tool development. In particular, the performance of such systems is often degradable, i.e., internal or external faults can reduce the quality of a delivered service even though that service, according to its specification, remains proper (failure-free). The need to accommodate this property, using model-based evaluation methods, was the raison d'\^etre for the concept of performability. To set the stage for additional progress in its development, we present a retrospective of associated theory, techniques, and applications resulting from work in this area over the past decade and a half. Based on what has been learned, some pointers are made to future directions which might further enhance the effectiveness of these methods and broaden their scope of applicability.}
}

@inproceedings{JerdingStaskoBall97{VisualizingInteractionsInProgramExecutions, 
 author = {Dean F. Jerding and John T. Stasko and Thomas Ball},
 title = {Visualizing interactions in program executions},
 booktitle = {ICSE '97: Proceedings of the 19th international conference on Software engineering},
 year = {1997},
 isbn = {0-89791-914-9},
 pages = {360--370},
 location = {Boston, Massachusetts, United States},
 doi = {10.1145/253228.253356},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }

 @inproceedings{Reiss03VisualizingJavaInAction,
 author = {Steven P. Reiss},
 title = {Visualizing Java in action},
 booktitle = {Proceedings of the 2003 Symposium on Software visualization (SoftVis'03)},
 year = {2003},
 isbn = {1-58113-642-0},
 pages = {57--65},
 location = {San Diego, California},
 doi = {10.1145/774833.774842},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }

 @inproceedings{PauwSevitsky99VisualizingReferencePatternsForSolvingMemoryLeaksInJava,
 author = {Wim De Pauw and Gary Sevitsky},
 title = {Visualizing Reference Patterns for Solving Memory Leaks in Java},
 booktitle = {ECOOP '99: Proceedings of the 13th European Conference on Object-Oriented Programming},
 year = {1999},
 isbn = {3-540-66156-5},
 pages = {116--134},
 publisher = {Springer-Verlag},
 address = {London, UK},
 }

 @inproceedings{PauwJensenMitchellSevitskyVlissidesYang02VisualizingTheExecutionOfJavaPrograms,
 author = {Wim De Pauw and Erik Jensen and Nick Mitchell and Gary Sevitsky and John M. Vlissides and Jeaha Yang},
 title = {Visualizing the Execution of Java Programs},
 booktitle = {Revised Lectures on Software Visualization, International Seminar},
 year = {2002},
 isbn = {3-540-43323-6},
 pages = {151--162},
 publisher = {Springer-Verlag},
 address = {London, UK},
 }

 @inproceedings{WangWangBrownDriesenDufourHendrenVerbrugge03EVolveAnOpenExtensibleSoftwareVisualizationFramework,
 author = {Qin Wang and Wei Wang and Rhodes Brown and Karel Driesen and Bruno Dufour and Laurie Hendren and Clark Verbrugge},
 title = {EVolve: an open extensible software visualization framework},
 booktitle = {SoftVis '03: Proceedings of the 2003 ACM symposium on Software visualization},
 year = {2003},
 isbn = {1-58113-642-0},
 pages = {37--ff},
 location = {San Diego, California},
 doi = {http://doi.acm.org/10.1145/774833.774839},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }


@inproceedings{ReissRenieris05JoveJavaAsItHappens,
 author = {Steven P. Reiss and Manos Renieris},
 title = {Jove: java as it happens},
 booktitle = {SoftVis '05: Proceedings of the 2005 ACM symposium on Software visualization},
 year = {2005},
 isbn = {1-59593-073-6},
 pages = {115--124},
 location = {St. Louis, Missouri},
 doi = {10.1145/1056018.1056034},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }
********************************
* testing during runtime BIT
********************************

@article{WangKingPatelPatelDorling99OnCopingWithRealTimeSoftwareDynamicInconsistencyByBuiltinTests,
    author = "Wang, Y. and King, G. and Patel, D. and Patel, S. and Dorling, A.",
    title = "On Coping with Real-Time Software Dynamic Inconsistency by Built-in Tests",
    journal = "Annals of Software Engineering",
    volume = "7",
    pages = "283--296",
    year = "1999",
    publisher = "Oxford",
    url = "http://www.component-plus.org/pdf/ase-vol7.pdf" }

%url access 05-06-14
@TECHREPORT{EdlerHoernstein03FinalReport,
    author = "H\aa{}kan Edler and Jonas Hörnstein",
    title = "Final report",
    institution = "Component+ Project",
    year = "2003",
    url = "http://www.component-plus.org/pdf/reports/Final\%20report\%201.1.pdf", 
    }

@Book{Beizer90SoftwareTestingTechniques,
  author =	"B. Beizer",
  title =	"Software Testing Techniques",
  publisher =	"Van Nostrand Reinhold",
  year = 	"1990",
  address =	"New York",
  edition =	"2nd",
  topic =	"testing",
}

%noPublisherNoPages
@inproceedings{AtkinsonGross02BuiltInContractTestingInModelDrivenComponentBasedDevelopment,
  author = "Atkinson, C. and Gross, H.-G.",
  title = "Built-in Contract Testing in Model-Driven, Component-Based Development",
  YEAR      = 2002,
  MONTH     = apr,
  BOOKTITLE = {Workshop on Component-Based Development Processes (ICSR-7)},
  ABSTRACT  ="Assembling new software systems from prefabricated components is
an attractive alternative to traditional software engineering practices which
promises to increase reuse and reduce development costs. However, these
benefits will only occur if separately developed components can be made to
work effectively together with reasonable effort. Lengthy and costly in-situ
verification and acceptance testing directly undermines the benefits of independent
component fabrication and late system integration. This paper describes
an approach for reducing manual system verification effort by equipping
components with the ability to check their execution environments at runtime.
When deployed in new systems, built-in test (BIT) components check
the contract-compliance of their server components, including the run-time
system, and thus automatically verify their ability to fulfill their own obligations.
Enhancing traditional component-based development methods with
built-in contract testing in this way reduces the costs associated with component
assembly, and thus makes the ``plug-and-play'' vision of component-based
development closer to practical reality.",
  url = "http://www.idt.mdh.se/CBprocesses/papers/05\%20Gross.pdf"
}